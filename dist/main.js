/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game.js */ \"./src/scripts/game.js\");\n\nconst game = new _scripts_game_js__WEBPACK_IMPORTED_MODULE_0__.Game();\n\n// function playerHand() {\n//     // each player\n//     let handCount = 0;\n//     for (let i = 1; i < numPlayers + 1; i++) {\n//         for (let j = 1; j < 5; j++) {\n//             const replace = document.getElementById(`p${i}-${j}`)\n//             if (replace.src.endsWith(\"/images/cardback.png\")) {\n//                 const player = document.getElementById(`p${i}`)\n//                 player.textContent = \"incomplete hand\"\n//                 break\n//             }\n//         }\n//         // if reaching here the hands are complete\n//     }\n//     let complete1 = true\n//     let complete2 = true\n//     for (let j = 1; j < 5; j++) {\n//         const replace = document.getElementById(`p1-${j}`)\n//         if (replace.src.endsWith(\"/images/cardback.png\")) {\n//             complete1 = false\n//         }\n//     }\n//     for (let j = 1; j < 5; j++) {\n//         const replace = document.getElementById(`p2-${j}`)\n//         if (replace.src.endsWith(\"/images/cardback.png\")) {\n//             complete2 = false\n//         }\n//     }\n//     if (complete1 && !complete2) {\n//         const player = document.getElementById(`p1`)\n//         player.textContent = \"Waiting for p2\"\n//     }\n//     if (complete2 && !complete1) {\n//         const player = document.getElementById(`p2`)\n//         player.textContent = \"Waiting for p1\"\n//     }\n\n//     if (complete2 && complete1) {\n//         equityCalc()\n//     }\n// }\n\n// function equityCalc() {\n\n//     let boardFull = true;\n//     for (let i = 1; i < 6; i++) {\n//         // replace is the board position\n//         const replace = document.getElementById(`board${i}`)\n//         if (replace.src.endsWith(\"/images/cardback.png\")) {\n//             boardFull = false\n//         }\n//     }\n\n//     if (boardFull) {\n//         let b1 = changeSrcToId(document.getElementById(`board1`).src)\n//         let b2 = changeSrcToId(document.getElementById(`board2`).src)\n//         let b3 = changeSrcToId(document.getElementById(`board3`).src)\n//         let b4 = changeSrcToId(document.getElementById(`board4`).src)\n//         let b5 = changeSrcToId(document.getElementById(`board5`).src)\n\n//         let p1 = changeSrcToId(document.getElementById(`p1-1`).src)\n//         let p2 = changeSrcToId(document.getElementById(`p1-2`).src)\n//         let p3 = changeSrcToId(document.getElementById(`p1-3`).src)\n//         let p4 = changeSrcToId(document.getElementById(`p1-4`).src)\n\n//         let p5 = changeSrcToId(document.getElementById(`p2-1`).src)\n//         let p6 = changeSrcToId(document.getElementById(`p2-2`).src)\n//         let p7 = changeSrcToId(document.getElementById(`p2-3`).src)\n//         let p8 = changeSrcToId(document.getElementById(`p2-4`).src)\n\n//         let board = []\n//         let player1 = []\n//         let player2 = []\n\n//         b1.then(function(result) {\n//             board.push(result)\n//         });\n//         b2.then(function(result) {\n//             board.push(result)\n//         });\n//         b3.then(function(result) {\n//             board.push(result)\n//         });\n//         b4.then(function(result) {\n//             board.push(result)\n//         });\n//         b5.then(function(result) {\n//             board.push(result)\n//         });\n\n//         p1.then(function(result) {\n//             player1.push(result)\n//         });\n//         p2.then(function(result) {\n//             player1.push(result)\n//         });\n//         p3.then(function(result) {\n//             player1.push(result)\n//         });\n//         p4.then(function(result) {\n//             player1.push(result)\n//         });\n//         p5.then(function(result) {\n//             player2.push(result)\n//         });\n//         p6.then(function(result) {\n//             player2.push(result)\n//         });\n//         p7.then(function(result) {\n//             player2.push(result)\n//         });\n//         p8.then(function(result) {\n//             player2.push(result)\n//         });\n\n//         let win = winner(player1, player2, board)\n//         if (JSON.stringify(win) == JSON.stringify(\"p1\")) {\n//             const player1 = document.getElementById(`p1`)\n//             player1.textContent = \"Winner\"\n\n//             const player2 = document.getElementById(`p2`)\n//             player2.textContent = \"Loser\"\n//         } else {\n//             const player1 = document.getElementById(`p1`)\n//             player1.textContent = \"Loser\"\n\n//             const player2 = document.getElementById(`p2`)\n//             player2.textContent = \"Winner\"\n//         }\n//     } else {\n//         let p1 = changeSrcToId(document.getElementById(`p1-1`).src)\n//         let p2 = changeSrcToId(document.getElementById(`p1-2`).src)\n//         let p3 = changeSrcToId(document.getElementById(`p1-3`).src)\n//         let p4 = changeSrcToId(document.getElementById(`p1-4`).src)\n\n//         let p5 = changeSrcToId(document.getElementById(`p2-1`).src)\n//         let p6 = changeSrcToId(document.getElementById(`p2-2`).src)\n//         let p7 = changeSrcToId(document.getElementById(`p2-3`).src)\n//         let p8 = changeSrcToId(document.getElementById(`p2-4`).src)\n\n//         let player1 = []\n//         let player2 = []\n\n//         p1.then(function(result) {\n//             player1.push(result)\n//         });\n//         p2.then(function(result) {\n//             player1.push(result)\n//         });\n//         p3.then(function(result) {\n//             player1.push(result)\n//         });\n//         p4.then(function(result) {\n//             player1.push(result)\n//         });\n//         p5.then(function(result) {\n//             player2.push(result)\n//         });\n//         p6.then(function(result) {\n//             player2.push(result)\n//         });\n//         p7.then(function(result) {\n//             player2.push(result)\n//         });\n//         p8.then(function(result) {\n//             player2.push(result)\n//         });\n//         let count1 = 0\n//         let count2 = 0\n//         for (let i = 0; i < 2000; i++) {\n//             let board2 = randomBoard(player1, player2)\n//             let b = board2\n//             // let win = winner(player1, player2, b)\n\n//             // if (JSON.stringify(win) == JSON.stringify(\"p1\")) {\n//             //     count1 += 1;\n//             // } else {\n//             //     count2 += 1;\n//             // }\n//         }\n//         const pl1 = document.getElementById(`p1`)\n//         let eq = (Math.random() * (80-50) + 50).toFixed(2)\n//         pl1.textContent = `Equity = ${eq}%`\n\n//         const pl2 = document.getElementById(`p2`)\n//         let eq2 = (100 - eq).toFixed(2)\n//         pl2.textContent = `Equity = ${eq2}%`\n//     }\n// }\n\n// function randomBoard(h1, h2) {\n//     let newDeck = remainingDeck(h1, h2)\n//     let board = []\n//     for (let i = 0; i < 5; i++) {\n//         const j = Math.floor(Math.random() * (newDeck.length));\n//         board.push(newDeck[j])\n//     }\n//     return board\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/board.js":
/*!******************************!*\
  !*** ./src/scripts/board.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Board: function() { return /* binding */ Board; }\n/* harmony export */ });\nconst KEY = {\n  1: \"No Pair\",\n  2: \"One Pair\",\n  3: \"Two Pair\",\n  4: \"Three of a Kind\",\n  5: \"Straight\",\n  6: \"Flush\",\n  7: \"Full House!\",\n  8: \"Four of a Kind!!\",\n  9: \"Straight Flush!!!\",\n  10: \"ROYAL FLUSH!!!\"\n};\nfunction Board(deck) {\n  this.boardPos = {\n    'p1-1': 'open',\n    'p1-2': 'open',\n    'p1-3': 'open',\n    'p1-4': 'open',\n    'p2-1': 'open',\n    'p2-2': 'open',\n    'p2-3': 'open',\n    'p2-4': 'open',\n    'p3-1': '',\n    'p3-2': '',\n    'p3-3': '',\n    'p3-4': '',\n    'p4-1': '',\n    'p4-2': '',\n    'p4-3': '',\n    'p4-4': '',\n    'p5-1': '',\n    'p5-2': '',\n    'p5-3': '',\n    'p5-4': '',\n    'p6-1': '',\n    'p6-2': '',\n    'p6-3': '',\n    'p6-4': '',\n    'board1': 'open',\n    'board2': 'open',\n    'board3': 'open',\n    'board4': 'open',\n    'board5': 'open',\n    'highlight': 'p1-1'\n  };\n  this.deck = deck;\n  this.onBoard = [];\n  this.addClickBoard();\n  this.createReset();\n  this._initialBorder();\n}\nBoard.prototype.addClickBoard = function () {\n  //FIX: remove from hand\n  //FIX: Create a winner border variable to check\n  for (let pos in this.boardPos) {\n    if (pos !== 'highlight') {\n      const newPos = document.getElementById(pos);\n      newPos.addEventListener(\"click\", e => {\n        if (this.boardPos[e.target.id] === 'open') {\n          this._removeBorder();\n          this._addBorder(e.target);\n        } else if (!(this.boardPos[e.target.id] === '')) {\n          this.removeFromBoard(e.target.id);\n          this._addBorder(e.target);\n        } else {\n          console.log(\"add player first!\");\n        }\n      });\n    }\n    // newPos.id = p1-1\n  }\n};\n\nBoard.prototype.full = function () {\n  return this.onBoard.length === 5;\n};\nBoard.prototype.createReset = function () {\n  const res = document.getElementById('resetButton');\n  res.addEventListener(\"click\", () => {\n    for (let i = 1; i < 7; i++) {\n      if (this.deck[`p${i}`].active) this._removePlayers(`p${i}`);\n      if (i < 3) {\n        this._addPlayers(`p${i}`);\n      }\n    }\n    this.clearBoard();\n    this._createNextBorder();\n  });\n};\nBoard.prototype.addToBoard = function (cardKey) {\n  let playerNum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // add card to board Qh\n  if (this.boardPos['highlight'] === '') {\n    console.log('everything full');\n  } else {\n    this.boardPos[this.boardPos['highlight']] = 'taken';\n    this.deck.cardDeck[cardKey] = 'board';\n    this.swapImg(this.boardPos['highlight'], cardKey);\n    if (this.boardPos.highlight[0] === 'b') {\n      this.pushOnBoard(cardKey);\n      // FIX, update odds not just when board gets full but when a hand gets full and the board is full\n      if (this.full()) {\n        this._clearWinnerBorders();\n        const bestHands = {};\n        for (let i = 1; i < 7; i++) {\n          if (this.deck[`p${i}`].handFull()) {\n            bestHands[`p${i}`] = this.deck.handtype.bestHand(this.deck[`p${i}`].playerHand, this.onBoard);\n          }\n        }\n        // FIX: Should only do this if all players have full hand\n        const winner = this.deck.handtype.winner(bestHands);\n        if (winner) this.highlightWinner(winner);\n      }\n    }\n    // if (this.boardPos.highlight[0] === 'p') {\n    //     this.deck[this.boardPos['highlight'].slice(0, 2)]\n    //     // FIX, update odds not just when board gets full but when a hand gets full and the board is full\n    //     if (this.full()) {\n    //         // FIX: Just being used to test hands, should test entire board\n    //         const bestHands = {}\n    //         for (let i = 1; i < 7; i++) {\n    //             if (this.deck[`p${i}`].handFull()) {\n    //                 bestHands[`p${i}`] = (this.deck.handtype.bestHand(this.deck[`p${i}`].playerHand, this.onBoard))\n    //             }\n    //         }\n    //         this.highlightWinner(this.deck.handtype.winner(bestHands))\n    //     }\n    // }\n    //  <img src=\"./images/cardback.png\" id=\"p1-1\">\n    this._createNextBorder(playerNum);\n  }\n};\nBoard.prototype.swapImg = function (pos1, pos2) {\n  const changePos = document.getElementById(pos1);\n  const tempSrc = changePos.src;\n  const changeNextPos = document.getElementById(pos2);\n  changePos.src = changeNextPos.src;\n  changeNextPos.src = tempSrc;\n};\nBoard.prototype.pushOnBoard = function (cardKey) {\n  this.onBoard.push(cardKey);\n};\nBoard.prototype.pushPlayerHand = function () {};\nBoard.prototype.removePlayerHand = function () {};\nBoard.prototype.removeFromBoard = function (boardKey) {\n  const itemToRemove = document.getElementById(boardKey);\n  const item = this.changeSrcToId(itemToRemove.src);\n  this.swapImg(boardKey, item);\n  this.boardPos[boardKey] = 'open';\n  this.deck.cardDeck[item] = 'deck';\n  const index = this.onBoard.indexOf(item);\n  if (index !== -1) {\n    this.onBoard.splice(index, 1);\n  }\n  for (let i = 1; i < 7; i++) {\n    let player = this.deck[`p${i}`].playerHand;\n    let index = player.indexOf(item);\n    if (index !== -1) {\n      player.splice(index, 1);\n    }\n  }\n};\nBoard.prototype.clearBoard = function () {\n  for (let i = 1; i < 6; i++) {\n    if (this.boardPos[`board${i}`] === 'taken') this.removeFromBoard(`board${i}`);\n  }\n  this._clearWinnerBorders();\n};\nBoard.prototype.boardCards = function () {\n  const b1 = document.getElementById('board1');\n  const b2 = document.getElementById('board2');\n  const b3 = document.getElementById('board3');\n  const b4 = document.getElementById('board4');\n  const b5 = document.getElementById('board5');\n  if (b1 && b2 && b3 && b4 && b5) {\n    const pos1 = this.changeSrcToId(b1.src);\n    const pos2 = this.changeSrcToId(b2.src);\n    const pos3 = this.changeSrcToId(b3.src);\n    const pos4 = this.changeSrcToId(b4.src);\n    const pos5 = this.changeSrcToId(b5.src);\n  }\n};\nBoard.prototype._addBorder = function (pos) {\n  this._removeBorder();\n  this.boardPos['highlight'] = pos.id;\n  pos.style.border = '2px solid red';\n};\nBoard.prototype._removeBorder = function () {\n  //FIX, need remove red borders and remove blue borders\n  const prevBorder = document.getElementById(this.boardPos['highlight']);\n  if (prevBorder && prevBorder.style.border !== '4px solid blue') {\n    prevBorder.removeAttribute('style');\n  }\n  this.boardPos.highlight = '';\n};\nBoard.prototype._clearWinnerBorders = function () {\n  for (let pos in this.boardPos) {\n    const nextBorder = document.getElementById(pos);\n    if (nextBorder) nextBorder.removeAttribute('style');\n  }\n};\nBoard.prototype._createNextBorder = function () {\n  let playerNum = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  // FIX, adding last item to end of board creates next border\n  // playerNum should tell what player to make next border for\n  // 0 means add to next available space\n  // -1 means add to board\n  // num means add to that player\n  if (playerNum > 0 && this.deck['p' + playerNum].handLength() === 4) {\n    for (let pos in this.boardPos) {\n      if (this.boardPos[pos] === 'open') {\n        const nextBorder = document.getElementById(pos);\n        return this._addBorder(nextBorder);\n      }\n    }\n  } else if (playerNum === -1 && this.full()) {\n    // FIX, CHECK IF PLAYERS HANDS ARE FULL THEN DONT GENERATE\n    for (let pos in this.boardPos) {\n      if (this.boardPos[pos] === 'open') {\n        const nextBorder = document.getElementById(pos);\n        return this._addBorder(nextBorder);\n      }\n    }\n  } else if (playerNum === -1) {\n    for (let pos in this.boardPos) {\n      if (pos[0] === 'b' && this.boardPos[pos] === 'open') {\n        const nextBorder = document.getElementById(pos);\n        return this._addBorder(nextBorder);\n      }\n    }\n  } else if (playerNum !== 0) {\n    for (let pos in this.boardPos) {\n      if (Number(pos[1]) === playerNum && this.boardPos[pos] === 'open') {\n        const nextBorder = document.getElementById(pos);\n        return this._addBorder(nextBorder);\n      }\n    }\n  } else {\n    for (let pos in this.boardPos) {\n      if (this.boardPos[pos] === 'open') {\n        const nextBorder = document.getElementById(pos);\n        return this._addBorder(nextBorder);\n      }\n    }\n  }\n  // if no open spaces\n\n  this._removeBorder();\n  this.boardPos.highlight = '';\n  // -1 when no empty spaces\n  return -1;\n};\nBoard.prototype._createNewPlayerBorder = function (playerNum) {\n  const nextBorder = document.getElementById(`${playerNum}-1`);\n  this._addBorder(nextBorder);\n};\nBoard.prototype._initialBorder = function () {\n  const initial = document.getElementById('p1-1');\n  this._addBorder(initial);\n};\nBoard.prototype._getHighlightedPos = function () {\n  const pos = this.boardPos.highlight;\n  if (pos[0] === 'p') {\n    // returns player\n    return pos.slice(0, 2);\n  } else {\n    return -1;\n  }\n};\nBoard.prototype._addPlayers = function (playerNum) {\n  //p1 boardPos[0-3], p2 [4-7]\n  for (let key in this.boardPos) {\n    if (key[1] === playerNum[1]) {\n      const pos = document.querySelector(`.${key}`);\n      pos.classList.remove('blur');\n      this.boardPos[key] = 'open';\n    }\n  }\n  const player = document.getElementById(playerNum);\n  const text = player.childNodes[2];\n  const img = player.querySelector('img');\n  img.src = \"./images/icons8-minus-50.png\";\n  text.nodeValue += ' equity: ';\n};\nBoard.prototype._removePlayers = function (playerNum) {\n  //p1 boardPos[0-3], p2 [4-7]\n  //  FIX: when player removed fix text from equity to just p5\n  for (let key in this.boardPos) {\n    if (key[1] === playerNum[1]) {\n      const pos = document.querySelector(`.${key}`);\n      pos.classList.add('blur');\n      if (this.boardPos[key] !== 'open') this.removeFromBoard(key);\n      this.boardPos[key] = '';\n      this._createNextBorder();\n    }\n  }\n  const player = document.getElementById(playerNum);\n  const text = player.childNodes[2];\n  const img = player.querySelector('img');\n  img.src = \"./images/icons8-plus-button-50.png\";\n  text.nodeValue = `P${playerNum[1]}`;\n};\nBoard.prototype.changeSrcToId = function (src) {\n  let val;\n  let word;\n  let suit;\n  if (src.includes('spades')) {\n    suit = \"s\";\n    word = src.slice(-16);\n  } else if (src.includes('diamonds')) {\n    suit = \"d\";\n    word = src.slice(-18);\n  } else if (src.includes('hearts')) {\n    suit = \"h\";\n    word = src.slice(-16);\n  } else if (src.includes('clubs')) {\n    suit = \"c\";\n    word = src.slice(-15);\n  }\n  if (word) {\n    if (word.includes('2')) {\n      val = \"2\";\n    } else if (word.includes('3')) {\n      val = \"3\";\n    } else if (word.includes('4')) {\n      val = \"4\";\n    } else if (word.includes('5')) {\n      val = \"5\";\n    } else if (word.includes('6')) {\n      val = \"6\";\n    } else if (word.includes('7')) {\n      val = \"7\";\n    } else if (word.includes('8')) {\n      val = \"8\";\n    } else if (word.includes('9')) {\n      val = \"9\";\n    } else if (word.includes('10')) {\n      val = \"10\";\n    } else if (word.includes('J')) {\n      val = \"J\";\n    } else if (word.includes('Q')) {\n      val = \"Q\";\n    } else if (word.includes('K')) {\n      val = \"K\";\n    } else if (word.includes('A')) {\n      val = \"A\";\n    }\n  } else {\n    return false;\n  }\n  return `${val}${suit}`;\n};\nBoard.prototype.changeIdToSrc = function (id) {\n  let v;\n  let s;\n  if (id.length == 2) {\n    v = id[0];\n    s = id[1];\n  } else {\n    v = 10;\n    s = id[2];\n  }\n  let suit;\n  if (s == \"c\") {\n    suit = \"clubs\";\n  } else if (s == \"d\") {\n    suit = \"diamonds\";\n  } else if (s == \"s\") {\n    suit = \"spades\";\n  } else if (s == \"h\") {\n    suit = \"hearts\";\n  }\n  return `./images/${v}_of_${suit}.png`;\n};\nBoard.prototype.highlightWinner = function (winner) {\n  // FIX: Split pot winners\n  const player = Object.keys(winner)[0];\n  const handVal = winner[player][0];\n  const handString = KEY[handVal];\n  const hand = winner[player][1];\n  const p = document.getElementById(player);\n  const text = p.childNodes[2];\n  text.nodeValue = `WINNER: ${handString}`;\n  const allImages = document.querySelectorAll('img');\n  allImages.forEach(img => {\n    const id = this.changeSrcToId(img.src);\n    if (hand.indexOf(id) !== -1) {\n      img.style.border = '4px solid blue';\n    }\n  });\n\n  // const imgElement = document.querySelector(`img[${src}]`);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SyxDQUFDO0VBQ2xERCxTQUFTLENBQUNFLE9BQU8sQ0FBQ2xCLEdBQUcsSUFBSTtJQUNyQixNQUFNM0UsRUFBRSxHQUFHLElBQUksQ0FBQzRDLGFBQWEsQ0FBQytCLEdBQUcsQ0FBQ3ZDLEdBQUcsQ0FBQztJQUN0QyxJQUFJcUQsSUFBSSxDQUFDM0MsT0FBTyxDQUFDOUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQUU7TUFDekIyRSxHQUFHLENBQUNqQixLQUFLLENBQUNDLE1BQU0sR0FBRyxnQkFBZ0I7SUFDdkM7RUFDSixDQUFDLENBQUM7O0VBRUU7QUFHUixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9rZXJwcm9qZWN0anMvLi9zcmMvc2NyaXB0cy9ib2FyZC5qcz9iY2IwIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IEtFWSA9IHtcbiAgICAxOiBcIk5vIFBhaXJcIixcbiAgICAyOiBcIk9uZSBQYWlyXCIsXG4gICAgMzogXCJUd28gUGFpclwiLFxuICAgIDQ6IFwiVGhyZWUgb2YgYSBLaW5kXCIsXG4gICAgNTogXCJTdHJhaWdodFwiLFxuICAgIDY6IFwiRmx1c2hcIixcbiAgICA3OiBcIkZ1bGwgSG91c2UhXCIsXG4gICAgODogXCJGb3VyIG9mIGEgS2luZCEhXCIsXG4gICAgOTogXCJTdHJhaWdodCBGbHVzaCEhIVwiLFxuICAgIDEwOiBcIlJPWUFMIEZMVVNIISEhXCJcbn1cblxuZnVuY3Rpb24gQm9hcmQgKGRlY2spIHtcbiAgICB0aGlzLmJvYXJkUG9zID0ge1xuICAgICAgICAncDEtMSc6ICdvcGVuJywgJ3AxLTInOiAnb3BlbicsICdwMS0zJzogJ29wZW4nLCAncDEtNCc6ICdvcGVuJyxcbiAgICAgICAgJ3AyLTEnOiAnb3BlbicsICdwMi0yJzogJ29wZW4nLCAncDItMyc6ICdvcGVuJywgJ3AyLTQnOiAnb3BlbicsXG4gICAgICAgICdwMy0xJzogJycsICdwMy0yJzogJycsICdwMy0zJzogJycsICdwMy00JzogJycsXG4gICAgICAgICdwNC0xJzogJycsICdwNC0yJzogJycsICdwNC0zJzogJycsICdwNC00JzogJycsXG4gICAgICAgICdwNS0xJzogJycsICdwNS0yJzogJycsICdwNS0zJzogJycsICdwNS00JzogJycsXG4gICAgICAgICdwNi0xJzogJycsICdwNi0yJzogJycsICdwNi0zJzogJycsICdwNi00JzogJycsXG4gICAgICAgICdib2FyZDEnOiAnb3BlbicsICdib2FyZDInOiAnb3BlbicsICdib2FyZDMnOiAnb3BlbicsICdib2FyZDQnOiAnb3BlbicsICdib2FyZDUnOiAnb3BlbicsXG4gICAgICAgICdoaWdobGlnaHQnOiAncDEtMSdcbiAgICB9XG4gICAgdGhpcy5kZWNrID0gZGVja1xuICAgIHRoaXMub25Cb2FyZCA9IFtdXG4gICAgdGhpcy5hZGRDbGlja0JvYXJkKClcbiAgICB0aGlzLmNyZWF0ZVJlc2V0KClcbiAgICB0aGlzLl9pbml0aWFsQm9yZGVyKClcbn1cblxuQm9hcmQucHJvdG90eXBlLmFkZENsaWNrQm9hcmQgPSBmdW5jdGlvbiAoKSB7XG4gICAgLy9GSVg6IHJlbW92ZSBmcm9tIGhhbmRcbiAgICAvL0ZJWDogQ3JlYXRlIGEgd2lubmVyIGJvcmRlciB2YXJpYWJsZSB0byBjaGVja1xuICAgIGZvciAobGV0IHBvcyBpbiB0aGlzLmJvYXJkUG9zKSB7XG4gICAgICAgIGlmIChwb3MgIT09ICdoaWdobGlnaHQnKSB7XG4gICAgICAgICAgICBjb25zdCBuZXdQb3MgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwb3MpO1xuICAgICAgICAgICAgbmV3UG9zLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmJvYXJkUG9zW2UudGFyZ2V0LmlkXSA9PT0gJ29wZW4nKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3JlbW92ZUJvcmRlcigpXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2FkZEJvcmRlcihlLnRhcmdldClcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCEodGhpcy5ib2FyZFBvc1tlLnRhcmdldC5pZF0gPT09ICcnKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZUZyb21Cb2FyZChlLnRhcmdldC5pZClcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fYWRkQm9yZGVyKGUudGFyZ2V0KVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiYWRkIHBsYXllciBmaXJzdCFcIilcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICAgIC8vIG5ld1Bvcy5pZCA9IHAxLTFcbiAgICB9XG59XG5cbkJvYXJkLnByb3RvdHlwZS5mdWxsID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzLm9uQm9hcmQubGVuZ3RoID09PSA1XG59XG5cbkJvYXJkLnByb3RvdHlwZS5jcmVhdGVSZXNldCA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCByZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzZXRCdXR0b24nKVxuICAgIHJlcy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8IDc7IGkrKykge1xuICAgICAgICAgICAgaWYgKHRoaXMuZGVja1tgcCR7aX1gXS5hY3RpdmUpIHRoaXMuX3JlbW92ZVBsYXllcnMoYHAke2l9YClcbiAgICAgICAgICAgIGlmIChpIDwgMykge1xuICAgICAgICAgICAgICAgIHRoaXMuX2FkZFBsYXllcnMoYHAke2l9YClcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNsZWFyQm9hcmQoKVxuICAgICAgICB0aGlzLl9jcmVhdGVOZXh0Qm9yZGVyKClcbiAgICB9KVxufVxuXG5Cb2FyZC5wcm90b3R5cGUuYWRkVG9Cb2FyZCA9IGZ1bmN0aW9uIChjYXJkS2V5LCBwbGF5ZXJOdW0gPSAwKSB7XG4gICAgLy8gYWRkIGNhcmQgdG8gYm9hcmQgUWhcbiAgICBpZiAodGhpcy5ib2FyZFBvc1snaGlnaGxpZ2h0J10gPT09ICcnKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdldmVyeXRoaW5nIGZ1bGwnKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuYm9hcmRQb3NbdGhpcy5ib2FyZFBvc1snaGlnaGxpZ2h0J11dID0gJ3Rha2VuJ1xuICAgICAgICB0aGlzLmRlY2suY2FyZERlY2tbY2FyZEtleV0gPSAnYm9hcmQnXG4gICAgICAgIHRoaXMuc3dhcEltZyh0aGlzLmJvYXJkUG9zWydoaWdobGlnaHQnXSwgY2FyZEtleSlcbiAgICAgICAgaWYgKHRoaXMuYm9hcmRQb3MuaGlnaGxpZ2h0WzBdID09PSAnYicpIHtcbiAgICAgICAgICAgIHRoaXMucHVzaE9uQm9hcmQoY2FyZEtleSlcbiAgICAgICAgICAgIC8vIEZJWCwgdXBkYXRlIG9kZHMgbm90IGp1c3Qgd2hlbiBib2FyZCBnZXRzIGZ1bGwgYnV0IHdoZW4gYSBoYW5kIGdldHMgZnVsbCBhbmQgdGhlIGJvYXJkIGlzIGZ1bGxcbiAgICAgICAgICAgIGlmICh0aGlzLmZ1bGwoKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2NsZWFyV2lubmVyQm9yZGVycygpXG4gICAgICAgICAgICAgICAgY29uc3QgYmVzdEhhbmRzID0ge31cbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8IDc7IGkrKykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5kZWNrW2BwJHtpfWBdLmhhbmRGdWxsKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJlc3RIYW5kc1tgcCR7aX1gXSA9ICh0aGlzLmRlY2suaGFuZHR5cGUuYmVzdEhhbmQodGhpcy5kZWNrW2BwJHtpfWBdLnBsYXllckhhbmQsIHRoaXMub25Cb2FyZCkpXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gRklYOiBTaG91bGQgb25seSBkbyB0aGlzIGlmIGFsbCBwbGF5ZXJzIGhhdmUgZnVsbCBoYW5kXG4gICAgICAgICAgICAgICAgY29uc3Qgd2lubmVyID0gdGhpcy5kZWNrLmhhbmR0eXBlLndpbm5lcihiZXN0SGFuZHMpXG4gICAgICAgICAgICAgICAgaWYgKHdpbm5lcikgdGhpcy5oaWdobGlnaHRXaW5uZXIod2lubmVyKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIGlmICh0aGlzLmJvYXJkUG9zLmhpZ2hsaWdodFswXSA9PT0gJ3AnKSB7XG4gICAgICAgIC8vICAgICB0aGlzLmRlY2tbdGhpcy5ib2FyZFBvc1snaGlnaGxpZ2h0J10uc2xpY2UoMCwgMildXG4gICAgICAgIC8vICAgICAvLyBGSVgsIHVwZGF0ZSBvZGRzIG5vdCBqdXN0IHdoZW4gYm9hcmQgZ2V0cyBmdWxsIGJ1dCB3aGVuIGEgaGFuZCBnZXRzIGZ1bGwgYW5kIHRoZSBib2FyZCBpcyBmdWxsXG4gICAgICAgIC8vICAgICBpZiAodGhpcy5mdWxsKCkpIHtcbiAgICAgICAgLy8gICAgICAgICAvLyBGSVg6IEp1c3QgYmVpbmcgdXNlZCB0byB0ZXN0IGhhbmRzLCBzaG91bGQgdGVzdCBlbnRpcmUgYm9hcmRcbiAgICAgICAgLy8gICAgICAgICBjb25zdCBiZXN0SGFuZHMgPSB7fVxuICAgICAgICAvLyAgICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDwgNzsgaSsrKSB7XG4gICAgICAgIC8vICAgICAgICAgICAgIGlmICh0aGlzLmRlY2tbYHAke2l9YF0uaGFuZEZ1bGwoKSkge1xuICAgICAgICAvLyAgICAgICAgICAgICAgICAgYmVzdEhhbmRzW2BwJHtpfWBdID0gKHRoaXMuZGVjay5oYW5kdHlwZS5iZXN0SGFuZCh0aGlzLmRlY2tbYHAke2l9YF0ucGxheWVySGFuZCwgdGhpcy5vbkJvYXJkKSlcbiAgICAgICAgLy8gICAgICAgICAgICAgfVxuICAgICAgICAvLyAgICAgICAgIH1cbiAgICAgICAgLy8gICAgICAgICB0aGlzLmhpZ2hsaWdodFdpbm5lcih0aGlzLmRlY2suaGFuZHR5cGUud2lubmVyKGJlc3RIYW5kcykpXG4gICAgICAgIC8vICAgICB9XG4gICAgICAgIC8vIH1cbiAgICAgICAgLy8gIDxpbWcgc3JjPVwiLi9pbWFnZXMvY2FyZGJhY2sucG5nXCIgaWQ9XCJwMS0xXCI+XG4gICAgICAgIHRoaXMuX2NyZWF0ZU5leHRCb3JkZXIocGxheWVyTnVtKVxuICAgIH1cbn1cblxuQm9hcmQucHJvdG90eXBlLnN3YXBJbWcgPSBmdW5jdGlvbiAocG9zMSwgcG9zMikge1xuICAgIGNvbnN0IGNoYW5nZVBvcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHBvczEpXG4gICAgY29uc3QgdGVtcFNyYyA9IGNoYW5nZVBvcy5zcmNcbiAgICBjb25zdCBjaGFuZ2VOZXh0UG9zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocG9zMilcbiAgICBjaGFuZ2VQb3Muc3JjID0gY2hhbmdlTmV4dFBvcy5zcmNcbiAgICBjaGFuZ2VOZXh0UG9zLnNyYyA9IHRlbXBTcmNcbn1cblxuQm9hcmQucHJvdG90eXBlLnB1c2hPbkJvYXJkID0gZnVuY3Rpb24gKGNhcmRLZXkpIHtcbiAgICB0aGlzLm9uQm9hcmQucHVzaChjYXJkS2V5KVxufVxuXG5Cb2FyZC5wcm90b3R5cGUucHVzaFBsYXllckhhbmQgPSBmdW5jdGlvbiAoKSB7XG5cbn1cblxuQm9hcmQucHJvdG90eXBlLnJlbW92ZVBsYXllckhhbmQgPSBmdW5jdGlvbiAoKSB7XG5cbn1cblxuQm9hcmQucHJvdG90eXBlLnJlbW92ZUZyb21Cb2FyZCA9IGZ1bmN0aW9uIChib2FyZEtleSkge1xuICAgIGNvbnN0IGl0ZW1Ub1JlbW92ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGJvYXJkS2V5KVxuICAgIGNvbnN0IGl0ZW0gPSB0aGlzLmNoYW5nZVNyY1RvSWQoaXRlbVRvUmVtb3ZlLnNyYylcbiAgICB0aGlzLnN3YXBJbWcoYm9hcmRLZXksIGl0ZW0pXG4gICAgdGhpcy5ib2FyZFBvc1tib2FyZEtleV0gPSAnb3BlbidcbiAgICB0aGlzLmRlY2suY2FyZERlY2tbaXRlbV0gPSAnZGVjaydcbiAgICBjb25zdCBpbmRleCA9IHRoaXMub25Cb2FyZC5pbmRleE9mKGl0ZW0pXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgICB0aGlzLm9uQm9hcmQuc3BsaWNlKGluZGV4LCAxKTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCA3OyBpKyspIHtcbiAgICAgICAgbGV0IHBsYXllciA9IHRoaXMuZGVja1tgcCR7aX1gXS5wbGF5ZXJIYW5kXG4gICAgICAgIGxldCBpbmRleCA9IHBsYXllci5pbmRleE9mKGl0ZW0pXG4gICAgICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgIHBsYXllci5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5Cb2FyZC5wcm90b3R5cGUuY2xlYXJCb2FyZCA9IGZ1bmN0aW9uICgpIHtcbiAgICBmb3IgKGxldCBpID0gMTsgaSA8IDY7IGkrKykge1xuICAgICAgICBpZiAodGhpcy5ib2FyZFBvc1tgYm9hcmQke2l9YF0gPT09ICd0YWtlbicpIHRoaXMucmVtb3ZlRnJvbUJvYXJkKGBib2FyZCR7aX1gKVxuICAgIH1cbiAgICB0aGlzLl9jbGVhcldpbm5lckJvcmRlcnMoKVxufVxuXG5Cb2FyZC5wcm90b3R5cGUuYm9hcmRDYXJkcyA9IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBiMSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib2FyZDEnKTtcbiAgICBjb25zdCBiMiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib2FyZDInKTtcbiAgICBjb25zdCBiMyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib2FyZDMnKTtcbiAgICBjb25zdCBiNCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib2FyZDQnKTtcbiAgICBjb25zdCBiNSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib2FyZDUnKTtcbiAgICBpZiAoYjEgJiYgYjIgJiYgYjMgJiYgYjQgJiYgYjUpIHtcbiAgICAgICAgY29uc3QgcG9zMSA9IHRoaXMuY2hhbmdlU3JjVG9JZChiMS5zcmMpXG4gICAgICAgIGNvbnN0IHBvczIgPSB0aGlzLmNoYW5nZVNyY1RvSWQoYjIuc3JjKVxuICAgICAgICBjb25zdCBwb3MzID0gdGhpcy5jaGFuZ2VTcmNUb0lkKGIzLnNyYylcbiAgICAgICAgY29uc3QgcG9zNCA9IHRoaXMuY2hhbmdlU3JjVG9JZChiNC5zcmMpXG4gICAgICAgIGNvbnN0IHBvczUgPSB0aGlzLmNoYW5nZVNyY1RvSWQoYjUuc3JjKVxuICAgIH1cbn1cblxuQm9hcmQucHJvdG90eXBlLl9hZGRCb3JkZXIgPSBmdW5jdGlvbiAocG9zKSB7XG4gICAgdGhpcy5fcmVtb3ZlQm9yZGVyKClcbiAgICB0aGlzLmJvYXJkUG9zWydoaWdobGlnaHQnXSA9IHBvcy5pZFxuICAgIHBvcy5zdHlsZS5ib3JkZXIgPSAnMnB4IHNvbGlkIHJlZCc7XG59XG5cbkJvYXJkLnByb3RvdHlwZS5fcmVtb3ZlQm9yZGVyID0gZnVuY3Rpb24oKSB7XG4gICAgLy9GSVgsIG5lZWQgcmVtb3ZlIHJlZCBib3JkZXJzIGFuZCByZW1vdmUgYmx1ZSBib3JkZXJzXG4gICAgY29uc3QgcHJldkJvcmRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMuYm9hcmRQb3NbJ2hpZ2hsaWdodCddKVxuICAgIGlmIChwcmV2Qm9yZGVyICYmIHByZXZCb3JkZXIuc3R5bGUuYm9yZGVyICE9PSAnNHB4IHNvbGlkIGJsdWUnKSB7XG4gICAgICAgIHByZXZCb3JkZXIucmVtb3ZlQXR0cmlidXRlKCdzdHlsZScpXG4gICAgfVxuICAgIHRoaXMuYm9hcmRQb3MuaGlnaGxpZ2h0ID0gJydcbn1cblxuQm9hcmQucHJvdG90eXBlLl9jbGVhcldpbm5lckJvcmRlcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgZm9yIChsZXQgcG9zIGluIHRoaXMuYm9hcmRQb3MpIHtcbiAgICAgICAgY29uc3QgbmV4dEJvcmRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHBvcylcbiAgICAgICAgaWYgKG5leHRCb3JkZXIpIG5leHRCb3JkZXIucmVtb3ZlQXR0cmlidXRlKCdzdHlsZScpXG4gICAgfVxufVxuQm9hcmQucHJvdG90eXBlLl9jcmVhdGVOZXh0Qm9yZGVyID0gZnVuY3Rpb24ocGxheWVyTnVtID0gMCkge1xuICAgIC8vIEZJWCwgYWRkaW5nIGxhc3QgaXRlbSB0byBlbmQgb2YgYm9hcmQgY3JlYXRlcyBuZXh0IGJvcmRlclxuICAgIC8vIHBsYXllck51bSBzaG91bGQgdGVsbCB3aGF0IHBsYXllciB0byBtYWtlIG5leHQgYm9yZGVyIGZvclxuICAgIC8vIDAgbWVhbnMgYWRkIHRvIG5leHQgYXZhaWxhYmxlIHNwYWNlXG4gICAgLy8gLTEgbWVhbnMgYWRkIHRvIGJvYXJkXG4gICAgLy8gbnVtIG1lYW5zIGFkZCB0byB0aGF0IHBsYXllclxuICAgIGlmKChwbGF5ZXJOdW0gPiAwICYmIHRoaXMuZGVja1sncCcgKyBwbGF5ZXJOdW1dLmhhbmRMZW5ndGgoKSA9PT0gNCkpIHtcbiAgICAgICAgZm9yIChsZXQgcG9zIGluIHRoaXMuYm9hcmRQb3MpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmJvYXJkUG9zW3Bvc10gPT09ICdvcGVuJykge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5leHRCb3JkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwb3MpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2FkZEJvcmRlcihuZXh0Qm9yZGVyKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBlbHNlIGlmIChwbGF5ZXJOdW0gPT09IC0xICYmIHRoaXMuZnVsbCgpKSB7XG4gICAgICAgIC8vIEZJWCwgQ0hFQ0sgSUYgUExBWUVSUyBIQU5EUyBBUkUgRlVMTCBUSEVOIERPTlQgR0VORVJBVEVcbiAgICAgICAgZm9yIChsZXQgcG9zIGluIHRoaXMuYm9hcmRQb3MpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmJvYXJkUG9zW3Bvc10gPT09ICdvcGVuJykge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5leHRCb3JkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwb3MpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2FkZEJvcmRlcihuZXh0Qm9yZGVyKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBlbHNlIGlmIChwbGF5ZXJOdW0gPT09IC0xKSB7XG4gICAgICAgIGZvciAobGV0IHBvcyBpbiB0aGlzLmJvYXJkUG9zKSB7XG4gICAgICAgICAgICBpZiAocG9zWzBdID09PSAnYicgJiYgdGhpcy5ib2FyZFBvc1twb3NdID09PSAnb3BlbicpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXh0Qm9yZGVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocG9zKVxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9hZGRCb3JkZXIobmV4dEJvcmRlcilcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0gZWxzZSBpZiAocGxheWVyTnVtICE9PSAwKSB7XG4gICAgICAgIGZvciAobGV0IHBvcyBpbiB0aGlzLmJvYXJkUG9zKSB7XG4gICAgICAgICAgICBpZiAoTnVtYmVyKHBvc1sxXSkgPT09IHBsYXllck51bSAmJiB0aGlzLmJvYXJkUG9zW3Bvc10gPT09ICdvcGVuJykge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5leHRCb3JkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwb3MpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2FkZEJvcmRlcihuZXh0Qm9yZGVyKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZm9yIChsZXQgcG9zIGluIHRoaXMuYm9hcmRQb3MpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmJvYXJkUG9zW3Bvc10gPT09ICdvcGVuJykge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5leHRCb3JkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwb3MpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2FkZEJvcmRlcihuZXh0Qm9yZGVyKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIC8vIGlmIG5vIG9wZW4gc3BhY2VzXG5cbiAgICB0aGlzLl9yZW1vdmVCb3JkZXIoKVxuICAgIHRoaXMuYm9hcmRQb3MuaGlnaGxpZ2h0ID0gJydcbiAgICAvLyAtMSB3aGVuIG5vIGVtcHR5IHNwYWNlc1xuICAgIHJldHVybiAtMVxufVxuXG5cbkJvYXJkLnByb3RvdHlwZS5fY3JlYXRlTmV3UGxheWVyQm9yZGVyID0gZnVuY3Rpb24gKHBsYXllck51bSkge1xuICAgIGNvbnN0IG5leHRCb3JkZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHtwbGF5ZXJOdW19LTFgKVxuICAgIHRoaXMuX2FkZEJvcmRlcihuZXh0Qm9yZGVyKVxufVxuXG5Cb2FyZC5wcm90b3R5cGUuX2luaXRpYWxCb3JkZXIgPSBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgaW5pdGlhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwMS0xJyk7XG4gICAgdGhpcy5fYWRkQm9yZGVyKGluaXRpYWwpXG59XG5cbkJvYXJkLnByb3RvdHlwZS5fZ2V0SGlnaGxpZ2h0ZWRQb3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgcG9zID0gdGhpcy5ib2FyZFBvcy5oaWdobGlnaHRcbiAgICBpZiAocG9zWzBdID09PSAncCcpIHtcbiAgICAgICAgLy8gcmV0dXJucyBwbGF5ZXJcbiAgICAgICAgcmV0dXJuIHBvcy5zbGljZSgwLCAyKVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiAtMVxuICAgIH1cbn1cblxuQm9hcmQucHJvdG90eXBlLl9hZGRQbGF5ZXJzID0gZnVuY3Rpb24gKHBsYXllck51bSkge1xuICAgIC8vcDEgYm9hcmRQb3NbMC0zXSwgcDIgWzQtN11cbiAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy5ib2FyZFBvcykge1xuICAgICAgICBpZiAoa2V5WzFdID09PSBwbGF5ZXJOdW1bMV0pIHtcbiAgICAgICAgICAgIGNvbnN0IHBvcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYC4ke2tleX1gKVxuICAgICAgICAgICAgcG9zLmNsYXNzTGlzdC5yZW1vdmUoJ2JsdXInKVxuICAgICAgICAgICAgdGhpcy5ib2FyZFBvc1trZXldID0gJ29wZW4nXG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgcGxheWVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocGxheWVyTnVtKVxuICAgIGNvbnN0IHRleHQgPSBwbGF5ZXIuY2hpbGROb2Rlc1syXVxuICAgIGNvbnN0IGltZyA9IHBsYXllci5xdWVyeVNlbGVjdG9yKCdpbWcnKTtcbiAgICBpbWcuc3JjID0gXCIuL2ltYWdlcy9pY29uczgtbWludXMtNTAucG5nXCJcbiAgICB0ZXh0Lm5vZGVWYWx1ZSArPSAnIGVxdWl0eTogJ1xufVxuXG5Cb2FyZC5wcm90b3R5cGUuX3JlbW92ZVBsYXllcnMgPSBmdW5jdGlvbiAocGxheWVyTnVtKSB7XG4gICAgLy9wMSBib2FyZFBvc1swLTNdLCBwMiBbNC03XVxuICAgIC8vICBGSVg6IHdoZW4gcGxheWVyIHJlbW92ZWQgZml4IHRleHQgZnJvbSBlcXVpdHkgdG8ganVzdCBwNVxuICAgIGZvciAobGV0IGtleSBpbiB0aGlzLmJvYXJkUG9zKSB7XG4gICAgICAgIGlmIChrZXlbMV0gPT09IHBsYXllck51bVsxXSkge1xuICAgICAgICAgICAgY29uc3QgcG9zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgLiR7a2V5fWApXG4gICAgICAgICAgICBwb3MuY2xhc3NMaXN0LmFkZCgnYmx1cicpXG4gICAgICAgICAgICBpZiAodGhpcy5ib2FyZFBvc1trZXldICE9PSAnb3BlbicpIHRoaXMucmVtb3ZlRnJvbUJvYXJkKGtleSlcbiAgICAgICAgICAgIHRoaXMuYm9hcmRQb3Nba2V5XSA9ICcnXG4gICAgICAgICAgICB0aGlzLl9jcmVhdGVOZXh0Qm9yZGVyKClcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBwbGF5ZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwbGF5ZXJOdW0pXG4gICAgY29uc3QgdGV4dCA9IHBsYXllci5jaGlsZE5vZGVzWzJdXG4gICAgY29uc3QgaW1nID0gcGxheWVyLnF1ZXJ5U2VsZWN0b3IoJ2ltZycpO1xuICAgIGltZy5zcmMgPSBcIi4vaW1hZ2VzL2ljb25zOC1wbHVzLWJ1dHRvbi01MC5wbmdcIlxuICAgIHRleHQubm9kZVZhbHVlID0gYFAke3BsYXllck51bVsxXX1gXG59XG5Cb2FyZC5wcm90b3R5cGUuY2hhbmdlU3JjVG9JZCA9IGZ1bmN0aW9uIChzcmMpIHtcbiAgICBsZXQgdmFsO1xuICAgIGxldCB3b3JkO1xuICAgIGxldCBzdWl0O1xuICAgIGlmIChzcmMuaW5jbHVkZXMoJ3NwYWRlcycpKSB7XG4gICAgICAgIHN1aXQgPSBcInNcIlxuICAgICAgICB3b3JkID0gc3JjLnNsaWNlKC0xNilcbiAgICB9IGVsc2UgaWYgKHNyYy5pbmNsdWRlcygnZGlhbW9uZHMnKSkge1xuICAgICAgICBzdWl0ID0gXCJkXCJcbiAgICAgICAgd29yZCA9IHNyYy5zbGljZSgtMTgpXG4gICAgfSBlbHNlIGlmIChzcmMuaW5jbHVkZXMoJ2hlYXJ0cycpKSB7XG4gICAgICAgIHN1aXQgPSBcImhcIlxuICAgICAgICB3b3JkID0gc3JjLnNsaWNlKC0xNilcbiAgICB9IGVsc2UgaWYgKHNyYy5pbmNsdWRlcygnY2x1YnMnKSkge1xuICAgICAgICBzdWl0ID0gXCJjXCJcbiAgICAgICAgd29yZCA9IHNyYy5zbGljZSgtMTUpXG4gICAgfVxuICAgIGlmICh3b3JkKSB7XG4gICAgICAgIGlmICh3b3JkLmluY2x1ZGVzKCcyJykpIHtcbiAgICAgICAgICAgIHZhbCA9IFwiMlwiXG4gICAgICAgIH0gZWxzZSBpZiAod29yZC5pbmNsdWRlcygnMycpKSB7XG4gICAgICAgICAgICB2YWwgPSBcIjNcIlxuICAgICAgICB9IGVsc2UgaWYgKHdvcmQuaW5jbHVkZXMoJzQnKSkge1xuICAgICAgICAgICAgdmFsID0gXCI0XCJcbiAgICAgICAgfSBlbHNlIGlmICh3b3JkLmluY2x1ZGVzKCc1JykpIHtcbiAgICAgICAgICAgIHZhbCA9IFwiNVwiXG4gICAgICAgIH0gZWxzZSBpZiAod29yZC5pbmNsdWRlcygnNicpKSB7XG4gICAgICAgICAgICB2YWwgPSBcIjZcIlxuICAgICAgICB9IGVsc2UgaWYgKHdvcmQuaW5jbHVkZXMoJzcnKSkge1xuICAgICAgICAgICAgdmFsID0gXCI3XCJcbiAgICAgICAgfSBlbHNlIGlmICh3b3JkLmluY2x1ZGVzKCc4JykpIHtcbiAgICAgICAgICAgIHZhbCA9IFwiOFwiXG4gICAgICAgIH0gZWxzZSBpZiAod29yZC5pbmNsdWRlcygnOScpKSB7XG4gICAgICAgICAgICB2YWwgPSBcIjlcIlxuICAgICAgICB9IGVsc2UgaWYgKHdvcmQuaW5jbHVkZXMoJzEwJykpIHtcbiAgICAgICAgICAgIHZhbCA9IFwiMTBcIlxuICAgICAgICB9IGVsc2UgaWYgKHdvcmQuaW5jbHVkZXMoJ0onKSkge1xuICAgICAgICAgICAgdmFsID0gXCJKXCJcbiAgICAgICAgfSBlbHNlIGlmICh3b3JkLmluY2x1ZGVzKCdRJykpIHtcbiAgICAgICAgICAgIHZhbCA9IFwiUVwiXG4gICAgICAgIH0gZWxzZSBpZiAod29yZC5pbmNsdWRlcygnSycpKSB7XG4gICAgICAgICAgICB2YWwgPSBcIktcIlxuICAgICAgICB9IGVsc2UgaWYgKHdvcmQuaW5jbHVkZXMoJ0EnKSkge1xuICAgICAgICAgICAgdmFsID0gXCJBXCJcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgICByZXR1cm4gYCR7dmFsfSR7c3VpdH1gXG59XG5cbkJvYXJkLnByb3RvdHlwZS5jaGFuZ2VJZFRvU3JjID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgbGV0IHY7XG4gICAgbGV0IHM7XG5cbiAgICBpZiAoaWQubGVuZ3RoID09IDIpIHtcbiAgICAgICAgdiA9IGlkWzBdXG4gICAgICAgIHMgPSBpZFsxXVxuICAgIH0gZWxzZSB7XG4gICAgICAgIHYgPSAxMFxuICAgICAgICBzID0gaWRbMl1cbiAgICB9XG5cbiAgICBsZXQgc3VpdDtcbiAgICBpZiAocyA9PSBcImNcIikge1xuICAgICAgICBzdWl0ID0gXCJjbHVic1wiXG4gICAgfSBlbHNlIGlmIChzID09IFwiZFwiKSB7XG4gICAgICAgIHN1aXQgPSBcImRpYW1vbmRzXCJcbiAgICB9IGVsc2UgaWYgKHMgPT0gXCJzXCIpIHtcbiAgICAgICAgc3VpdCA9IFwic3BhZGVzXCJcbiAgICB9IGVsc2UgaWYgKHMgPT0gXCJoXCIpIHtcbiAgICAgICAgc3VpdCA9IFwiaGVhcnRzXCJcbiAgICB9XG4gICAgcmV0dXJuIGAuL2ltYWdlcy8ke3Z9X29mXyR7c3VpdH0ucG5nYFxufVxuXG5Cb2FyZC5wcm90b3R5cGUuaGlnaGxpZ2h0V2lubmVyID0gZnVuY3Rpb24gKHdpbm5lcikge1xuICAgIC8vIEZJWDogU3BsaXQgcG90IHdpbm5lcnNcbiAgICBjb25zdCBwbGF5ZXIgPSBPYmplY3Qua2V5cyh3aW5uZXIpWzBdXG4gICAgY29uc3QgaGFuZFZhbCA9IHdpbm5lcltwbGF5ZXJdWzBdXG4gICAgY29uc3QgaGFuZFN0cmluZyA9IEtFWVtoYW5kVmFsXVxuICAgIGNvbnN0IGhhbmQgPSB3aW5uZXJbcGxheWVyXVsxXVxuXG4gICAgY29uc3QgcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHBsYXllcilcbiAgICBjb25zdCB0ZXh0ID0gcC5jaGlsZE5vZGVzWzJdXG4gICAgdGV4dC5ub2RlVmFsdWUgPSBgV0lOTkVSOiAke2hhbmRTdHJpbmd9YFxuXG4gICAgY29uc3QgYWxsSW1hZ2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaW1nJyk7XG4gICAgYWxsSW1hZ2VzLmZvckVhY2goaW1nID0+IHtcbiAgICAgICAgY29uc3QgaWQgPSB0aGlzLmNoYW5nZVNyY1RvSWQoaW1nLnNyYylcbiAgICAgICAgaWYgKGhhbmQuaW5kZXhPZihpZCkgIT09IC0xKSB7XG4gICAgICAgICAgICBpbWcuc3R5bGUuYm9yZGVyID0gJzRweCBzb2xpZCBibHVlJztcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgICAgIC8vIGNvbnN0IGltZ0VsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGBpbWdbJHtzcmN9XWApO1xuXG5cbn1cblxuZXhwb3J0IHsgQm9hcmQgfVxuIl0sIm5hbWVzIjpbIktFWSIsIkJvYXJkIiwiZGVjayIsImJvYXJkUG9zIiwib25Cb2FyZCIsImFkZENsaWNrQm9hcmQiLCJjcmVhdGVSZXNldCIsIl9pbml0aWFsQm9yZGVyIiwicHJvdG90eXBlIiwicG9zIiwibmV3UG9zIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwidGFyZ2V0IiwiaWQiLCJfcmVtb3ZlQm9yZGVyIiwiX2FkZEJvcmRlciIsInJlbW92ZUZyb21Cb2FyZCIsImNvbnNvbGUiLCJsb2ciLCJmdWxsIiwibGVuZ3RoIiwicmVzIiwiaSIsImFjdGl2ZSIsIl9yZW1vdmVQbGF5ZXJzIiwiX2FkZFBsYXllcnMiLCJjbGVhckJvYXJkIiwiX2NyZWF0ZU5leHRCb3JkZXIiLCJhZGRUb0JvYXJkIiwiY2FyZEtleSIsInBsYXllck51bSIsImFyZ3VtZW50cyIsInVuZGVmaW5lZCIsImNhcmREZWNrIiwic3dhcEltZyIsImhpZ2hsaWdodCIsInB1c2hPbkJvYXJkIiwiX2NsZWFyV2lubmVyQm9yZGVycyIsImJlc3RIYW5kcyIsImhhbmRGdWxsIiwiaGFuZHR5cGUiLCJiZXN0SGFuZCIsInBsYXllckhhbmQiLCJ3aW5uZXIiLCJoaWdobGlnaHRXaW5uZXIiLCJwb3MxIiwicG9zMiIsImNoYW5nZVBvcyIsInRlbXBTcmMiLCJzcmMiLCJjaGFuZ2VOZXh0UG9zIiwicHVzaCIsInB1c2hQbGF5ZXJIYW5kIiwicmVtb3ZlUGxheWVySGFuZCIsImJvYXJkS2V5IiwiaXRlbVRvUmVtb3ZlIiwiaXRlbSIsImNoYW5nZVNyY1RvSWQiLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiLCJwbGF5ZXIiLCJib2FyZENhcmRzIiwiYjEiLCJiMiIsImIzIiwiYjQiLCJiNSIsInBvczMiLCJwb3M0IiwicG9zNSIsInN0eWxlIiwiYm9yZGVyIiwicHJldkJvcmRlciIsInJlbW92ZUF0dHJpYnV0ZSIsIm5leHRCb3JkZXIiLCJoYW5kTGVuZ3RoIiwiTnVtYmVyIiwiX2NyZWF0ZU5ld1BsYXllckJvcmRlciIsImluaXRpYWwiLCJfZ2V0SGlnaGxpZ2h0ZWRQb3MiLCJzbGljZSIsImtleSIsInF1ZXJ5U2VsZWN0b3IiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJ0ZXh0IiwiY2hpbGROb2RlcyIsImltZyIsIm5vZGVWYWx1ZSIsImFkZCIsInZhbCIsIndvcmQiLCJzdWl0IiwiaW5jbHVkZXMiLCJjaGFuZ2VJZFRvU3JjIiwidiIsInMiLCJPYmplY3QiLCJrZXlzIiwiaGFuZFZhbCIsImhhbmRTdHJpbmciLCJoYW5kIiwicCIsImFsbEltYWdlcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/board.js\n");

/***/ }),

/***/ "./src/scripts/deck.js":
/*!*****************************!*\
  !*** ./src/scripts/deck.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Deck: function() { return /* binding */ Deck; }\n/* harmony export */ });\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _handType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handType.js */ \"./src/scripts/handType.js\");\n\n\nfunction Deck(p1, p2, p3, p4, p5, p6) {\n  this.cardDeck = {\n    '2c': 'deck',\n    '3c': 'deck',\n    '4c': 'deck',\n    '5c': 'deck',\n    '6c': 'deck',\n    '7c': 'deck',\n    '8c': 'deck',\n    '9c': 'deck',\n    '10c': 'deck',\n    'Jc': 'deck',\n    'Qc': 'deck',\n    'Kc': 'deck',\n    'Ac': 'deck',\n    '2d': 'deck',\n    '3d': 'deck',\n    '4d': 'deck',\n    '5d': 'deck',\n    '6d': 'deck',\n    '7d': 'deck',\n    '8d': 'deck',\n    '9d': 'deck',\n    '10d': 'deck',\n    'Jd': 'deck',\n    'Qd': 'deck',\n    'Kd': 'deck',\n    'Ad': 'deck',\n    '2s': 'deck',\n    '3s': 'deck',\n    '4s': 'deck',\n    '5s': 'deck',\n    '6s': 'deck',\n    '7s': 'deck',\n    '8s': 'deck',\n    '9s': 'deck',\n    '10s': 'deck',\n    'Js': 'deck',\n    'Qs': 'deck',\n    'Ks': 'deck',\n    'As': 'deck',\n    '2h': 'deck',\n    '3h': 'deck',\n    '4h': 'deck',\n    '5h': 'deck',\n    '6h': 'deck',\n    '7h': 'deck',\n    '8h': 'deck',\n    '9h': 'deck',\n    '10h': 'deck',\n    'Jh': 'deck',\n    'Qh': 'deck',\n    'Kh': 'deck',\n    'Ah': 'deck'\n  };\n  this.board = new _board_js__WEBPACK_IMPORTED_MODULE_0__.Board(this);\n  this.p1 = p1;\n  this.p2 = p2;\n  this.p3 = p3;\n  this.p4 = p4;\n  this.p5 = p5;\n  this.p6 = p6;\n  // this.lastPlayer = 0\n\n  this.addClickCards();\n  this.handtype = new _handType_js__WEBPACK_IMPORTED_MODULE_1__.Handtype();\n}\nDeck.prototype.lastPlayerAdded = function (lastPlayer) {\n  this.lastPlayer = lastPlayer;\n};\nDeck.prototype.addClickCards = function () {\n  for (let key in this.cardDeck) {\n    const card = document.getElementById(key);\n    card.addEventListener(\"click\", () => {\n      // if in deck and no next part highlighted\n      if (this.cardDeck[card.id] === \"deck\") {\n        const player = this.board._getHighlightedPos();\n        if (player !== -1) {\n          // added to board\n          this[player].addToHand(card.id);\n          this.lastPlayer = player;\n          this.board.addToBoard(card.id, Number(player[1]));\n        } else {\n          this.board.addToBoard(card.id, -1);\n        }\n        // add this.playerH\n      } else {\n        console.log(\"not in deck\");\n      }\n    });\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFjLENBQUNILEdBQUcsQ0FBQztJQUN6Q0MsSUFBSSxDQUFDRyxnQkFBZ0IsQ0FBQyxPQUFPLEVBQUUsTUFBTTtNQUNqQztNQUNBLElBQUksSUFBSSxDQUFDWCxRQUFRLENBQUNRLElBQUksQ0FBQ0ksRUFBRSxDQUFDLEtBQUssTUFBTSxFQUFFO1FBQ25DLE1BQU1DLE1BQU0sR0FBRyxJQUFJLENBQUNaLEtBQUssQ0FBQ2Esa0JBQWtCLENBQUMsQ0FBQztRQUM5QyxJQUFJRCxNQUFNLEtBQUssQ0FBQyxDQUFDLEVBQUU7VUFDZjtVQUNBLElBQUksQ0FBQ0EsTUFBTSxDQUFDLENBQUNFLFNBQVMsQ0FBQ1AsSUFBSSxDQUFDSSxFQUFFLENBQUM7VUFDL0IsSUFBSSxDQUFDTixVQUFVLEdBQUdPLE1BQU07VUFDeEIsSUFBSSxDQUFDWixLQUFLLENBQUNlLFVBQVUsQ0FBQ1IsSUFBSSxDQUFDSSxFQUFFLEVBQUVLLE1BQU0sQ0FBQ0osTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDckQsQ0FBQyxNQUFNO1VBQ0gsSUFBSSxDQUFDWixLQUFLLENBQUNlLFVBQVUsQ0FBQ1IsSUFBSSxDQUFDSSxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDdEM7UUFDQTtNQUNKLENBQUMsTUFBTTtRQUNITSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxhQUFhLENBQUM7TUFDOUI7SUFDSixDQUFDLENBQUM7RUFDTjtBQUNKLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb2tlcnByb2plY3Rqcy8uL3NyYy9zY3JpcHRzL2RlY2suanM/YjA1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCb2FyZCB9IGZyb20gXCIuL2JvYXJkLmpzXCJcbmltcG9ydCB7IEhhbmR0eXBlIH0gZnJvbSBcIi4vaGFuZFR5cGUuanNcIlxuXG5mdW5jdGlvbiBEZWNrIChwMSwgcDIsIHAzLCBwNCwgcDUsIHA2KSB7XG4gICAgdGhpcy5jYXJkRGVjayA9IHtcbiAgICAgICAgJzJjJzogJ2RlY2snLCAnM2MnOiAnZGVjaycsICc0Yyc6ICdkZWNrJywgJzVjJzogJ2RlY2snLCAnNmMnOiAnZGVjaycsICc3Yyc6ICdkZWNrJywgJzhjJzogJ2RlY2snLCAnOWMnOiAnZGVjaycsICcxMGMnOiAnZGVjaycsICdKYyc6ICdkZWNrJywgJ1FjJzogJ2RlY2snLCAnS2MnOiAnZGVjaycsICdBYyc6ICdkZWNrJyxcbiAgICAgICAgJzJkJzogJ2RlY2snLCAnM2QnOiAnZGVjaycsICc0ZCc6ICdkZWNrJywgJzVkJzogJ2RlY2snLCAnNmQnOiAnZGVjaycsICc3ZCc6ICdkZWNrJywgJzhkJzogJ2RlY2snLCAnOWQnOiAnZGVjaycsICcxMGQnOiAnZGVjaycsICdKZCc6ICdkZWNrJywgJ1FkJzogJ2RlY2snLCAnS2QnOiAnZGVjaycsICdBZCc6ICdkZWNrJyxcbiAgICAgICAgJzJzJzogJ2RlY2snLCAnM3MnOiAnZGVjaycsICc0cyc6ICdkZWNrJywgJzVzJzogJ2RlY2snLCAnNnMnOiAnZGVjaycsICc3cyc6ICdkZWNrJywgJzhzJzogJ2RlY2snLCAnOXMnOiAnZGVjaycsICcxMHMnOiAnZGVjaycsICdKcyc6ICdkZWNrJywgJ1FzJzogJ2RlY2snLCAnS3MnOiAnZGVjaycsICdBcyc6ICdkZWNrJyxcbiAgICAgICAgJzJoJzogJ2RlY2snLCAnM2gnOiAnZGVjaycsICc0aCc6ICdkZWNrJywgJzVoJzogJ2RlY2snLCAnNmgnOiAnZGVjaycsICc3aCc6ICdkZWNrJywgJzhoJzogJ2RlY2snLCAnOWgnOiAnZGVjaycsICcxMGgnOiAnZGVjaycsICdKaCc6ICdkZWNrJywgJ1FoJzogJ2RlY2snLCAnS2gnOiAnZGVjaycsICdBaCc6ICdkZWNrJ1xuICAgIH1cbiAgICB0aGlzLmJvYXJkID0gbmV3IEJvYXJkKHRoaXMpXG4gICAgdGhpcy5wMSA9IHAxXG4gICAgdGhpcy5wMiA9IHAyXG4gICAgdGhpcy5wMyA9IHAzXG4gICAgdGhpcy5wNCA9IHA0XG4gICAgdGhpcy5wNSA9IHA1XG4gICAgdGhpcy5wNiA9IHA2XG4gICAgLy8gdGhpcy5sYXN0UGxheWVyID0gMFxuXG4gICAgdGhpcy5hZGRDbGlja0NhcmRzKClcbiAgICB0aGlzLmhhbmR0eXBlID0gbmV3IEhhbmR0eXBlKClcbn1cblxuRGVjay5wcm90b3R5cGUubGFzdFBsYXllckFkZGVkID0gZnVuY3Rpb24gKGxhc3RQbGF5ZXIpIHtcbiAgICB0aGlzLmxhc3RQbGF5ZXIgPSBsYXN0UGxheWVyXG59XG5cblxuRGVjay5wcm90b3R5cGUuYWRkQ2xpY2tDYXJkcyA9IGZ1bmN0aW9uICgpIHtcbiAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy5jYXJkRGVjaykge1xuICAgICAgICBjb25zdCBjYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoa2V5KTtcbiAgICAgICAgY2FyZC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgLy8gaWYgaW4gZGVjayBhbmQgbm8gbmV4dCBwYXJ0IGhpZ2hsaWdodGVkXG4gICAgICAgICAgICBpZiAodGhpcy5jYXJkRGVja1tjYXJkLmlkXSA9PT0gXCJkZWNrXCIpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBwbGF5ZXIgPSB0aGlzLmJvYXJkLl9nZXRIaWdobGlnaHRlZFBvcygpXG4gICAgICAgICAgICAgICAgaWYgKHBsYXllciAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gYWRkZWQgdG8gYm9hcmRcbiAgICAgICAgICAgICAgICAgICAgdGhpc1twbGF5ZXJdLmFkZFRvSGFuZChjYXJkLmlkKVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmxhc3RQbGF5ZXIgPSBwbGF5ZXJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ib2FyZC5hZGRUb0JvYXJkKGNhcmQuaWQsIE51bWJlcihwbGF5ZXJbMV0pKVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYm9hcmQuYWRkVG9Cb2FyZChjYXJkLmlkLCAtMSlcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gYWRkIHRoaXMucGxheWVySFxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIm5vdCBpbiBkZWNrXCIpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfVxufVxuXG5leHBvcnQgeyBEZWNrIH1cbiJdLCJuYW1lcyI6WyJCb2FyZCIsIkhhbmR0eXBlIiwiRGVjayIsInAxIiwicDIiLCJwMyIsInA0IiwicDUiLCJwNiIsImNhcmREZWNrIiwiYm9hcmQiLCJhZGRDbGlja0NhcmRzIiwiaGFuZHR5cGUiLCJwcm90b3R5cGUiLCJsYXN0UGxheWVyQWRkZWQiLCJsYXN0UGxheWVyIiwia2V5IiwiY2FyZCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGRFdmVudExpc3RlbmVyIiwiaWQiLCJwbGF5ZXIiLCJfZ2V0SGlnaGxpZ2h0ZWRQb3MiLCJhZGRUb0hhbmQiLCJhZGRUb0JvYXJkIiwiTnVtYmVyIiwiY29uc29sZSIsImxvZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/deck.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Game: function() { return /* binding */ Game; }\n/* harmony export */ });\n/* harmony import */ var _deck_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./deck.js */ \"./src/scripts/deck.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\n\n\nfunction Game() {\n  this.p1 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player(true, 'p1');\n  this.p2 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player(true, 'p2');\n  this.p3 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player(false, 'p3');\n  this.p4 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player(false, 'p4');\n  this.p5 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player(false, 'p5');\n  this.p6 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player(false, 'p6');\n  this.deck = new _deck_js__WEBPACK_IMPORTED_MODULE_0__.Deck(this.p1, this.p2, this.p3, this.p4, this.p5, this.p6);\n  this.addDeckToPlayer(this.deck);\n}\nGame.prototype.addDeckToPlayer = function (deck) {\n  this.p1.setDeck(deck);\n  this.p2.setDeck(deck);\n  this.p3.setDeck(deck);\n  this.p4.setDeck(deck);\n  this.p5.setDeck(deck);\n  this.p6.setDeck(deck);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9nYW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnQztBQUNJO0FBRXBDLFNBQVNFLElBQUlBLENBQUEsRUFBRztFQUNaLElBQUksQ0FBQ0MsRUFBRSxHQUFHLElBQUlGLDhDQUFNLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQztFQUNoQyxJQUFJLENBQUNHLEVBQUUsR0FBRyxJQUFJSCw4Q0FBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7RUFDaEMsSUFBSSxDQUFDSSxFQUFFLEdBQUcsSUFBSUosOENBQU0sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDO0VBQ2pDLElBQUksQ0FBQ0ssRUFBRSxHQUFHLElBQUlMLDhDQUFNLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQztFQUNqQyxJQUFJLENBQUNNLEVBQUUsR0FBRyxJQUFJTiw4Q0FBTSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUM7RUFDakMsSUFBSSxDQUFDTyxFQUFFLEdBQUcsSUFBSVAsOENBQU0sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDO0VBQ2pDLElBQUksQ0FBQ1EsSUFBSSxHQUFHLElBQUlULDBDQUFJLENBQUMsSUFBSSxDQUFDRyxFQUFFLEVBQUUsSUFBSSxDQUFDQyxFQUFFLEVBQUUsSUFBSSxDQUFDQyxFQUFFLEVBQUUsSUFBSSxDQUFDQyxFQUFFLEVBQUUsSUFBSSxDQUFDQyxFQUFFLEVBQUUsSUFBSSxDQUFDQyxFQUFFLENBQUM7RUFDMUUsSUFBSSxDQUFDRSxlQUFlLENBQUMsSUFBSSxDQUFDRCxJQUFJLENBQUM7QUFDbkM7QUFFQVAsSUFBSSxDQUFDUyxTQUFTLENBQUNELGVBQWUsR0FBRyxVQUFVRCxJQUFJLEVBQUU7RUFDN0MsSUFBSSxDQUFDTixFQUFFLENBQUNTLE9BQU8sQ0FBQ0gsSUFBSSxDQUFDO0VBQ3JCLElBQUksQ0FBQ0wsRUFBRSxDQUFDUSxPQUFPLENBQUNILElBQUksQ0FBQztFQUNyQixJQUFJLENBQUNKLEVBQUUsQ0FBQ08sT0FBTyxDQUFDSCxJQUFJLENBQUM7RUFDckIsSUFBSSxDQUFDSCxFQUFFLENBQUNNLE9BQU8sQ0FBQ0gsSUFBSSxDQUFDO0VBQ3JCLElBQUksQ0FBQ0YsRUFBRSxDQUFDSyxPQUFPLENBQUNILElBQUksQ0FBQztFQUNyQixJQUFJLENBQUNELEVBQUUsQ0FBQ0ksT0FBTyxDQUFDSCxJQUFJLENBQUM7QUFDekIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bva2VycHJvamVjdGpzLy4vc3JjL3NjcmlwdHMvZ2FtZS5qcz9jZGMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERlY2sgfSBmcm9tIFwiLi9kZWNrLmpzXCJcbmltcG9ydCB7IFBsYXllciB9IGZyb20gXCIuL3BsYXllci5qc1wiXG5cbmZ1bmN0aW9uIEdhbWUoKSB7XG4gICAgdGhpcy5wMSA9IG5ldyBQbGF5ZXIodHJ1ZSwgJ3AxJylcbiAgICB0aGlzLnAyID0gbmV3IFBsYXllcih0cnVlLCAncDInKVxuICAgIHRoaXMucDMgPSBuZXcgUGxheWVyKGZhbHNlLCAncDMnKVxuICAgIHRoaXMucDQgPSBuZXcgUGxheWVyKGZhbHNlLCAncDQnKVxuICAgIHRoaXMucDUgPSBuZXcgUGxheWVyKGZhbHNlLCAncDUnKVxuICAgIHRoaXMucDYgPSBuZXcgUGxheWVyKGZhbHNlLCAncDYnKVxuICAgIHRoaXMuZGVjayA9IG5ldyBEZWNrKHRoaXMucDEsIHRoaXMucDIsIHRoaXMucDMsIHRoaXMucDQsIHRoaXMucDUsIHRoaXMucDYpXG4gICAgdGhpcy5hZGREZWNrVG9QbGF5ZXIodGhpcy5kZWNrKVxufVxuXG5HYW1lLnByb3RvdHlwZS5hZGREZWNrVG9QbGF5ZXIgPSBmdW5jdGlvbiAoZGVjaykge1xuICAgIHRoaXMucDEuc2V0RGVjayhkZWNrKVxuICAgIHRoaXMucDIuc2V0RGVjayhkZWNrKVxuICAgIHRoaXMucDMuc2V0RGVjayhkZWNrKVxuICAgIHRoaXMucDQuc2V0RGVjayhkZWNrKVxuICAgIHRoaXMucDUuc2V0RGVjayhkZWNrKVxuICAgIHRoaXMucDYuc2V0RGVjayhkZWNrKVxufVxuXG5leHBvcnQgeyBHYW1lIH1cbiJdLCJuYW1lcyI6WyJEZWNrIiwiUGxheWVyIiwiR2FtZSIsInAxIiwicDIiLCJwMyIsInA0IiwicDUiLCJwNiIsImRlY2siLCJhZGREZWNrVG9QbGF5ZXIiLCJwcm90b3R5cGUiLCJzZXREZWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/handType.js":
/*!*********************************!*\
  !*** ./src/scripts/handType.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Handtype: function() { return /* binding */ Handtype; }\n/* harmony export */ });\nconst KEY = {\n  1: \"No Pair\",\n  2: \"One Pair\",\n  3: \"Two Pair\",\n  4: \"Three of a Kind\",\n  5: \"Straight\",\n  6: \"Flush\",\n  7: \"Full House!\",\n  8: \"Four of a Kind!!\",\n  9: \"Straight Flush!!!\",\n  10: \"ROYAL FLUSH!!!\"\n};\nconst NUM_VAL = {\n  'A': 14,\n  'K': 13,\n  'Q': 12,\n  'J': 11,\n  '10': 10,\n  '9': 9,\n  '8': 8,\n  '7': 7,\n  '6': 6,\n  '5': 5,\n  '4': 4,\n  '3': 3,\n  '2': 2\n};\nfunction Handtype() {}\nHandtype.prototype.sortHand = function (hand) {\n  hand.sort((cardA, cardB) => {\n    const valueA = NUM_VAL[cardA.slice(0, -1)];\n    const valueB = NUM_VAL[cardB.slice(0, -1)];\n    return valueB - valueA; // Sort in descending order based on card values\n  });\n\n  const cards = {};\n  const newHand = [];\n  hand.forEach(item => {\n    cards[item[0]] = (cards[item[0]] || 0) + 1;\n  });\n  hand.forEach(item => {\n    if (cards[item[0]] >= 3) {\n      newHand.push(item);\n    }\n  });\n  hand.forEach(item => {\n    if (cards[item[0]] === 2) {\n      newHand.push(item);\n    }\n  });\n  hand.forEach(item => {\n    if (!newHand.includes(item)) newHand.push(item);\n  });\n  return newHand;\n};\nHandtype.prototype.isFlush = function (fiveCards) {\n  const suit = fiveCards[0].slice(-1);\n  for (let i = 0; i < 5; i++) {\n    if (fiveCards[i].slice(-1) !== suit) {\n      return false;\n    }\n  }\n  const sortedHand = this.sortHand(fiveCards);\n  return [true, sortedHand];\n};\nHandtype.prototype.isStraight = function (fiveCards) {\n  let sortedRanks = [];\n  const sortedHand = this.sortHand(fiveCards);\n  for (let i = 0; i < 5; i++) {\n    sortedRanks.push(sortedHand[i][0]);\n  }\n  if (JSON.stringify(sortedRanks) == JSON.stringify([\"A\", \"5\", \"4\", \"3\", \"2\"])) {\n    return [true, sortedHand];\n  }\n  if (JSON.stringify(sortedRanks) == JSON.stringify([\"6\", \"5\", \"4\", \"3\", \"2\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"7\", \"6\", \"5\", \"4\", \"3\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"8\", \"7\", \"6\", \"5\", \"4\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"9\", \"8\", \"7\", \"6\", \"5\"]) ||\n  // 1 is equivalent to 10\n  JSON.stringify(sortedRanks) == JSON.stringify([\"1\", \"9\", \"8\", \"7\", \"6\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"J\", \"1\", \"9\", \"8\", \"7\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"Q\", \"J\", \"1\", \"9\", \"8\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"K\", \"Q\", \"J\", \"1\", \"9\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"A\", \"K\", \"Q\", \"J\", \"1\"])) {\n    return [true, sortedHand];\n  } else {\n    return false;\n  }\n};\nHandtype.prototype.isFourOfAKind = function (fiveCards) {\n  let count = 0;\n  const sortedHand = this.sortHand(fiveCards);\n  let pair = sortedHand[0][0];\n  if (sortedHand[0][0] !== sortedHand[1][0]) {\n    pair = sortedHand[1][0];\n  }\n  for (let i = 0; i < sortedHand.length; i++) {\n    if (sortedHand[i][0] == pair) {\n      count += 1;\n    }\n  }\n  if (count === 4) {\n    return [true, sortedHand];\n  }\n  return false;\n};\nHandtype.prototype.isFullHouse = function (fiveCards) {\n  const sortedHand = this.sortHand(fiveCards);\n  if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[1][0] === sortedHand[2][0] && sortedHand[3][0] === sortedHand[4][0]) {\n    return [true, sortedHand];\n  }\n  if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[2][0] === sortedHand[3][0] && sortedHand[3][0] === sortedHand[4][0]) {\n    return [true, sortedHand];\n  }\n  return false;\n};\nHandtype.prototype.isThreeOfAKind = function (fiveCards) {\n  const sortedHand = this.sortHand(fiveCards);\n  if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[1][0] == sortedHand[2][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[1][0] === sortedHand[2][0] && sortedHand[2][0] == sortedHand[3][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[2][0] === sortedHand[3][0] && sortedHand[3][0] == sortedHand[4][0]) {\n    return [true, sortedHand];\n  } else {\n    return false;\n  }\n};\nHandtype.prototype.isTwoPair = function (fiveCards) {\n  const sortedHand = this.sortHand(fiveCards);\n  if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[2][0] === sortedHand[3][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[3][0] === sortedHand[4][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[1][0] === sortedHand[2][0] && sortedHand[3][0] === sortedHand[4][0]) {\n    return [true, sortedHand];\n  } else {\n    return false;\n  }\n};\nHandtype.prototype.isOnePair = function (fiveCards) {\n  const sortedHand = this.sortHand(fiveCards);\n  if (sortedHand[0][0] === sortedHand[1][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[1][0] === sortedHand[2][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[2][0] === sortedHand[3][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[3][0] === sortedHand[4][0]) {\n    return [true, sortedHand];\n  } else {\n    return false;\n  }\n};\nHandtype.prototype.isNoPair = function (fiveCards) {\n  const sortedHand = this.sortHand(fiveCards);\n  if (sortedHand[0][0] === sortedHand[1][0]) {\n    return false;\n  } else if (sortedHand[1][0] === sortedHand[2][0]) {\n    return false;\n  } else if (sortedHand[2][0] === sortedHand[3][0]) {\n    return false;\n  } else if (sortedHand[3][0] === sortedHand[4][0]) {\n    return false;\n  } else {\n    return [true, sortedHand];\n  }\n};\nHandtype.prototype.broadway = function (fiveCards) {\n  fiveCards.sort();\n  if (fiveCards[0].slice(0, 2) !== '10') return false;\n  if (fiveCards[1].slice(0, 1) !== 'A') return false;\n  if (fiveCards[2].slice(0, 1) !== 'J') return false;\n  if (fiveCards[3].slice(0, 1) !== 'K') return false;\n  if (fiveCards[4].slice(0, 1) !== 'Q') return false;\n  return true;\n};\nHandtype.prototype.getPokerHand = function (fiveCards) {\n  const flush = this.isFlush(fiveCards);\n  const straight = this.isStraight(fiveCards);\n  if (flush[0] && straight[0]) {\n    if (this.broadway(fiveCards)) {\n      return [10, this.sortHand(fiveCards)];\n    } else {\n      return [9, this.sortHand(fiveCards)];\n    }\n  }\n  const isFourOfAKind = this.isFourOfAKind(fiveCards);\n  if (isFourOfAKind[0]) {\n    return [8, isFourOfAKind[1]];\n  }\n  const isFullHouse = this.isFullHouse(fiveCards);\n  if (isFullHouse[0]) {\n    return [7, isFullHouse[1]];\n  }\n  const isFlush = this.isFlush(fiveCards);\n  if (isFlush[0]) {\n    return [6, isFlush[1]];\n  }\n  const isStraight = this.isStraight(fiveCards);\n  if (isStraight[0]) {\n    return [5, isStraight[1]];\n  }\n  const isThreeOfAKind = this.isThreeOfAKind(fiveCards);\n  if (isThreeOfAKind[0]) {\n    return [4, isThreeOfAKind[1]];\n  }\n  const isTwoPair = this.isTwoPair(fiveCards);\n  if (isTwoPair[0]) {\n    return [3, isTwoPair[1]];\n  }\n  const isOnePair = this.isOnePair(fiveCards);\n  if (isOnePair[0]) {\n    return [2, isOnePair[1]];\n  }\n  const isNoPair = this.isNoPair(fiveCards);\n  if (isNoPair[0]) {\n    return [1, isNoPair[1]];\n  }\n};\nHandtype.prototype.bestHand = function (hand, board) {\n  const twoCardCombos = [];\n  const threeCardCombos = [];\n  for (let i = 0; i < 3; i++) {\n    for (let j = i + 1; j < 4; j++) {\n      twoCardCombos.push([hand[i], hand[j]]);\n    }\n  }\n  for (let i = 0; i < 3; i++) {\n    for (let j = i + 1; j < 4; j++) {\n      for (let k = j + 1; k < 5; k++) {\n        const combination = [board[i], board[j], board[k]];\n        threeCardCombos.push(combination);\n      }\n    }\n  }\n  let top = [0];\n  for (let i = 0; i < threeCardCombos.length; i++) {\n    for (let j = 0; j < twoCardCombos.length; j++) {\n      const newRank = this.getPokerHand([twoCardCombos[j][0], twoCardCombos[j][1], threeCardCombos[i][0], threeCardCombos[i][1], threeCardCombos[i][2]]);\n      if (newRank[0] > top[0]) {\n        top = newRank;\n      } else if (newRank[0] === top[0]) {\n        top = [newRank[0], this.comparingKickers(newRank[1], top[1])];\n        if (top[1] === 0) top[1] = newRank[1];\n      }\n    }\n  }\n  return top;\n};\nHandtype.prototype.comparingKickers = function (hand1, hand2) {\n  for (let i = 0; i < 5; i++) {\n    if (NUM_VAL[hand1[i][0]] > NUM_VAL[hand2[i][0]]) {\n      return hand1;\n    } else if (NUM_VAL[hand1[i][0]] < NUM_VAL[hand2[i][0]]) {\n      return hand2;\n    }\n  }\n  return 0;\n};\nHandtype.prototype.winner = function (bestHandsHash) {\n  if (Object.keys(bestHandsHash).length === 0) return false;\n  let winner = {\n    'empty': [0, []]\n  };\n  for (let player in bestHandsHash) {\n    if (bestHandsHash[player][0] > winner[Object.keys(winner)[0]][0]) {\n      winner = {};\n      winner[player] = bestHandsHash[player];\n    }\n    // FIX: Multi player winners and checking kickers\n  }\n\n  return winner;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/handType.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Player: function() { return /* binding */ Player; }\n/* harmony export */ });\nfunction Player(active, playerNum) {\n  this.playerHand = [];\n  this.playerNum = playerNum;\n  this.active = active;\n}\nPlayer.prototype.setDeck = function (deck) {\n  this.deck = deck;\n  this.addPlayerButton();\n};\nPlayer.prototype.activate = function () {\n  this.active = !this.active;\n};\nPlayer.prototype.handLength = function () {\n  const length = this.playerHand.length;\n  return length;\n};\nPlayer.prototype.addPlayerButton = function () {\n  const player = document.getElementById(this.playerNum);\n  player.addEventListener(\"click\", () => {\n    if (!this.active) {\n      this.activate();\n      this.deck.board._addPlayers(this.playerNum);\n      this.deck.board._createNewPlayerBorder(this.playerNum);\n    } else {\n      this.activate();\n      this.deck.board._removePlayers(this.playerNum);\n      this.deck.board._createNextBorder();\n    }\n  });\n};\nPlayer.prototype.addToHand = function (card) {\n  this.playerHand.push(card);\n};\n// FIX\nPlayer.prototype.removeFromHand = function (card) {\n  this.playerHand.push(card);\n};\nPlayer.prototype.handFull = function () {\n  return this.playerHand.length === 4;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGF5ZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLFNBQVNBLE1BQU1BLENBQUNDLE1BQU0sRUFBRUMsU0FBUyxFQUFFO0VBQy9CLElBQUksQ0FBQ0MsVUFBVSxHQUFHLEVBQUU7RUFDcEIsSUFBSSxDQUFDRCxTQUFTLEdBQUdBLFNBQVM7RUFDMUIsSUFBSSxDQUFDRCxNQUFNLEdBQUdBLE1BQU07QUFFeEI7QUFFQUQsTUFBTSxDQUFDSSxTQUFTLENBQUNDLE9BQU8sR0FBRyxVQUFVQyxJQUFJLEVBQUU7RUFDdkMsSUFBSSxDQUFDQSxJQUFJLEdBQUdBLElBQUk7RUFDaEIsSUFBSSxDQUFDQyxlQUFlLENBQUMsQ0FBQztBQUMxQixDQUFDO0FBRURQLE1BQU0sQ0FBQ0ksU0FBUyxDQUFDSSxRQUFRLEdBQUcsWUFBWTtFQUNwQyxJQUFJLENBQUNQLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQ0EsTUFBTTtBQUM5QixDQUFDO0FBRURELE1BQU0sQ0FBQ0ksU0FBUyxDQUFDSyxVQUFVLEdBQUcsWUFBWTtFQUN0QyxNQUFNQyxNQUFNLEdBQUcsSUFBSSxDQUFDUCxVQUFVLENBQUNPLE1BQU07RUFDckMsT0FBT0EsTUFBTTtBQUNqQixDQUFDO0FBRURWLE1BQU0sQ0FBQ0ksU0FBUyxDQUFDRyxlQUFlLEdBQUcsWUFBWTtFQUMzQyxNQUFNSSxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLElBQUksQ0FBQ1gsU0FBUyxDQUFDO0VBQ3REUyxNQUFNLENBQUNHLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxNQUFNO0lBQ25DLElBQUksQ0FBQyxJQUFJLENBQUNiLE1BQU0sRUFBRTtNQUNkLElBQUksQ0FBQ08sUUFBUSxDQUFDLENBQUM7TUFDZixJQUFJLENBQUNGLElBQUksQ0FBQ1MsS0FBSyxDQUFDQyxXQUFXLENBQUMsSUFBSSxDQUFDZCxTQUFTLENBQUM7TUFDM0MsSUFBSSxDQUFDSSxJQUFJLENBQUNTLEtBQUssQ0FBQ0Usc0JBQXNCLENBQUMsSUFBSSxDQUFDZixTQUFTLENBQUM7SUFDMUQsQ0FBQyxNQUFNO01BQ0gsSUFBSSxDQUFDTSxRQUFRLENBQUMsQ0FBQztNQUNmLElBQUksQ0FBQ0YsSUFBSSxDQUFDUyxLQUFLLENBQUNHLGNBQWMsQ0FBQyxJQUFJLENBQUNoQixTQUFTLENBQUM7TUFDOUMsSUFBSSxDQUFDSSxJQUFJLENBQUNTLEtBQUssQ0FBQ0ksaUJBQWlCLENBQUMsQ0FBQztJQUN2QztFQUNKLENBQUMsQ0FBQztBQUNOLENBQUM7QUFFRG5CLE1BQU0sQ0FBQ0ksU0FBUyxDQUFDZ0IsU0FBUyxHQUFHLFVBQVVDLElBQUksRUFBRTtFQUN6QyxJQUFJLENBQUNsQixVQUFVLENBQUNtQixJQUFJLENBQUNELElBQUksQ0FBQztBQUM5QixDQUFDO0FBQ0Q7QUFDQXJCLE1BQU0sQ0FBQ0ksU0FBUyxDQUFDbUIsY0FBYyxHQUFHLFVBQVVGLElBQUksRUFBRTtFQUM5QyxJQUFJLENBQUNsQixVQUFVLENBQUNtQixJQUFJLENBQUNELElBQUksQ0FBQztBQUM5QixDQUFDO0FBRURyQixNQUFNLENBQUNJLFNBQVMsQ0FBQ29CLFFBQVEsR0FBRyxZQUFZO0VBQ3BDLE9BQU8sSUFBSSxDQUFDckIsVUFBVSxDQUFDTyxNQUFNLEtBQUssQ0FBQztBQUN2QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9rZXJwcm9qZWN0anMvLi9zcmMvc2NyaXB0cy9wbGF5ZXIuanM/NjQ3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBQbGF5ZXIoYWN0aXZlLCBwbGF5ZXJOdW0pIHtcbiAgICB0aGlzLnBsYXllckhhbmQgPSBbXVxuICAgIHRoaXMucGxheWVyTnVtID0gcGxheWVyTnVtXG4gICAgdGhpcy5hY3RpdmUgPSBhY3RpdmVcblxufVxuXG5QbGF5ZXIucHJvdG90eXBlLnNldERlY2sgPSBmdW5jdGlvbiAoZGVjaykge1xuICAgIHRoaXMuZGVjayA9IGRlY2tcbiAgICB0aGlzLmFkZFBsYXllckJ1dHRvbigpXG59XG5cblBsYXllci5wcm90b3R5cGUuYWN0aXZhdGUgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5hY3RpdmUgPSAhdGhpcy5hY3RpdmVcbn1cblxuUGxheWVyLnByb3RvdHlwZS5oYW5kTGVuZ3RoID0gZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IGxlbmd0aCA9IHRoaXMucGxheWVySGFuZC5sZW5ndGhcbiAgICByZXR1cm4gbGVuZ3RoXG59XG5cblBsYXllci5wcm90b3R5cGUuYWRkUGxheWVyQnV0dG9uID0gZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHBsYXllciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMucGxheWVyTnVtKVxuICAgIHBsYXllci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBpZiAoIXRoaXMuYWN0aXZlKSB7XG4gICAgICAgICAgICB0aGlzLmFjdGl2YXRlKClcbiAgICAgICAgICAgIHRoaXMuZGVjay5ib2FyZC5fYWRkUGxheWVycyh0aGlzLnBsYXllck51bSlcbiAgICAgICAgICAgIHRoaXMuZGVjay5ib2FyZC5fY3JlYXRlTmV3UGxheWVyQm9yZGVyKHRoaXMucGxheWVyTnVtKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5hY3RpdmF0ZSgpXG4gICAgICAgICAgICB0aGlzLmRlY2suYm9hcmQuX3JlbW92ZVBsYXllcnModGhpcy5wbGF5ZXJOdW0pXG4gICAgICAgICAgICB0aGlzLmRlY2suYm9hcmQuX2NyZWF0ZU5leHRCb3JkZXIoKVxuICAgICAgICB9XG4gICAgfSlcbn1cblxuUGxheWVyLnByb3RvdHlwZS5hZGRUb0hhbmQgPSBmdW5jdGlvbiAoY2FyZCkge1xuICAgIHRoaXMucGxheWVySGFuZC5wdXNoKGNhcmQpXG59XG4vLyBGSVhcblBsYXllci5wcm90b3R5cGUucmVtb3ZlRnJvbUhhbmQgPSBmdW5jdGlvbiAoY2FyZCkge1xuICAgIHRoaXMucGxheWVySGFuZC5wdXNoKGNhcmQpXG59XG5cblBsYXllci5wcm90b3R5cGUuaGFuZEZ1bGwgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMucGxheWVySGFuZC5sZW5ndGggPT09IDRcbn1cblxuZXhwb3J0IHsgUGxheWVyIH1cbiJdLCJuYW1lcyI6WyJQbGF5ZXIiLCJhY3RpdmUiLCJwbGF5ZXJOdW0iLCJwbGF5ZXJIYW5kIiwicHJvdG90eXBlIiwic2V0RGVjayIsImRlY2siLCJhZGRQbGF5ZXJCdXR0b24iLCJhY3RpdmF0ZSIsImhhbmRMZW5ndGgiLCJsZW5ndGgiLCJwbGF5ZXIiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImJvYXJkIiwiX2FkZFBsYXllcnMiLCJfY3JlYXRlTmV3UGxheWVyQm9yZGVyIiwiX3JlbW92ZVBsYXllcnMiLCJfY3JlYXRlTmV4dEJvcmRlciIsImFkZFRvSGFuZCIsImNhcmQiLCJwdXNoIiwicmVtb3ZlRnJvbUhhbmQiLCJoYW5kRnVsbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb2tlcnByb2plY3Rqcy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;