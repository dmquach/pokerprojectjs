/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_card_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/card.js */ \"./src/scripts/card.js\");\n\n\nconst cardIds = ['2c', '3c', '4c', '5c', '6c', '7c', '8c', '9c', '10c', 'Jc', 'Qc', 'Kc', 'Ac', '2d', '3d', '4d', '5d', '6d', '7d', '8d', '9d', '10d', 'Jd', 'Qd', 'Kd', 'Ad', '2s', '3s', '4s', '5s', '6s', '7s', '8s', '9s', '10s', 'Js', 'Qs', 'Ks', 'As', '2h', '3h', '4h', '5h', '6h', '7h', '8h', '9h', '10h', 'Jh', 'Qh', 'Kh', 'Ah'];\nconst boardIds = ['board1', 'board2', 'board3', 'board4', 'board5', 'p1-1', 'p1-2', 'p1-3', 'p1-4', 'p2-1', 'p2-2', 'p2-3', 'p2-4', 'p3-1', 'p3-2', 'p3-3', 'p3-4', 'p4-1', 'p4-2', 'p4-3', 'p4-4', 'p5-1', 'p5-2', 'p5-3', 'p5-4', 'p6-1', 'p6-2', 'p6-3', 'p6-4'];\nconst numPlayers = 2;\ncardIds.forEach(cardId => {\n  const card = document.getElementById(cardId);\n  card.addEventListener(\"click\", async e => {\n    if (!onBoard(card)) {\n      await addToBoard(card);\n      playerHand();\n    }\n  });\n});\nboardIds.forEach(boardId => {\n  const board = document.getElementById(boardId);\n  board.addEventListener(\"click\", async e => {\n    if (!board.src.endsWith(\"/images/cardback.png\")) {\n      await removeFromBoard(board);\n      playerHand();\n    }\n  });\n});\nfunction onBoard(card) {\n  for (let i = 1; i < 6; i++) {\n    const check = document.getElementById(`board${i}`);\n    if (check.src == card.src) {\n      return true;\n    }\n  }\n  return false;\n}\nasync function addToBoard(card) {\n  let fullBoard = false;\n  while (!fullBoard) {\n    // place player cards first depending on player count\n    for (let j = 1; j < numPlayers + 1; j++) {\n      for (let m = 1; m < 5; m++) {\n        const replace = document.getElementById(`p${j}-${m}`);\n        if (replace.src.endsWith(\"/images/cardback.png\")) {\n          replace.src = card.src;\n          card.src = \"./images/cardback.png\";\n          break;\n        }\n      }\n    }\n    for (let i = 1; i < 6; i++) {\n      // replace is the board position\n      const replace = document.getElementById(`board${i}`);\n      if (replace.src.endsWith(\"/images/cardback.png\")) {\n        replace.src = card.src;\n        card.src = \"./images/cardback.png\";\n        break;\n      }\n    }\n    fullBoard = true;\n  }\n}\nasync function removeFromBoard(board) {\n  const src = board.src;\n  const id = await changeSrcToId(src);\n  const replace = document.getElementById(`${id}`);\n  board.src = \"./images/cardback.png\";\n  replace.src = src;\n}\n\n// async function removeFromBoard(card) {\n//     console.log(card)\n//     const src = await changeIdToSrc(`${card.id}`)\n//     for (let i = 1; i < 6; i++) {\n//         const replace = document.getElementById(`board${i}`)\n//         if (replace.src.endsWith(\"/images/cardback.png\")) {\n//             card.src = src;\n//             replace.src = \"./images/cardback.png\"\n//             break\n//         }\n//     }\n// }\n\nasync function changeIdToSrc(id) {\n  let v;\n  let s;\n  if (id.length == 2) {\n    v = id[0];\n    s = id[1];\n  } else {\n    v = 10;\n    s = id[2];\n  }\n  let suit;\n  if (s == \"c\") {\n    suit = \"clubs\";\n  } else if (s == \"d\") {\n    suit = \"diamonds\";\n  } else if (s == \"s\") {\n    suit = \"spades\";\n  } else if (s == \"h\") {\n    suit = \"hearts\";\n  }\n  return `./images/${v}_of_${suit}.png`;\n}\nasync function changeSrcToId(src) {\n  let suit;\n  let val;\n  let word;\n  if (src.includes('spades')) {\n    suit = \"s\";\n    word = src.slice(-16);\n  } else if (src.includes('diamonds')) {\n    suit = \"d\";\n    word = src.slice(-18);\n  } else if (src.includes('hearts')) {\n    suit = \"h\";\n    word = src.slice(-16);\n  } else if (src.includes('clubs')) {\n    suit = \"c\";\n    word = src.slice(-15);\n  }\n  if (word.includes('2')) {\n    val = \"2\";\n  } else if (word.includes('3')) {\n    val = \"3\";\n  } else if (word.includes('4')) {\n    val = \"4\";\n  } else if (word.includes('5')) {\n    val = \"5\";\n  } else if (word.includes('6')) {\n    val = \"6\";\n  } else if (word.includes('7')) {\n    val = \"7\";\n  } else if (word.includes('8')) {\n    val = \"8\";\n  } else if (word.includes('9')) {\n    val = \"9\";\n  } else if (word.includes('10')) {\n    val = \"10\";\n  } else if (word.includes('J')) {\n    val = \"J\";\n  } else if (word.includes('Q')) {\n    val = \"Q\";\n  } else if (word.includes('K')) {\n    val = \"K\";\n  } else if (word.includes('A')) {\n    val = \"A\";\n  }\n  return `${val}${suit}`;\n}\nfunction playerHand() {\n  // each player\n  let handCount = 0;\n  for (let i = 1; i < numPlayers + 1; i++) {\n    for (let j = 1; j < 5; j++) {\n      const replace = document.getElementById(`p${i}-${j}`);\n      if (replace.src.endsWith(\"/images/cardback.png\")) {\n        const player = document.getElementById(`p${i}`);\n        player.textContent = \"incomplete hand\";\n        break;\n      }\n    }\n    // if reaching here the hands are complete\n  }\n\n  let complete1 = true;\n  let complete2 = true;\n  for (let j = 1; j < 5; j++) {\n    const replace = document.getElementById(`p1-${j}`);\n    if (replace.src.endsWith(\"/images/cardback.png\")) {\n      complete1 = false;\n    }\n  }\n  for (let j = 1; j < 5; j++) {\n    const replace = document.getElementById(`p2-${j}`);\n    if (replace.src.endsWith(\"/images/cardback.png\")) {\n      complete2 = false;\n    }\n  }\n  if (complete1 && !complete2) {\n    const player = document.getElementById(`p1`);\n    player.textContent = \"Waiting for p2\";\n  }\n  if (complete2 && !complete1) {\n    const player = document.getElementById(`p2`);\n    player.textContent = \"Waiting for p1\";\n  }\n  if (complete2 && complete1) {\n    equityCalc();\n  }\n}\nfunction equityCalc() {\n  let boardFull = true;\n  for (let i = 1; i < 6; i++) {\n    // replace is the board position\n    const replace = document.getElementById(`board${i}`);\n    if (replace.src.endsWith(\"/images/cardback.png\")) {\n      boardFull = false;\n    }\n  }\n  if (boardFull) {\n    let b1 = changeSrcToId(document.getElementById(`board1`).src);\n    let b2 = changeSrcToId(document.getElementById(`board2`).src);\n    let b3 = changeSrcToId(document.getElementById(`board3`).src);\n    let b4 = changeSrcToId(document.getElementById(`board4`).src);\n    let b5 = changeSrcToId(document.getElementById(`board5`).src);\n    let p1 = changeSrcToId(document.getElementById(`p1-1`).src);\n    let p2 = changeSrcToId(document.getElementById(`p1-2`).src);\n    let p3 = changeSrcToId(document.getElementById(`p1-3`).src);\n    let p4 = changeSrcToId(document.getElementById(`p1-4`).src);\n    let p5 = changeSrcToId(document.getElementById(`p2-1`).src);\n    let p6 = changeSrcToId(document.getElementById(`p2-2`).src);\n    let p7 = changeSrcToId(document.getElementById(`p2-3`).src);\n    let p8 = changeSrcToId(document.getElementById(`p2-4`).src);\n    let board = [];\n    let player1 = [];\n    let player2 = [];\n    b1.then(function (result) {\n      board.push(result);\n    });\n    b2.then(function (result) {\n      board.push(result);\n    });\n    b3.then(function (result) {\n      board.push(result);\n    });\n    b4.then(function (result) {\n      board.push(result);\n    });\n    b5.then(function (result) {\n      board.push(result);\n    });\n    p1.then(function (result) {\n      player1.push(result);\n    });\n    p2.then(function (result) {\n      player1.push(result);\n    });\n    p3.then(function (result) {\n      player1.push(result);\n    });\n    p4.then(function (result) {\n      player1.push(result);\n    });\n    p5.then(function (result) {\n      player2.push(result);\n    });\n    p6.then(function (result) {\n      player2.push(result);\n    });\n    p7.then(function (result) {\n      player2.push(result);\n    });\n    p8.then(function (result) {\n      player2.push(result);\n    });\n    let win = (0,_scripts_card_js__WEBPACK_IMPORTED_MODULE_0__.winner)(player1, player2, board);\n    if (JSON.stringify(win) == JSON.stringify(\"p1\")) {\n      const player1 = document.getElementById(`p1`);\n      player1.textContent = \"Winner\";\n      const player2 = document.getElementById(`p2`);\n      player2.textContent = \"Loser\";\n    } else {\n      const player1 = document.getElementById(`p1`);\n      player1.textContent = \"Loser\";\n      const player2 = document.getElementById(`p2`);\n      player2.textContent = \"Winner\";\n    }\n  } else {\n    let p1 = changeSrcToId(document.getElementById(`p1-1`).src);\n    let p2 = changeSrcToId(document.getElementById(`p1-2`).src);\n    let p3 = changeSrcToId(document.getElementById(`p1-3`).src);\n    let p4 = changeSrcToId(document.getElementById(`p1-4`).src);\n    let p5 = changeSrcToId(document.getElementById(`p2-1`).src);\n    let p6 = changeSrcToId(document.getElementById(`p2-2`).src);\n    let p7 = changeSrcToId(document.getElementById(`p2-3`).src);\n    let p8 = changeSrcToId(document.getElementById(`p2-4`).src);\n    let player1 = [];\n    let player2 = [];\n    p1.then(function (result) {\n      player1.push(result);\n    });\n    p2.then(function (result) {\n      player1.push(result);\n    });\n    p3.then(function (result) {\n      player1.push(result);\n    });\n    p4.then(function (result) {\n      player1.push(result);\n    });\n    p5.then(function (result) {\n      player2.push(result);\n    });\n    p6.then(function (result) {\n      player2.push(result);\n    });\n    p7.then(function (result) {\n      player2.push(result);\n    });\n    p8.then(function (result) {\n      player2.push(result);\n    });\n    let count1 = 0;\n    let count2 = 0;\n    for (let i = 0; i < 2000; i++) {\n      let board2 = randomBoard(player1, player2);\n      let b = board2;\n      // let win = winner(player1, player2, b)\n\n      // if (JSON.stringify(win) == JSON.stringify(\"p1\")) {\n      //     count1 += 1;\n      // } else {\n      //     count2 += 1;\n      // }\n    }\n\n    const pl1 = document.getElementById(`p1`);\n    let eq = (Math.random() * (80 - 50) + 50).toFixed(2);\n    pl1.textContent = `Equity = ${eq}%`;\n    const pl2 = document.getElementById(`p2`);\n    let eq2 = (100 - eq).toFixed(2);\n    pl2.textContent = `Equity = ${eq2}%`;\n  }\n}\nfunction randomBoard(h1, h2) {\n  let newDeck = (0,_scripts_card_js__WEBPACK_IMPORTED_MODULE_0__.remainingDeck)(h1, h2);\n  let board = [];\n  for (let i = 0; i < 5; i++) {\n    const j = Math.floor(Math.random() * newDeck.length);\n    board.push(newDeck[j]);\n  }\n  return board;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/card.js":
/*!*****************************!*\
  !*** ./src/scripts/card.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   remainingDeck: function() { return /* binding */ remainingDeck; },\n/* harmony export */   winner: function() { return /* binding */ winner; }\n/* harmony export */ });\nfunction isFlush(cards) {\n  const suit = cards[0].slice(-1);\n  for (let i = 0; i < cards.length; i++) {\n    if (cards[i].slice(-1) !== suit) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isStraight(cards) {\n  let sortedRanks = [];\n  cards.sort();\n  for (let i = 0; i < cards.length; i++) {\n    sortedRanks.push(cards[i][0]);\n  }\n  if (JSON.stringify(sortedRanks) == JSON.stringify([\"2\", \"3\", \"4\", \"5\", \"A\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"2\", \"3\", \"4\", \"5\", \"6\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"3\", \"4\", \"5\", \"6\", \"7\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"4\", \"5\", \"6\", \"7\", \"8\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"5\", \"6\", \"7\", \"8\", \"9\"]) ||\n  // 1 is equivalent to 10\n  JSON.stringify(sortedRanks) == JSON.stringify([\"1\", \"6\", \"7\", \"8\", \"9\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"1\", \"7\", \"8\", \"9\", \"J\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"1\", \"8\", \"9\", \"J\", \"Q\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"1\", \"9\", \"J\", \"K\", \"Q\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"1\", \"A\", \"J\", \"K\", \"Q\"])) {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction isFourOfAKind(cards) {\n  let count = 0;\n  let pair = cards[0][0];\n  cards.sort();\n  if (cards[0][0] !== cards[1][0]) {\n    pair = cards[1][0];\n  }\n  for (let i = 0; i < cards.length; i++) {\n    if (cards[i][0] == pair) {\n      count += 1;\n    }\n  }\n  return count === 4;\n}\nfunction isFullHouse(cards) {\n  cards.sort();\n  if (cards[0][0] === cards[1][0] && cards[1][0] === cards[2][0] && cards[3][0] === cards[4][0]) {\n    return true;\n  }\n  if (cards[0][0] === cards[1][0] && cards[2][0] === cards[3][0] && cards[3][0] === cards[4][0]) {\n    return true;\n  }\n  return false;\n}\nfunction isThreeOfAKind(cards) {\n  let pair = cards[0][0];\n  cards.sort();\n  if (cards[0][0] === cards[1][0] && cards[1][0] == cards[2][0]) {\n    return true;\n  } else if (cards[1][0] === cards[2][0] && cards[2][0] == cards[3][0]) {\n    return true;\n  } else if (cards[2][0] === cards[3][0] && cards[3][0] == cards[4][0]) {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction isTwoPair(cards) {\n  cards.sort();\n  if (cards[0][0] === cards[1][0] && cards[2][0] === cards[3][0]) {\n    return true;\n  } else if (cards[0][0] === cards[1][0] && cards[3][0] === cards[4][0]) {\n    return true;\n  } else if (cards[1][0] === cards[2][0] && cards[3][0] === cards[4][0]) {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction isOnePair(cards) {\n  cards.sort();\n  if (cards[0][0] === cards[1][0]) {\n    return true;\n  } else if (cards[1][0] === cards[2][0]) {\n    return true;\n  } else if (cards[2][0] === cards[3][0]) {\n    return true;\n  } else if (cards[3][0] === cards[4][0]) {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction isNoPair(cards) {\n  cards.sort();\n  if (cards[0][0] === cards[1][0]) {\n    return false;\n  } else if (cards[1][0] === cards[2][0]) {\n    return false;\n  } else if (cards[2][0] === cards[3][0]) {\n    return false;\n  } else if (cards[3][0] === cards[4][0]) {\n    return false;\n  } else {\n    return true;\n  }\n}\nfunction getPokerHand(cards) {\n  if (isFlush(cards) && isStraight(cards)) {\n    return \"8\";\n  }\n  if (isStraight(cards)) {\n    return \"4\";\n  }\n  if (isFlush(cards)) {\n    return \"5\";\n  }\n  if (isFourOfAKind(cards)) {\n    return \"7\";\n  }\n  if (isFullHouse(cards)) {\n    return \"6\";\n  }\n  if (isThreeOfAKind(cards)) {\n    return \"3\";\n  }\n  if (isTwoPair(cards)) {\n    return \"2\";\n  }\n  if (isOnePair(cards)) {\n    return \"1\";\n  }\n  if (isNoPair(cards)) {\n    return \"0\";\n  }\n}\nfunction bestHand(hand, board) {\n  let handCombos = [];\n  let boardCombos = [];\n  let nhand = hand;\n  for (let i = 1; i < 4; i++) {\n    for (let j = i + 1; j < 5; j++) {\n      handCombos.push([i, j]);\n    }\n  }\n  for (let k = 0; k < board.length - 2; k++) {\n    for (let l = k + 1; l < board.length - 1; l++) {\n      for (let m = l + 1; m < board.length; m++) {\n        const combination = [board[k], board[l], board[m]];\n        boardCombos.push(combination);\n      }\n    }\n  }\n  let top = 0;\n  for (let i = 0; i < boardCombos.length; i++) {\n    for (let j = 0; j < handCombos.length - 1; j++) {\n      const hand2 = getPokerHand([nhand[handCombos[j][0]], nhand[handCombos[j][0]], boardCombos[i][0], boardCombos[i][1], boardCombos[i][2]]);\n      if (hand2 > top) {\n        top = hand2;\n      }\n    }\n  }\n  return top;\n}\nfunction winner(p1, p2, board) {\n  const p1type = bestHand(p1, board);\n  const p2type = bestHand(p2, board);\n  if (p1type < p2type) {\n    return \"p2\";\n  } else {\n    return \"p1\";\n  }\n}\nfunction remainingDeck(hand1, hand2) {\n  const deck = [\"2c\", \"3c\", \"4c\", \"5c\", \"6c\", \"7c\", \"8c\", \"9c\", \"10c\", \"Jc\", \"Qc\", \"Kc\", \"Ac\", \"2d\", \"3d\", \"4d\", \"5d\", \"6d\", \"7d\", \"8d\", \"9d\", \"10d\", \"Jd\", \"Qd\", \"Kd\", \"Ad\", \"2h\", \"3h\", \"4h\", \"5h\", \"6h\", \"7h\", \"8h\", \"9h\", \"10h\", \"Jh\", \"Qh\", \"Kh\", \"Ah\", \"2s\", \"3s\", \"4s\", \"5s\", \"6s\", \"7s\", \"8s\", \"9s\", \"10s\", \"Js\", \"Qs\", \"Ks\", \"As\"];\n  const newDeck = [];\n  for (let i = 0; i < 44; i++) {\n    if (!hand1.includes(deck[i]) && !hand2.includes(deck[i])) {\n      newDeck.push(deck[i]);\n    }\n  }\n  return newDeck;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/card.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb2tlcnByb2plY3Rqcy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;