/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_game_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/game.js */ \"./src/scripts/game.js\");\n\nconst game = new _scripts_game_js__WEBPACK_IMPORTED_MODULE_0__.Game();\n\n// function equityCalc() {\n\n//     let boardFull = true;\n//     for (let i = 1; i < 6; i++) {\n//         // replace is the board position\n//         const replace = document.getElementById(`board${i}`)\n//         if (replace.src.endsWith(\"/images/cardback.png\")) {\n//             boardFull = false\n//         }\n//     }\n\n//     if (boardFull) {\n//         let b1 = changeSrcToId(document.getElementById(`board1`).src)\n//         let b2 = changeSrcToId(document.getElementById(`board2`).src)\n//         let b3 = changeSrcToId(document.getElementById(`board3`).src)\n//         let b4 = changeSrcToId(document.getElementById(`board4`).src)\n//         let b5 = changeSrcToId(document.getElementById(`board5`).src)\n\n//         let p1 = changeSrcToId(document.getElementById(`p1-1`).src)\n//         let p2 = changeSrcToId(document.getElementById(`p1-2`).src)\n//         let p3 = changeSrcToId(document.getElementById(`p1-3`).src)\n//         let p4 = changeSrcToId(document.getElementById(`p1-4`).src)\n\n//         let p5 = changeSrcToId(document.getElementById(`p2-1`).src)\n//         let p6 = changeSrcToId(document.getElementById(`p2-2`).src)\n//         let p7 = changeSrcToId(document.getElementById(`p2-3`).src)\n//         let p8 = changeSrcToId(document.getElementById(`p2-4`).src)\n\n//         let board = []\n//         let player1 = []\n//         let player2 = []\n\n//         b1.then(function(result) {\n//             board.push(result)\n//         });\n//         b2.then(function(result) {\n//             board.push(result)\n//         });\n//         b3.then(function(result) {\n//             board.push(result)\n//         });\n//         b4.then(function(result) {\n//             board.push(result)\n//         });\n//         b5.then(function(result) {\n//             board.push(result)\n//         });\n\n//         p1.then(function(result) {\n//             player1.push(result)\n//         });\n//         p2.then(function(result) {\n//             player1.push(result)\n//         });\n//         p3.then(function(result) {\n//             player1.push(result)\n//         });\n//         p4.then(function(result) {\n//             player1.push(result)\n//         });\n//         p5.then(function(result) {\n//             player2.push(result)\n//         });\n//         p6.then(function(result) {\n//             player2.push(result)\n//         });\n//         p7.then(function(result) {\n//             player2.push(result)\n//         });\n//         p8.then(function(result) {\n//             player2.push(result)\n//         });\n\n//         let win = winner(player1, player2, board)\n//         if (JSON.stringify(win) == JSON.stringify(\"p1\")) {\n//             const player1 = document.getElementById(`p1`)\n//             player1.textContent = \"Winner\"\n\n//             const player2 = document.getElementById(`p2`)\n//             player2.textContent = \"Loser\"\n//         } else {\n//             const player1 = document.getElementById(`p1`)\n//             player1.textContent = \"Loser\"\n\n//             const player2 = document.getElementById(`p2`)\n//             player2.textContent = \"Winner\"\n//         }\n//     } else {\n//         let p1 = changeSrcToId(document.getElementById(`p1-1`).src)\n//         let p2 = changeSrcToId(document.getElementById(`p1-2`).src)\n//         let p3 = changeSrcToId(document.getElementById(`p1-3`).src)\n//         let p4 = changeSrcToId(document.getElementById(`p1-4`).src)\n\n//         let p5 = changeSrcToId(document.getElementById(`p2-1`).src)\n//         let p6 = changeSrcToId(document.getElementById(`p2-2`).src)\n//         let p7 = changeSrcToId(document.getElementById(`p2-3`).src)\n//         let p8 = changeSrcToId(document.getElementById(`p2-4`).src)\n\n//         let player1 = []\n//         let player2 = []\n\n//         p1.then(function(result) {\n//             player1.push(result)\n//         });\n//         p2.then(function(result) {\n//             player1.push(result)\n//         });\n//         p3.then(function(result) {\n//             player1.push(result)\n//         });\n//         p4.then(function(result) {\n//             player1.push(result)\n//         });\n//         p5.then(function(result) {\n//             player2.push(result)\n//         });\n//         p6.then(function(result) {\n//             player2.push(result)\n//         });\n//         p7.then(function(result) {\n//             player2.push(result)\n//         });\n//         p8.then(function(result) {\n//             player2.push(result)\n//         });\n//         let count1 = 0\n//         let count2 = 0\n//         for (let i = 0; i < 2000; i++) {\n//             let board2 = randomBoard(player1, player2)\n//             let b = board2\n//             // let win = winner(player1, player2, b)\n\n//             // if (JSON.stringify(win) == JSON.stringify(\"p1\")) {\n//             //     count1 += 1;\n//             // } else {\n//             //     count2 += 1;\n//             // }\n//         }\n//         const pl1 = document.getElementById(`p1`)\n//         let eq = (Math.random() * (80-50) + 50).toFixed(2)\n//         pl1.textContent = `Equity = ${eq}%`\n\n//         const pl2 = document.getElementById(`p2`)\n//         let eq2 = (100 - eq).toFixed(2)\n//         pl2.textContent = `Equity = ${eq2}%`\n//     }\n// }\n\n// function randomBoard(h1, h2) {\n//     let newDeck = remainingDeck(h1, h2)\n//     let board = []\n//     for (let i = 0; i < 5; i++) {\n//         const j = Math.floor(Math.random() * (newDeck.length));\n//         board.push(newDeck[j])\n//     }\n//     return board\n// }//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/board.js":
/*!******************************!*\
  !*** ./src/scripts/board.js ***!
  \******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Board: function() { return /* binding */ Board; }\n/* harmony export */ });\nconst KEY = {\n  1: \"No Pair\",\n  2: \"One Pair\",\n  3: \"Two Pair\",\n  4: \"Three of a Kind\",\n  5: \"Straight\",\n  6: \"Flush\",\n  7: \"Full House!\",\n  8: \"Four of a Kind!!\",\n  9: \"Straight Flush!!!\",\n  10: \"ROYAL FLUSH!!!\"\n};\nfunction Board(deck) {\n  this.boardPos = {\n    'p1-1': 'open',\n    'p1-2': 'open',\n    'p1-3': 'open',\n    'p1-4': 'open',\n    'p2-1': 'open',\n    'p2-2': 'open',\n    'p2-3': 'open',\n    'p2-4': 'open',\n    'p3-1': '',\n    'p3-2': '',\n    'p3-3': '',\n    'p3-4': '',\n    'p4-1': '',\n    'p4-2': '',\n    'p4-3': '',\n    'p4-4': '',\n    'p5-1': '',\n    'p5-2': '',\n    'p5-3': '',\n    'p5-4': '',\n    'p6-1': '',\n    'p6-2': '',\n    'p6-3': '',\n    'p6-4': '',\n    'board1': 'open',\n    'board2': 'open',\n    'board3': 'open',\n    'board4': 'open',\n    'board5': 'open',\n    'highlight': 'p1-1'\n  };\n  this.deck = deck;\n  this.onBoard = [];\n  this.winner = false;\n  this.addClickBoard();\n  this.createReset();\n  this._initialBorder();\n}\nBoard.prototype.addClickBoard = function () {\n  for (let pos in this.boardPos) {\n    if (pos !== 'highlight') {\n      const newPos = document.getElementById(pos);\n      newPos.addEventListener(\"click\", e => {\n        if (this.boardPos[e.target.id] === 'open') {\n          this._removeBorder();\n          this._addBorder(e.target);\n        } else if (!(this.boardPos[e.target.id] === '')) {\n          if (this.winner) this._clearWinnerBorders();\n          this.removeFromBoard(e.target.id);\n          this._addBorder(e.target);\n        } else {\n          console.log(\"add player first!\");\n        }\n      });\n    }\n  }\n};\nBoard.prototype.full = function () {\n  return this.onBoard.length === 5;\n};\nBoard.prototype.playersReady = function () {\n  for (let i = 1; i < 7; i++) {\n    const player = this.deck[`p${i}`];\n    if (player.active && !player.handFull()) return false;\n  }\n  return true;\n};\nBoard.prototype.swapImg = function (pos1, pos2) {\n  const changePos = document.getElementById(pos1);\n  const tempSrc = changePos.src;\n  const changeNextPos = document.getElementById(pos2);\n  changePos.src = changeNextPos.src;\n  changeNextPos.src = tempSrc;\n};\nBoard.prototype.pushOnBoard = function (cardKey) {\n  this.onBoard.push(cardKey);\n};\nBoard.prototype.pushPlayerHand = function () {};\nBoard.prototype.removePlayerHand = function () {};\nBoard.prototype.createReset = function () {\n  const res = document.getElementById('resetButton');\n  res.addEventListener(\"click\", () => {\n    for (let i = 1; i < 7; i++) {\n      if (this.deck[`p${i}`].active) this._removePlayers(`p${i}`);\n      if (i < 3) {\n        this._addPlayers(`p${i}`);\n      }\n    }\n    this.clearBoard();\n    this._createNextBorder();\n  });\n};\nBoard.prototype.addToBoard = function (cardKey) {\n  let playerNum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  if (this.boardPos['highlight'] === '') {\n    console.log('everything full');\n  } else {\n    this.boardPos[this.boardPos['highlight']] = 'taken';\n    this.deck.cardDeck[cardKey] = 'board';\n    this.swapImg(this.boardPos['highlight'], cardKey);\n    if (this.boardPos.highlight[0] === 'b') {\n      this.pushOnBoard(cardKey);\n    }\n\n    // FIX, update odds not just when board gets full but when a hand gets full and the board is full\n    if (this.full() && this.playersReady()) {\n      this._clearWinnerBorders();\n      // FIX: Clear winner text as well\n      // FIX: change following to be in calculate equities\n      const bestHands = {};\n      for (let i = 1; i < 7; i++) {\n        if (this.deck[`p${i}`].handFull()) {\n          bestHands[`p${i}`] = this.deck.handtype.bestHand(this.deck[`p${i}`].playerHand, this.onBoard);\n        }\n      }\n      //\n      const winner = this.deck.handtype.winner(bestHands);\n      if (winner) this.highlightWinner(winner);\n    } else if (this.playersReady()) {\n      this.displayEquities(this.onBoard);\n    } else {\n      this.createWaitingMessages();\n    }\n    this._createNextBorder(playerNum);\n  }\n};\nBoard.prototype.removeFromBoard = function (boardKey) {\n  const itemToRemove = document.getElementById(boardKey);\n  const item = this.changeSrcToId(itemToRemove.src);\n  this.swapImg(boardKey, item);\n  this.boardPos[boardKey] = 'open';\n  this.deck.cardDeck[item] = 'deck';\n  const index = this.onBoard.indexOf(item);\n  if (index !== -1) {\n    this.onBoard.splice(index, 1);\n  }\n  for (let i = 1; i < 7; i++) {\n    let player = this.deck[`p${i}`].playerHand;\n    let index = player.indexOf(item);\n    if (index !== -1) {\n      player.splice(index, 1);\n    }\n  }\n  if (this.playersReady()) {\n    this.displayEquities(this.onBoard);\n  } else {\n    this.createWaitingMessages();\n  }\n};\nBoard.prototype.clearBoard = function () {\n  for (let i = 1; i < 6; i++) {\n    if (this.boardPos[`board${i}`] === 'taken') this.removeFromBoard(`board${i}`);\n  }\n  this._clearWinnerBorders();\n};\nBoard.prototype._addBorder = function (pos) {\n  this._removeBorder();\n  this.boardPos['highlight'] = pos.id;\n  pos.style.border = '2px solid red';\n};\nBoard.prototype._removeBorder = function () {\n  const prevBorder = document.getElementById(this.boardPos['highlight']);\n  if (prevBorder && prevBorder.style.border !== '4px solid blue') {\n    prevBorder.removeAttribute('style');\n  }\n  this.boardPos.highlight = '';\n};\nBoard.prototype._clearWinnerBorders = function () {\n  for (let pos in this.boardPos) {\n    const nextBorder = document.getElementById(pos);\n    if (nextBorder) nextBorder.removeAttribute('style');\n  }\n};\nBoard.prototype._createNextBorder = function () {\n  let playerNum = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  // playerNum should tell what player to make next border for\n  // 0 means add to next available space\n  // -1 means add to board\n  // num means add to that player\n  if (playerNum > 0 && this.deck['p' + playerNum].handLength() === 4) {\n    // FIX: make this code more dry\n    for (let pos in this.boardPos) {\n      if (this.boardPos[pos] === 'open') {\n        const nextBorder = document.getElementById(pos);\n        return this._addBorder(nextBorder);\n      }\n    }\n  } else if (playerNum === -1 && this.full()) {\n    // FIX, CHECK IF PLAYERS HANDS ARE FULL THEN DONT GENERATE\n    for (let pos in this.boardPos) {\n      if (this.boardPos[pos] === 'open') {\n        const nextBorder = document.getElementById(pos);\n        return this._addBorder(nextBorder);\n      }\n    }\n  } else if (playerNum === -1) {\n    for (let pos in this.boardPos) {\n      if (pos[0] === 'b' && this.boardPos[pos] === 'open') {\n        const nextBorder = document.getElementById(pos);\n        return this._addBorder(nextBorder);\n      }\n    }\n  } else if (playerNum !== 0) {\n    for (let pos in this.boardPos) {\n      if (Number(pos[1]) === playerNum && this.boardPos[pos] === 'open') {\n        const nextBorder = document.getElementById(pos);\n        return this._addBorder(nextBorder);\n      }\n    }\n  } else {\n    for (let pos in this.boardPos) {\n      if (this.boardPos[pos] === 'open') {\n        const nextBorder = document.getElementById(pos);\n        return this._addBorder(nextBorder);\n      }\n    }\n  }\n  // if no open spaces\n\n  this._removeBorder();\n  this.boardPos.highlight = '';\n  // -1 when no empty spaces\n  return -1;\n};\nBoard.prototype._createNewPlayerBorder = function (playerNum) {\n  const nextBorder = document.getElementById(`${playerNum}-1`);\n  this._addBorder(nextBorder);\n};\nBoard.prototype._initialBorder = function () {\n  const initial = document.getElementById('p1-1');\n  this._addBorder(initial);\n};\nBoard.prototype._getHighlightedPos = function () {\n  const pos = this.boardPos.highlight;\n  if (pos[0] === 'p') {\n    // returns player\n    return pos.slice(0, 2);\n  } else {\n    return -1;\n  }\n};\nBoard.prototype._addPlayers = function (playerNum) {\n  //p1 boardPos[0-3], p2 [4-7]\n  for (let key in this.boardPos) {\n    if (key[1] === playerNum[1]) {\n      const pos = document.querySelector(`.${key}`);\n      pos.classList.remove('blur');\n      this.boardPos[key] = 'open';\n    }\n  }\n  const player = document.getElementById(playerNum);\n  const text = player.childNodes[2];\n  const img = player.querySelector('img');\n  img.src = \"./images/icons8-minus-50.png\";\n  text.nodeValue += ' equity: ';\n};\nBoard.prototype._removePlayers = function (playerNum) {\n  for (let key in this.boardPos) {\n    if (key[1] === playerNum[1]) {\n      const pos = document.querySelector(`.${key}`);\n      pos.classList.add('blur');\n      if (this.boardPos[key] !== 'open') this.removeFromBoard(key);\n      this.boardPos[key] = '';\n      this._createNextBorder();\n    }\n  }\n  const player = document.getElementById(playerNum);\n  const text = player.childNodes[2];\n  const img = player.querySelector('img');\n  img.src = \"./images/icons8-plus-button-50.png\";\n  text.nodeValue = `P${playerNum[1]}`;\n};\nBoard.prototype.changeSrcToId = function (src) {\n  let val;\n  let word;\n  let suit;\n  if (src.includes('spades')) {\n    suit = \"s\";\n    word = src.slice(-16);\n  } else if (src.includes('diamonds')) {\n    suit = \"d\";\n    word = src.slice(-18);\n  } else if (src.includes('hearts')) {\n    suit = \"h\";\n    word = src.slice(-16);\n  } else if (src.includes('clubs')) {\n    suit = \"c\";\n    word = src.slice(-15);\n  }\n  if (word) {\n    if (word.includes('2')) {\n      val = \"2\";\n    } else if (word.includes('3')) {\n      val = \"3\";\n    } else if (word.includes('4')) {\n      val = \"4\";\n    } else if (word.includes('5')) {\n      val = \"5\";\n    } else if (word.includes('6')) {\n      val = \"6\";\n    } else if (word.includes('7')) {\n      val = \"7\";\n    } else if (word.includes('8')) {\n      val = \"8\";\n    } else if (word.includes('9')) {\n      val = \"9\";\n    } else if (word.includes('10')) {\n      val = \"10\";\n    } else if (word.includes('J')) {\n      val = \"J\";\n    } else if (word.includes('Q')) {\n      val = \"Q\";\n    } else if (word.includes('K')) {\n      val = \"K\";\n    } else if (word.includes('A')) {\n      val = \"A\";\n    }\n  } else {\n    return false;\n  }\n  return `${val}${suit}`;\n};\nBoard.prototype.changeIdToSrc = function (id) {\n  let v;\n  let s;\n  if (id.length == 2) {\n    v = id[0];\n    s = id[1];\n  } else {\n    v = 10;\n    s = id[2];\n  }\n  let suit;\n  if (s == \"c\") {\n    suit = \"clubs\";\n  } else if (s == \"d\") {\n    suit = \"diamonds\";\n  } else if (s == \"s\") {\n    suit = \"spades\";\n  } else if (s == \"h\") {\n    suit = \"hearts\";\n  }\n  return `./images/${v}_of_${suit}.png`;\n};\nBoard.prototype.highlightWinner = function (winner) {\n  this.winner = true;\n  const players = Object.keys(winner);\n  let hand = [];\n  for (let i = 1; i < 7; i++) {\n    const player = `p${i}`;\n    if (players.includes(player)) {\n      const handVal = winner[player][0];\n      const handString = KEY[handVal];\n      hand = hand.concat(winner[player][1].filter(card => !hand.includes(card)));\n      const p = document.getElementById(player);\n      const text = p.childNodes[2];\n      text.nodeValue = `WINNER: ${handString}`;\n    } else if (this.deck[player].active) {\n      const p = document.getElementById(player);\n      const text = p.childNodes[2];\n      text.nodeValue = `${player} equity: 0%`;\n    }\n  }\n  const allImages = document.querySelectorAll('img');\n  allImages.forEach(img => {\n    const id = this.changeSrcToId(img.src);\n    if (hand.indexOf(id) !== -1) {\n      img.style.border = '4px solid blue';\n    }\n  });\n};\nBoard.prototype.createWaitingMessages = function () {\n  for (let i = 1; i < 7; i++) {\n    if (this.deck[`p${i}`].active) {\n      const player = document.getElementById(`p${i}`);\n      const text = player.childNodes[2];\n      text.nodeValue = \"Waiting on unfilled hands\";\n    }\n  }\n};\nBoard.prototype.displayEquities = function (board) {\n  //[{p1: [wins, hand], p2: [wins, hand]}, totalOutcomes]\n  const players = this.deck.handtype.equities(board);\n  if (this.onBoard.length === 4) {\n    for (const p in players[0]) {\n      const player = document.getElementById(p);\n      console.log(player, p);\n      const text = player.childNodes[2];\n      text.nodeValue = `${p} equity: ${(players[0][p][0] / players[1]).toFixed(4) * 100}%`;\n    }\n  }\n  // console.log(\"players\", players)\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/board.js\n");

/***/ }),

/***/ "./src/scripts/deck.js":
/*!*****************************!*\
  !*** ./src/scripts/deck.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Deck: function() { return /* binding */ Deck; }\n/* harmony export */ });\n/* harmony import */ var _board_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./board.js */ \"./src/scripts/board.js\");\n/* harmony import */ var _handType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handType.js */ \"./src/scripts/handType.js\");\n\n\nfunction Deck(p1, p2, p3, p4, p5, p6) {\n  this.cardDeck = {\n    '2c': 'deck',\n    '3c': 'deck',\n    '4c': 'deck',\n    '5c': 'deck',\n    '6c': 'deck',\n    '7c': 'deck',\n    '8c': 'deck',\n    '9c': 'deck',\n    '10c': 'deck',\n    'Jc': 'deck',\n    'Qc': 'deck',\n    'Kc': 'deck',\n    'Ac': 'deck',\n    '2d': 'deck',\n    '3d': 'deck',\n    '4d': 'deck',\n    '5d': 'deck',\n    '6d': 'deck',\n    '7d': 'deck',\n    '8d': 'deck',\n    '9d': 'deck',\n    '10d': 'deck',\n    'Jd': 'deck',\n    'Qd': 'deck',\n    'Kd': 'deck',\n    'Ad': 'deck',\n    '2s': 'deck',\n    '3s': 'deck',\n    '4s': 'deck',\n    '5s': 'deck',\n    '6s': 'deck',\n    '7s': 'deck',\n    '8s': 'deck',\n    '9s': 'deck',\n    '10s': 'deck',\n    'Js': 'deck',\n    'Qs': 'deck',\n    'Ks': 'deck',\n    'As': 'deck',\n    '2h': 'deck',\n    '3h': 'deck',\n    '4h': 'deck',\n    '5h': 'deck',\n    '6h': 'deck',\n    '7h': 'deck',\n    '8h': 'deck',\n    '9h': 'deck',\n    '10h': 'deck',\n    'Jh': 'deck',\n    'Qh': 'deck',\n    'Kh': 'deck',\n    'Ah': 'deck'\n  };\n  this.board = new _board_js__WEBPACK_IMPORTED_MODULE_0__.Board(this);\n  this.p1 = p1;\n  this.p2 = p2;\n  this.p3 = p3;\n  this.p4 = p4;\n  this.p5 = p5;\n  this.p6 = p6;\n  this.addClickCards();\n  this.handtype = new _handType_js__WEBPACK_IMPORTED_MODULE_1__.Handtype(this.p1, this.p2, this.p3, this.p4, this.p5, this.p6, this);\n}\nDeck.prototype.lastPlayerAdded = function (lastPlayer) {\n  this.lastPlayer = lastPlayer;\n};\nDeck.prototype.addClickCards = function () {\n  for (let key in this.cardDeck) {\n    const card = document.getElementById(key);\n    card.addEventListener(\"click\", () => {\n      if (this.cardDeck[card.id] === \"deck\") {\n        const player = this.board._getHighlightedPos();\n        if (player !== -1) {\n          this[player].addToHand(card.id);\n          this.lastPlayer = player;\n          this.board.addToBoard(card.id, Number(player[1]));\n        } else {\n          this.board.addToBoard(card.id, -1);\n        }\n      } else {\n        console.log(\"not in deck\");\n      }\n    });\n  }\n};\nDeck.prototype.inDeck = function () {\n  const deck = [];\n  for (const key in this.cardDeck) {\n    if (this.cardDeck[key] === 'deck') deck.push(key);\n  }\n  return deck;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QyxLQUFLLE1BQU0sRUFBRWMsSUFBSSxDQUFDQyxJQUFJLENBQUNmLEdBQUcsQ0FBQztFQUNyRDtFQUNBLE9BQU9jLElBQUk7QUFDZixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9rZXJwcm9qZWN0anMvLi9zcmMvc2NyaXB0cy9kZWNrLmpzP2IwNTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQm9hcmQgfSBmcm9tIFwiLi9ib2FyZC5qc1wiXG5pbXBvcnQgeyBIYW5kdHlwZSB9IGZyb20gXCIuL2hhbmRUeXBlLmpzXCJcblxuZnVuY3Rpb24gRGVjayAocDEsIHAyLCBwMywgcDQsIHA1LCBwNikge1xuICAgIHRoaXMuY2FyZERlY2sgPSB7XG4gICAgICAgICcyYyc6ICdkZWNrJywgJzNjJzogJ2RlY2snLCAnNGMnOiAnZGVjaycsICc1Yyc6ICdkZWNrJywgJzZjJzogJ2RlY2snLCAnN2MnOiAnZGVjaycsICc4Yyc6ICdkZWNrJywgJzljJzogJ2RlY2snLCAnMTBjJzogJ2RlY2snLCAnSmMnOiAnZGVjaycsICdRYyc6ICdkZWNrJywgJ0tjJzogJ2RlY2snLCAnQWMnOiAnZGVjaycsXG4gICAgICAgICcyZCc6ICdkZWNrJywgJzNkJzogJ2RlY2snLCAnNGQnOiAnZGVjaycsICc1ZCc6ICdkZWNrJywgJzZkJzogJ2RlY2snLCAnN2QnOiAnZGVjaycsICc4ZCc6ICdkZWNrJywgJzlkJzogJ2RlY2snLCAnMTBkJzogJ2RlY2snLCAnSmQnOiAnZGVjaycsICdRZCc6ICdkZWNrJywgJ0tkJzogJ2RlY2snLCAnQWQnOiAnZGVjaycsXG4gICAgICAgICcycyc6ICdkZWNrJywgJzNzJzogJ2RlY2snLCAnNHMnOiAnZGVjaycsICc1cyc6ICdkZWNrJywgJzZzJzogJ2RlY2snLCAnN3MnOiAnZGVjaycsICc4cyc6ICdkZWNrJywgJzlzJzogJ2RlY2snLCAnMTBzJzogJ2RlY2snLCAnSnMnOiAnZGVjaycsICdRcyc6ICdkZWNrJywgJ0tzJzogJ2RlY2snLCAnQXMnOiAnZGVjaycsXG4gICAgICAgICcyaCc6ICdkZWNrJywgJzNoJzogJ2RlY2snLCAnNGgnOiAnZGVjaycsICc1aCc6ICdkZWNrJywgJzZoJzogJ2RlY2snLCAnN2gnOiAnZGVjaycsICc4aCc6ICdkZWNrJywgJzloJzogJ2RlY2snLCAnMTBoJzogJ2RlY2snLCAnSmgnOiAnZGVjaycsICdRaCc6ICdkZWNrJywgJ0toJzogJ2RlY2snLCAnQWgnOiAnZGVjaydcbiAgICB9XG4gICAgdGhpcy5ib2FyZCA9IG5ldyBCb2FyZCh0aGlzKVxuICAgIHRoaXMucDEgPSBwMVxuICAgIHRoaXMucDIgPSBwMlxuICAgIHRoaXMucDMgPSBwM1xuICAgIHRoaXMucDQgPSBwNFxuICAgIHRoaXMucDUgPSBwNVxuICAgIHRoaXMucDYgPSBwNlxuXG4gICAgdGhpcy5hZGRDbGlja0NhcmRzKClcbiAgICB0aGlzLmhhbmR0eXBlID0gbmV3IEhhbmR0eXBlKHRoaXMucDEsIHRoaXMucDIsIHRoaXMucDMsIHRoaXMucDQsIHRoaXMucDUsIHRoaXMucDYsIHRoaXMpXG59XG5cbkRlY2sucHJvdG90eXBlLmxhc3RQbGF5ZXJBZGRlZCA9IGZ1bmN0aW9uIChsYXN0UGxheWVyKSB7XG4gICAgdGhpcy5sYXN0UGxheWVyID0gbGFzdFBsYXllclxufVxuXG5cbkRlY2sucHJvdG90eXBlLmFkZENsaWNrQ2FyZHMgPSBmdW5jdGlvbiAoKSB7XG4gICAgZm9yIChsZXQga2V5IGluIHRoaXMuY2FyZERlY2spIHtcbiAgICAgICAgY29uc3QgY2FyZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGtleSk7XG4gICAgICAgIGNhcmQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNhcmREZWNrW2NhcmQuaWRdID09PSBcImRlY2tcIikge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBsYXllciA9IHRoaXMuYm9hcmQuX2dldEhpZ2hsaWdodGVkUG9zKClcbiAgICAgICAgICAgICAgICBpZiAocGxheWVyICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzW3BsYXllcl0uYWRkVG9IYW5kKGNhcmQuaWQpXG4gICAgICAgICAgICAgICAgICAgIHRoaXMubGFzdFBsYXllciA9IHBsYXllclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmJvYXJkLmFkZFRvQm9hcmQoY2FyZC5pZCwgTnVtYmVyKHBsYXllclsxXSkpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ib2FyZC5hZGRUb0JvYXJkKGNhcmQuaWQsIC0xKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJub3QgaW4gZGVja1wiKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH1cbn1cblxuRGVjay5wcm90b3R5cGUuaW5EZWNrID0gZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IGRlY2sgPSBbXVxuICAgIGZvciAoY29uc3Qga2V5IGluIHRoaXMuY2FyZERlY2spIHtcbiAgICAgICAgaWYgKHRoaXMuY2FyZERlY2tba2V5XSA9PT0gJ2RlY2snKSBkZWNrLnB1c2goa2V5KVxuICAgIH1cbiAgICByZXR1cm4gZGVja1xufVxuXG5leHBvcnQgeyBEZWNrIH1cbiJdLCJuYW1lcyI6WyJCb2FyZCIsIkhhbmR0eXBlIiwiRGVjayIsInAxIiwicDIiLCJwMyIsInA0IiwicDUiLCJwNiIsImNhcmREZWNrIiwiYm9hcmQiLCJhZGRDbGlja0NhcmRzIiwiaGFuZHR5cGUiLCJwcm90b3R5cGUiLCJsYXN0UGxheWVyQWRkZWQiLCJsYXN0UGxheWVyIiwia2V5IiwiY2FyZCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGRFdmVudExpc3RlbmVyIiwiaWQiLCJwbGF5ZXIiLCJfZ2V0SGlnaGxpZ2h0ZWRQb3MiLCJhZGRUb0hhbmQiLCJhZGRUb0JvYXJkIiwiTnVtYmVyIiwiY29uc29sZSIsImxvZyIsImluRGVjayIsImRlY2siLCJwdXNoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/deck.js\n");

/***/ }),

/***/ "./src/scripts/game.js":
/*!*****************************!*\
  !*** ./src/scripts/game.js ***!
  \*****************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Game: function() { return /* binding */ Game; }\n/* harmony export */ });\n/* harmony import */ var _deck_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./deck.js */ \"./src/scripts/deck.js\");\n/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./player.js */ \"./src/scripts/player.js\");\n\n\nfunction Game() {\n  this.p1 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player(true, 'p1');\n  this.p2 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player(true, 'p2');\n  this.p3 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player(false, 'p3');\n  this.p4 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player(false, 'p4');\n  this.p5 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player(false, 'p5');\n  this.p6 = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player(false, 'p6');\n  this.deck = new _deck_js__WEBPACK_IMPORTED_MODULE_0__.Deck(this.p1, this.p2, this.p3, this.p4, this.p5, this.p6);\n  this.addDeckToPlayer(this.deck);\n}\nGame.prototype.addDeckToPlayer = function (deck) {\n  this.p1.setDeck(deck);\n  this.p2.setDeck(deck);\n  this.p3.setDeck(deck);\n  this.p4.setDeck(deck);\n  this.p5.setDeck(deck);\n  this.p6.setDeck(deck);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9nYW1lLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnQztBQUNJO0FBRXBDLFNBQVNFLElBQUlBLENBQUEsRUFBRztFQUNaLElBQUksQ0FBQ0MsRUFBRSxHQUFHLElBQUlGLDhDQUFNLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQztFQUNoQyxJQUFJLENBQUNHLEVBQUUsR0FBRyxJQUFJSCw4Q0FBTSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7RUFDaEMsSUFBSSxDQUFDSSxFQUFFLEdBQUcsSUFBSUosOENBQU0sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDO0VBQ2pDLElBQUksQ0FBQ0ssRUFBRSxHQUFHLElBQUlMLDhDQUFNLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQztFQUNqQyxJQUFJLENBQUNNLEVBQUUsR0FBRyxJQUFJTiw4Q0FBTSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUM7RUFDakMsSUFBSSxDQUFDTyxFQUFFLEdBQUcsSUFBSVAsOENBQU0sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDO0VBQ2pDLElBQUksQ0FBQ1EsSUFBSSxHQUFHLElBQUlULDBDQUFJLENBQUMsSUFBSSxDQUFDRyxFQUFFLEVBQUUsSUFBSSxDQUFDQyxFQUFFLEVBQUUsSUFBSSxDQUFDQyxFQUFFLEVBQUUsSUFBSSxDQUFDQyxFQUFFLEVBQUUsSUFBSSxDQUFDQyxFQUFFLEVBQUUsSUFBSSxDQUFDQyxFQUFFLENBQUM7RUFDMUUsSUFBSSxDQUFDRSxlQUFlLENBQUMsSUFBSSxDQUFDRCxJQUFJLENBQUM7QUFDbkM7QUFFQVAsSUFBSSxDQUFDUyxTQUFTLENBQUNELGVBQWUsR0FBRyxVQUFVRCxJQUFJLEVBQUU7RUFDN0MsSUFBSSxDQUFDTixFQUFFLENBQUNTLE9BQU8sQ0FBQ0gsSUFBSSxDQUFDO0VBQ3JCLElBQUksQ0FBQ0wsRUFBRSxDQUFDUSxPQUFPLENBQUNILElBQUksQ0FBQztFQUNyQixJQUFJLENBQUNKLEVBQUUsQ0FBQ08sT0FBTyxDQUFDSCxJQUFJLENBQUM7RUFDckIsSUFBSSxDQUFDSCxFQUFFLENBQUNNLE9BQU8sQ0FBQ0gsSUFBSSxDQUFDO0VBQ3JCLElBQUksQ0FBQ0YsRUFBRSxDQUFDSyxPQUFPLENBQUNILElBQUksQ0FBQztFQUNyQixJQUFJLENBQUNELEVBQUUsQ0FBQ0ksT0FBTyxDQUFDSCxJQUFJLENBQUM7QUFDekIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bva2VycHJvamVjdGpzLy4vc3JjL3NjcmlwdHMvZ2FtZS5qcz9jZGMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERlY2sgfSBmcm9tIFwiLi9kZWNrLmpzXCJcbmltcG9ydCB7IFBsYXllciB9IGZyb20gXCIuL3BsYXllci5qc1wiXG5cbmZ1bmN0aW9uIEdhbWUoKSB7XG4gICAgdGhpcy5wMSA9IG5ldyBQbGF5ZXIodHJ1ZSwgJ3AxJylcbiAgICB0aGlzLnAyID0gbmV3IFBsYXllcih0cnVlLCAncDInKVxuICAgIHRoaXMucDMgPSBuZXcgUGxheWVyKGZhbHNlLCAncDMnKVxuICAgIHRoaXMucDQgPSBuZXcgUGxheWVyKGZhbHNlLCAncDQnKVxuICAgIHRoaXMucDUgPSBuZXcgUGxheWVyKGZhbHNlLCAncDUnKVxuICAgIHRoaXMucDYgPSBuZXcgUGxheWVyKGZhbHNlLCAncDYnKVxuICAgIHRoaXMuZGVjayA9IG5ldyBEZWNrKHRoaXMucDEsIHRoaXMucDIsIHRoaXMucDMsIHRoaXMucDQsIHRoaXMucDUsIHRoaXMucDYpXG4gICAgdGhpcy5hZGREZWNrVG9QbGF5ZXIodGhpcy5kZWNrKVxufVxuXG5HYW1lLnByb3RvdHlwZS5hZGREZWNrVG9QbGF5ZXIgPSBmdW5jdGlvbiAoZGVjaykge1xuICAgIHRoaXMucDEuc2V0RGVjayhkZWNrKVxuICAgIHRoaXMucDIuc2V0RGVjayhkZWNrKVxuICAgIHRoaXMucDMuc2V0RGVjayhkZWNrKVxuICAgIHRoaXMucDQuc2V0RGVjayhkZWNrKVxuICAgIHRoaXMucDUuc2V0RGVjayhkZWNrKVxuICAgIHRoaXMucDYuc2V0RGVjayhkZWNrKVxufVxuXG5leHBvcnQgeyBHYW1lIH1cbiJdLCJuYW1lcyI6WyJEZWNrIiwiUGxheWVyIiwiR2FtZSIsInAxIiwicDIiLCJwMyIsInA0IiwicDUiLCJwNiIsImRlY2siLCJhZGREZWNrVG9QbGF5ZXIiLCJwcm90b3R5cGUiLCJzZXREZWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/game.js\n");

/***/ }),

/***/ "./src/scripts/handType.js":
/*!*********************************!*\
  !*** ./src/scripts/handType.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Handtype: function() { return /* binding */ Handtype; }\n/* harmony export */ });\nconst KEY = {\n  1: \"No Pair\",\n  2: \"One Pair\",\n  3: \"Two Pair\",\n  4: \"Three of a Kind\",\n  5: \"Straight\",\n  6: \"Flush\",\n  7: \"Full House!\",\n  8: \"Four of a Kind!!\",\n  9: \"Straight Flush!!!\",\n  10: \"ROYAL FLUSH!!!\"\n};\nconst NUM_VAL = {\n  'A': 14,\n  'K': 13,\n  'Q': 12,\n  'J': 11,\n  '10': 10,\n  '9': 9,\n  '8': 8,\n  '7': 7,\n  '6': 6,\n  '5': 5,\n  '4': 4,\n  '3': 3,\n  '2': 2\n};\nfunction Handtype(p1, p2, p3, p4, p5, p, deck) {\n  this.p1 = p1;\n  this.p2 = p2;\n  this.p3 = p3;\n  this.p4 = p4;\n  this.p5 = p5;\n  this.p6 = p6;\n  this.deck = deck;\n}\nHandtype.prototype.sortHand = function (hand) {\n  hand.sort((cardA, cardB) => {\n    const valueA = NUM_VAL[cardA.slice(0, -1)];\n    const valueB = NUM_VAL[cardB.slice(0, -1)];\n    return valueB - valueA; // Sort in descending order based on card values\n  });\n\n  const cards = {};\n  const newHand = [];\n  hand.forEach(item => {\n    cards[item[0]] = (cards[item[0]] || 0) + 1;\n  });\n  hand.forEach(item => {\n    if (cards[item[0]] >= 3) {\n      newHand.push(item);\n    }\n  });\n  hand.forEach(item => {\n    if (cards[item[0]] === 2) {\n      newHand.push(item);\n    }\n  });\n  hand.forEach(item => {\n    if (!newHand.includes(item)) newHand.push(item);\n  });\n  return newHand;\n};\nHandtype.prototype.isFlush = function (fiveCards) {\n  const suit = fiveCards[0].slice(-1);\n  for (let i = 0; i < 5; i++) {\n    if (fiveCards[i].slice(-1) !== suit) {\n      return false;\n    }\n  }\n  const sortedHand = this.sortHand(fiveCards);\n  return [true, sortedHand];\n};\nHandtype.prototype.isStraight = function (fiveCards) {\n  let sortedRanks = [];\n  const sortedHand = this.sortHand(fiveCards);\n  for (let i = 0; i < 5; i++) {\n    sortedRanks.push(sortedHand[i][0]);\n  }\n  if (JSON.stringify(sortedRanks) == JSON.stringify([\"A\", \"5\", \"4\", \"3\", \"2\"])) {\n    return [true, sortedHand];\n  }\n  if (JSON.stringify(sortedRanks) == JSON.stringify([\"6\", \"5\", \"4\", \"3\", \"2\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"7\", \"6\", \"5\", \"4\", \"3\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"8\", \"7\", \"6\", \"5\", \"4\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"9\", \"8\", \"7\", \"6\", \"5\"]) ||\n  // 1 is equivalent to 10\n  JSON.stringify(sortedRanks) == JSON.stringify([\"1\", \"9\", \"8\", \"7\", \"6\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"J\", \"1\", \"9\", \"8\", \"7\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"Q\", \"J\", \"1\", \"9\", \"8\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"K\", \"Q\", \"J\", \"1\", \"9\"]) || JSON.stringify(sortedRanks) == JSON.stringify([\"A\", \"K\", \"Q\", \"J\", \"1\"])) {\n    return [true, sortedHand];\n  } else {\n    return false;\n  }\n};\nHandtype.prototype.isFourOfAKind = function (fiveCards) {\n  let count = 0;\n  const sortedHand = this.sortHand(fiveCards);\n  let pair = sortedHand[0][0];\n  if (sortedHand[0][0] !== sortedHand[1][0]) {\n    pair = sortedHand[1][0];\n  }\n  for (let i = 0; i < sortedHand.length; i++) {\n    if (sortedHand[i][0] == pair) {\n      count += 1;\n    }\n  }\n  if (count === 4) {\n    return [true, sortedHand];\n  }\n  return false;\n};\nHandtype.prototype.isFullHouse = function (fiveCards) {\n  const sortedHand = this.sortHand(fiveCards);\n  if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[1][0] === sortedHand[2][0] && sortedHand[3][0] === sortedHand[4][0]) {\n    return [true, sortedHand];\n  }\n  if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[2][0] === sortedHand[3][0] && sortedHand[3][0] === sortedHand[4][0]) {\n    return [true, sortedHand];\n  }\n  return false;\n};\nHandtype.prototype.isThreeOfAKind = function (fiveCards) {\n  const sortedHand = this.sortHand(fiveCards);\n  if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[1][0] == sortedHand[2][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[1][0] === sortedHand[2][0] && sortedHand[2][0] == sortedHand[3][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[2][0] === sortedHand[3][0] && sortedHand[3][0] == sortedHand[4][0]) {\n    return [true, sortedHand];\n  } else {\n    return false;\n  }\n};\nHandtype.prototype.isTwoPair = function (fiveCards) {\n  const sortedHand = this.sortHand(fiveCards);\n  if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[2][0] === sortedHand[3][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[3][0] === sortedHand[4][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[1][0] === sortedHand[2][0] && sortedHand[3][0] === sortedHand[4][0]) {\n    return [true, sortedHand];\n  } else {\n    return false;\n  }\n};\nHandtype.prototype.isOnePair = function (fiveCards) {\n  const sortedHand = this.sortHand(fiveCards);\n  if (sortedHand[0][0] === sortedHand[1][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[1][0] === sortedHand[2][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[2][0] === sortedHand[3][0]) {\n    return [true, sortedHand];\n  } else if (sortedHand[3][0] === sortedHand[4][0]) {\n    return [true, sortedHand];\n  } else {\n    return false;\n  }\n};\nHandtype.prototype.isNoPair = function (fiveCards) {\n  const sortedHand = this.sortHand(fiveCards);\n  if (sortedHand[0][0] === sortedHand[1][0]) {\n    return false;\n  } else if (sortedHand[1][0] === sortedHand[2][0]) {\n    return false;\n  } else if (sortedHand[2][0] === sortedHand[3][0]) {\n    return false;\n  } else if (sortedHand[3][0] === sortedHand[4][0]) {\n    return false;\n  } else {\n    return [true, sortedHand];\n  }\n};\nHandtype.prototype.broadway = function (fiveCards) {\n  fiveCards.sort();\n  if (fiveCards[0].slice(0, 2) !== '10') return false;\n  if (fiveCards[1].slice(0, 1) !== 'A') return false;\n  if (fiveCards[2].slice(0, 1) !== 'J') return false;\n  if (fiveCards[3].slice(0, 1) !== 'K') return false;\n  if (fiveCards[4].slice(0, 1) !== 'Q') return false;\n  return true;\n};\nHandtype.prototype.getPokerHand = function (fiveCards) {\n  const flush = this.isFlush(fiveCards);\n  const straight = this.isStraight(fiveCards);\n  if (flush[0] && straight[0]) {\n    if (this.broadway(fiveCards)) {\n      return [10, this.sortHand(fiveCards)];\n    } else {\n      return [9, this.sortHand(fiveCards)];\n    }\n  }\n  const isFourOfAKind = this.isFourOfAKind(fiveCards);\n  if (isFourOfAKind[0]) {\n    return [8, isFourOfAKind[1]];\n  }\n  const isFullHouse = this.isFullHouse(fiveCards);\n  if (isFullHouse[0]) {\n    return [7, isFullHouse[1]];\n  }\n  const isFlush = this.isFlush(fiveCards);\n  if (isFlush[0]) {\n    return [6, isFlush[1]];\n  }\n  const isStraight = this.isStraight(fiveCards);\n  if (isStraight[0]) {\n    return [5, isStraight[1]];\n  }\n  const isThreeOfAKind = this.isThreeOfAKind(fiveCards);\n  if (isThreeOfAKind[0]) {\n    return [4, isThreeOfAKind[1]];\n  }\n  const isTwoPair = this.isTwoPair(fiveCards);\n  if (isTwoPair[0]) {\n    return [3, isTwoPair[1]];\n  }\n  const isOnePair = this.isOnePair(fiveCards);\n  if (isOnePair[0]) {\n    return [2, isOnePair[1]];\n  }\n  const isNoPair = this.isNoPair(fiveCards);\n  if (isNoPair[0]) {\n    return [1, isNoPair[1]];\n  }\n};\nHandtype.prototype.bestHand = function (hand, board) {\n  // console.log(\"bestHand board\", board)\n  const twoCardCombos = [];\n  const threeCardCombos = [];\n  for (let i = 0; i < hand.length - 1; i++) {\n    for (let j = i + 1; j < hand.length; j++) {\n      twoCardCombos.push([hand[i], hand[j]]);\n    }\n  }\n  for (let i = 0; i < board.length - 2; i++) {\n    for (let j = i + 1; j < board.length - 1; j++) {\n      for (let k = j + 1; k < board.length; k++) {\n        const combination = [board[i], board[j], board[k]];\n        threeCardCombos.push(combination);\n      }\n    }\n  }\n  let top = [0];\n  for (let i = 0; i < threeCardCombos.length; i++) {\n    for (let j = 0; j < twoCardCombos.length; j++) {\n      const newRank = this.getPokerHand([twoCardCombos[j][0], twoCardCombos[j][1], threeCardCombos[i][0], threeCardCombos[i][1], threeCardCombos[i][2]]);\n      if (newRank[0] > top[0]) {\n        top = newRank;\n      } else if (newRank[0] === top[0]) {\n        const bestHand = this.comparingKickers(newRank[1], top[1]);\n        if (bestHand !== 0) {\n          top = [newRank[0], bestHand[1]];\n        }\n      }\n    }\n  }\n  return top;\n};\nHandtype.prototype.comparingKickers = function (hand1, hand2) {\n  // FIX TWO PAIR,\n  for (let i = 0; i < 5; i++) {\n    if (NUM_VAL[hand1[i][0]] > NUM_VAL[hand2[i][0]]) {\n      return [1, hand1];\n    } else if (NUM_VAL[hand1[i][0]] < NUM_VAL[hand2[i][0]]) {\n      return [2, hand2];\n    }\n  }\n  return 0;\n};\nHandtype.prototype.winner = function (bestHandsHash) {\n  // assumes best hand on board is known\n  if (Object.keys(bestHandsHash).length === 0) return false;\n  let winner = {\n    'empty': [0, []]\n  };\n  for (let player in bestHandsHash) {\n    const currWinner = winner[Object.keys(winner)[0]];\n    if (bestHandsHash[player][0] > currWinner[0]) {\n      winner = {};\n      winner[player] = bestHandsHash[player];\n    } else if (bestHandsHash[player][0] === currWinner[0]) {\n      const check = this.comparingKickers(bestHandsHash[player][1], currWinner[1]);\n      if (check === 0) {\n        winner[player] = [bestHandsHash[player][0], bestHandsHash[player][1]];\n      } else {\n        if (check[0] === 1) {\n          winner = {};\n          winner[player] = bestHandsHash[player];\n        }\n      }\n    }\n  }\n  return winner;\n};\nHandtype.prototype.activeHands = function () {\n  const active = {};\n  for (let i = 1; i < 6; i++) {\n    if (this[`p${i}`].active) {\n      active[`p${i}`] = [0, [this[`p${i}`].playerHand]];\n    }\n  }\n  return active;\n};\nHandtype.prototype.equities = function (board) {\n  // p1: [0, [hand]]\n  const hands = this.activeHands();\n  const deck = this.deck.inDeck();\n  let totalOutcomes = 0;\n  let chops = 0;\n  if (board.length === 0) {\n    // for (let i = 0; i < deck.length - 4; i++) {\n    //     for (let j = i + 1; j < deck.length - 3; j++) {\n    //         for (let k = j + 1; k < deck.length - 2; k++) {\n    //             for (let l = k + 1; l < deck.length - 1; l++) {\n    //                 for (let m = l + 1; m < deck.length; m++) {\n\n    //                     totalOutcomes++\n    //                 }\n    //             }\n    //         }\n    //     }\n    // }\n    console.log(\"no cards on board\");\n  } else if (board.length === 1) {\n    console.log(\"one cards on board\");\n  } else if (board.length === 2) {\n    console.log(\"two cards on board\");\n  } else if (board.length === 3) {\n    console.log(\"three cards on board\");\n    return this.equitiesTwoMoreCards(board, hands, deck, totalOutcomes, chops, 0);\n  } else if (board.length === 4) {\n    console.log(\"four cards on board\");\n    return this.equitiesOneMoreCard(board, hands, deck, totalOutcomes, chops, 0);\n  }\n};\nHandtype.prototype.equitiesOneMoreCard = function (board, hands, deck, totalOutcomes, chops, initial) {\n  // console.log(\"1\", totalOutcomes)\n  // totalOutcomes++\n  // h++\n  for (let m = initial; m < deck.length; m++) {\n    // count += 1\n    const bestHands = {};\n    //FIX: Can probably check for active players and pass in as argument\n    for (let i = 1; i < 7; i++) {\n      if (this.deck[`p${i}`].handFull()) {\n        bestHands[`p${i}`] = this.bestHand(this.deck[`p${i}`].playerHand, board.concat(deck[m]));\n      }\n    }\n    const winner = this.winner(bestHands);\n    const players = Object.keys(winner);\n    if (players.length > 1) {\n      chops++;\n    } else {\n      hands[players[0]][0] += 1;\n    }\n    // if (winner) this.highlightWinner(winner)\n    totalOutcomes++;\n  }\n  // console.log(\"2\", totalOutcomes, h)\n  console.log([hands, totalOutcomes]);\n  return [hands, totalOutcomes];\n};\nHandtype.prototype.equitiesTwoMoreCards = function (board, hands, deck, totalOutcomes, chops, initial) {\n  console.log(\"board\", board);\n  console.log(\"hands\", hands);\n  for (let m = initial; m < deck.length - 1; m++) {\n    const res = this.equitiesOneMoreCard(board.concat(deck[m]), hands, deck, totalOutcomes, chops, m + 1);\n    // console.log(\"res\", res)\n    // Object.keys(res[0]).forEach(player => {\n    //     hands[player][0] += res[0][player][0]\n    // })\n  }\n\n  return [hands, totalOutcomes];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/handType.js\n");

/***/ }),

/***/ "./src/scripts/player.js":
/*!*******************************!*\
  !*** ./src/scripts/player.js ***!
  \*******************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Player: function() { return /* binding */ Player; }\n/* harmony export */ });\nfunction Player(active, playerNum) {\n  this.playerHand = [];\n  this.playerNum = playerNum;\n  this.active = active;\n}\nPlayer.prototype.setDeck = function (deck) {\n  this.deck = deck;\n  this.addPlayerButton();\n};\nPlayer.prototype.activate = function () {\n  this.active = !this.active;\n};\nPlayer.prototype.handLength = function () {\n  const length = this.playerHand.length;\n  return length;\n};\nPlayer.prototype.addPlayerButton = function () {\n  const player = document.getElementById(this.playerNum);\n  player.addEventListener(\"click\", () => {\n    if (!this.active) {\n      this.activate();\n      this.deck.board._addPlayers(this.playerNum);\n      this.deck.board._createNewPlayerBorder(this.playerNum);\n    } else {\n      this.activate();\n      this.deck.board._removePlayers(this.playerNum);\n      this.deck.board._createNextBorder();\n    }\n  });\n};\nPlayer.prototype.addToHand = function (card) {\n  this.playerHand.push(card);\n};\nPlayer.prototype.removeFromHand = function (card) {\n  this.playerHand.push(card);\n};\nPlayer.prototype.handFull = function () {\n  return this.playerHand.length === 4;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9wbGF5ZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLFNBQVNBLE1BQU1BLENBQUNDLE1BQU0sRUFBRUMsU0FBUyxFQUFFO0VBQy9CLElBQUksQ0FBQ0MsVUFBVSxHQUFHLEVBQUU7RUFDcEIsSUFBSSxDQUFDRCxTQUFTLEdBQUdBLFNBQVM7RUFDMUIsSUFBSSxDQUFDRCxNQUFNLEdBQUdBLE1BQU07QUFDeEI7QUFFQUQsTUFBTSxDQUFDSSxTQUFTLENBQUNDLE9BQU8sR0FBRyxVQUFVQyxJQUFJLEVBQUU7RUFDdkMsSUFBSSxDQUFDQSxJQUFJLEdBQUdBLElBQUk7RUFDaEIsSUFBSSxDQUFDQyxlQUFlLENBQUMsQ0FBQztBQUMxQixDQUFDO0FBRURQLE1BQU0sQ0FBQ0ksU0FBUyxDQUFDSSxRQUFRLEdBQUcsWUFBWTtFQUNwQyxJQUFJLENBQUNQLE1BQU0sR0FBRyxDQUFDLElBQUksQ0FBQ0EsTUFBTTtBQUM5QixDQUFDO0FBRURELE1BQU0sQ0FBQ0ksU0FBUyxDQUFDSyxVQUFVLEdBQUcsWUFBWTtFQUN0QyxNQUFNQyxNQUFNLEdBQUcsSUFBSSxDQUFDUCxVQUFVLENBQUNPLE1BQU07RUFDckMsT0FBT0EsTUFBTTtBQUNqQixDQUFDO0FBRURWLE1BQU0sQ0FBQ0ksU0FBUyxDQUFDRyxlQUFlLEdBQUcsWUFBWTtFQUMzQyxNQUFNSSxNQUFNLEdBQUdDLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLElBQUksQ0FBQ1gsU0FBUyxDQUFDO0VBQ3REUyxNQUFNLENBQUNHLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxNQUFNO0lBQ25DLElBQUksQ0FBQyxJQUFJLENBQUNiLE1BQU0sRUFBRTtNQUNkLElBQUksQ0FBQ08sUUFBUSxDQUFDLENBQUM7TUFDZixJQUFJLENBQUNGLElBQUksQ0FBQ1MsS0FBSyxDQUFDQyxXQUFXLENBQUMsSUFBSSxDQUFDZCxTQUFTLENBQUM7TUFDM0MsSUFBSSxDQUFDSSxJQUFJLENBQUNTLEtBQUssQ0FBQ0Usc0JBQXNCLENBQUMsSUFBSSxDQUFDZixTQUFTLENBQUM7SUFDMUQsQ0FBQyxNQUFNO01BQ0gsSUFBSSxDQUFDTSxRQUFRLENBQUMsQ0FBQztNQUNmLElBQUksQ0FBQ0YsSUFBSSxDQUFDUyxLQUFLLENBQUNHLGNBQWMsQ0FBQyxJQUFJLENBQUNoQixTQUFTLENBQUM7TUFDOUMsSUFBSSxDQUFDSSxJQUFJLENBQUNTLEtBQUssQ0FBQ0ksaUJBQWlCLENBQUMsQ0FBQztJQUN2QztFQUNKLENBQUMsQ0FBQztBQUNOLENBQUM7QUFFRG5CLE1BQU0sQ0FBQ0ksU0FBUyxDQUFDZ0IsU0FBUyxHQUFHLFVBQVVDLElBQUksRUFBRTtFQUN6QyxJQUFJLENBQUNsQixVQUFVLENBQUNtQixJQUFJLENBQUNELElBQUksQ0FBQztBQUM5QixDQUFDO0FBRURyQixNQUFNLENBQUNJLFNBQVMsQ0FBQ21CLGNBQWMsR0FBRyxVQUFVRixJQUFJLEVBQUU7RUFDOUMsSUFBSSxDQUFDbEIsVUFBVSxDQUFDbUIsSUFBSSxDQUFDRCxJQUFJLENBQUM7QUFDOUIsQ0FBQztBQUVEckIsTUFBTSxDQUFDSSxTQUFTLENBQUNvQixRQUFRLEdBQUcsWUFBWTtFQUNwQyxPQUFPLElBQUksQ0FBQ3JCLFVBQVUsQ0FBQ08sTUFBTSxLQUFLLENBQUM7QUFDdkMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3Bva2VycHJvamVjdGpzLy4vc3JjL3NjcmlwdHMvcGxheWVyLmpzPzY0NzEiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gUGxheWVyKGFjdGl2ZSwgcGxheWVyTnVtKSB7XG4gICAgdGhpcy5wbGF5ZXJIYW5kID0gW11cbiAgICB0aGlzLnBsYXllck51bSA9IHBsYXllck51bVxuICAgIHRoaXMuYWN0aXZlID0gYWN0aXZlXG59XG5cblBsYXllci5wcm90b3R5cGUuc2V0RGVjayA9IGZ1bmN0aW9uIChkZWNrKSB7XG4gICAgdGhpcy5kZWNrID0gZGVja1xuICAgIHRoaXMuYWRkUGxheWVyQnV0dG9uKClcbn1cblxuUGxheWVyLnByb3RvdHlwZS5hY3RpdmF0ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmFjdGl2ZSA9ICF0aGlzLmFjdGl2ZVxufVxuXG5QbGF5ZXIucHJvdG90eXBlLmhhbmRMZW5ndGggPSBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgbGVuZ3RoID0gdGhpcy5wbGF5ZXJIYW5kLmxlbmd0aFxuICAgIHJldHVybiBsZW5ndGhcbn1cblxuUGxheWVyLnByb3RvdHlwZS5hZGRQbGF5ZXJCdXR0b24gPSBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgcGxheWVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5wbGF5ZXJOdW0pXG4gICAgcGxheWVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGlmICghdGhpcy5hY3RpdmUpIHtcbiAgICAgICAgICAgIHRoaXMuYWN0aXZhdGUoKVxuICAgICAgICAgICAgdGhpcy5kZWNrLmJvYXJkLl9hZGRQbGF5ZXJzKHRoaXMucGxheWVyTnVtKVxuICAgICAgICAgICAgdGhpcy5kZWNrLmJvYXJkLl9jcmVhdGVOZXdQbGF5ZXJCb3JkZXIodGhpcy5wbGF5ZXJOdW0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmFjdGl2YXRlKClcbiAgICAgICAgICAgIHRoaXMuZGVjay5ib2FyZC5fcmVtb3ZlUGxheWVycyh0aGlzLnBsYXllck51bSlcbiAgICAgICAgICAgIHRoaXMuZGVjay5ib2FyZC5fY3JlYXRlTmV4dEJvcmRlcigpXG4gICAgICAgIH1cbiAgICB9KVxufVxuXG5QbGF5ZXIucHJvdG90eXBlLmFkZFRvSGFuZCA9IGZ1bmN0aW9uIChjYXJkKSB7XG4gICAgdGhpcy5wbGF5ZXJIYW5kLnB1c2goY2FyZClcbn1cblxuUGxheWVyLnByb3RvdHlwZS5yZW1vdmVGcm9tSGFuZCA9IGZ1bmN0aW9uIChjYXJkKSB7XG4gICAgdGhpcy5wbGF5ZXJIYW5kLnB1c2goY2FyZClcbn1cblxuUGxheWVyLnByb3RvdHlwZS5oYW5kRnVsbCA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5wbGF5ZXJIYW5kLmxlbmd0aCA9PT0gNFxufVxuXG5leHBvcnQgeyBQbGF5ZXIgfVxuIl0sIm5hbWVzIjpbIlBsYXllciIsImFjdGl2ZSIsInBsYXllck51bSIsInBsYXllckhhbmQiLCJwcm90b3R5cGUiLCJzZXREZWNrIiwiZGVjayIsImFkZFBsYXllckJ1dHRvbiIsImFjdGl2YXRlIiwiaGFuZExlbmd0aCIsImxlbmd0aCIsInBsYXllciIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJhZGRFdmVudExpc3RlbmVyIiwiYm9hcmQiLCJfYWRkUGxheWVycyIsIl9jcmVhdGVOZXdQbGF5ZXJCb3JkZXIiLCJfcmVtb3ZlUGxheWVycyIsIl9jcmVhdGVOZXh0Qm9yZGVyIiwiYWRkVG9IYW5kIiwiY2FyZCIsInB1c2giLCJyZW1vdmVGcm9tSGFuZCIsImhhbmRGdWxsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/scripts/player.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb2tlcnByb2plY3Rqcy8uL3NyYy9pbmRleC5zY3NzPzk3NDUiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;