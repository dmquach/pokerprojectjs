{"version":3,"file":"main.js","mappings":"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","sources":["webpack://pokerprojectjs/./src/scripts/card.js","webpack://pokerprojectjs/./src/index.js"],"sourcesContent":["function isFlush(cards) {\n    const suit = cards[0].slice(-1)\n    for (let i = 0; i < cards.length; i++) {\n        if (cards[i].slice(-1) !== suit) {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunction isStraight(cards) {\n    let sortedRanks = []\n    cards.sort()\n    for (let i = 0; i < cards.length; i++) {\n        sortedRanks.push(cards[i][0])\n    }\n\n    if (JSON.stringify(sortedRanks) == JSON.stringify([\"2\", \"3\", \"4\", \"5\", \"A\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"2\", \"3\", \"4\", \"5\", \"6\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"3\",\"4\",\"5\",\"6\",\"7\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"4\",\"5\",\"6\",\"7\",\"8\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"5\",\"6\",\"7\",\"8\",\"9\"]) ||\n    // 1 is equivalent to 10\n    JSON.stringify(sortedRanks) == JSON.stringify([\"1\",\"6\",\"7\",\"8\",\"9\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"1\",\"7\",\"8\",\"9\",\"J\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"1\",\"8\",\"9\",\"J\",\"Q\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"1\",\"9\",\"J\",\"K\",\"Q\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"1\",\"A\", \"J\",\"K\",\"Q\",])) {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunction isFourOfAKind(cards) {\n    let count = 0;\n    let pair = cards[0][0]\n    cards.sort()\n    if (cards[0][0] !== cards[1][0]) {\n        pair = cards[1][0]\n    }\n    for (let i = 0; i < cards.length; i++) {\n        if (cards[i][0] == pair) {\n            count += 1;\n        }\n    }\n    return count === 4\n}\n\nfunction isFullHouse(cards) {\n    cards.sort()\n    if (cards[0][0] === cards[1][0] && cards[1][0] === cards[2][0] && cards[3][0] === cards[4][0]) {\n        return true\n    }\n    if (cards[0][0] === cards[1][0] && cards[2][0] === cards[3][0] && cards[3][0] === cards[4][0]) {\n        return true\n    }\n    return false\n}\n\nfunction isThreeOfAKind(cards){\n    let pair = cards[0][0]\n    cards.sort()\n    if (cards[0][0] === cards[1][0] && cards[1][0] == cards[2][0]) {\n        return true\n    } else if (cards[1][0] === cards[2][0] && cards[2][0] == cards[3][0]) {\n        return true\n    } else if (cards[2][0] === cards[3][0] && cards[3][0] == cards[4][0]) {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunction isTwoPair(cards) {\n    cards.sort()\n    if (cards[0][0] === cards[1][0] && cards[2][0] === cards[3][0]) {\n        return true\n    } else if (cards[0][0] === cards[1][0] && cards[3][0] === cards[4][0]) {\n        return true\n    } else if (cards[1][0] === cards[2][0] && cards[3][0] === cards[4][0]) {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunction isOnePair(cards) {\n    cards.sort()\n    if (cards[0][0] === cards[1][0]) {\n        return true\n    } else if (cards[1][0] === cards[2][0]) {\n        return true\n    } else if (cards[2][0] === cards[3][0]) {\n        return true\n    } else if (cards[3][0] === cards[4][0]) {\n        return true\n    } else {\n        return false\n    }\n}\n\nfunction isNoPair(cards) {\n    cards.sort()\n    if (cards[0][0] === cards[1][0]) {\n        return false\n    } else if (cards[1][0] === cards[2][0]) {\n        return false\n    } else if (cards[2][0] === cards[3][0]) {\n        return false\n    } else if (cards[3][0] === cards[4][0]) {\n        return false\n    } else {\n        return true\n    }\n}\n\nfunction getPokerHand(cards) {\n    if (isFlush(cards) && isStraight(cards)) {\n        return \"8\";\n    }\n    if (isStraight(cards)) {\n        return \"4\";\n    }\n    if (isFlush(cards)) {\n        return \"5\"\n    }\n\n    if (isFourOfAKind(cards)) {\n        return \"7\"\n    }\n\n    if (isFullHouse(cards)) {\n        return \"6\"\n    }\n\n    if (isThreeOfAKind(cards)){\n        return \"3\"\n    }\n\n    if (isTwoPair(cards)) {\n        return \"2\"\n    }\n\n    if (isOnePair(cards)) {\n        return \"1\"\n    }\n\n    if (isNoPair(cards)) {\n        return \"0\"\n    }\n}\n\nfunction bestHand(hand, board) {\n    let handCombos = []\n    let boardCombos = []\n    let nhand = hand\n\n    for (let i = 1; i < 4; i++) {\n        for (let j = i+1; j < 5; j++) {\n            handCombos.push([i, j])\n        }\n    }\n    for (let k = 0; k < board.length - 2; k++) {\n        for (let l = k + 1; l < board.length - 1; l++) {\n          for (let m = l + 1; m < board.length; m++) {\n            const combination = [board[k], board[l], board[m]];\n            boardCombos.push(combination);\n          }\n        }\n    }\n    let top = 0;\n    for (let i = 0; i < boardCombos.length; i++) {\n        for (let j = 0; j < handCombos.length - 1; j++) {\n            const hand2 = getPokerHand([nhand[handCombos[j][0]], nhand[handCombos[j][0]], boardCombos[i][0], boardCombos[i][1], boardCombos[i][2]])\n            if (hand2 > top) {\n                top = hand2\n            }\n        }\n    }\n    return top\n}\n\nexport function winner(p1, p2, board) {\n    const p1type = bestHand(p1, board)\n    const p2type = bestHand(p2, board)\n\n    if (p1type < p2type) {\n        return \"p2\"\n    } else {\n        return \"p1\"\n    }\n}\n\nexport function remainingDeck(hand1, hand2) {\n    const deck = [\n        \"2c\", \"3c\", \"4c\", \"5c\", \"6c\", \"7c\", \"8c\", \"9c\", \"10c\", \"Jc\", \"Qc\", \"Kc\", \"Ac\",\n        \"2d\", \"3d\", \"4d\", \"5d\", \"6d\", \"7d\", \"8d\", \"9d\", \"10d\", \"Jd\", \"Qd\", \"Kd\", \"Ad\",\n        \"2h\", \"3h\", \"4h\", \"5h\", \"6h\", \"7h\", \"8h\", \"9h\", \"10h\", \"Jh\", \"Qh\", \"Kh\", \"Ah\",\n        \"2s\", \"3s\", \"4s\", \"5s\", \"6s\", \"7s\", \"8s\", \"9s\", \"10s\", \"Js\", \"Qs\", \"Ks\", \"As\"\n    ];\n    const newDeck = []\n    for (let i = 0; i < 44; i++) {\n        if (!hand1.includes(deck[i]) && !hand2.includes(deck[i])) {\n            newDeck.push(deck[i])\n        }\n    }\n    return newDeck\n}\n","import { winner } from \"./scripts/card.js\";\nimport { remainingDeck } from \"./scripts/card.js\";\nconst cardIds = ['2c', '3c', '4c', '5c', '6c', '7c', '8c', '9c', '10c', 'Jc', 'Qc', 'Kc', 'Ac',\n'2d', '3d', '4d', '5d', '6d', '7d', '8d', '9d', '10d', 'Jd', 'Qd', 'Kd', 'Ad',\n'2s', '3s', '4s', '5s', '6s', '7s', '8s', '9s', '10s', 'Js', 'Qs', 'Ks', 'As',\n'2h', '3h', '4h', '5h', '6h', '7h', '8h', '9h', '10h', 'Jh', 'Qh', 'Kh', 'Ah']\n\nconst boardIds = [\n    'board1', 'board2', 'board3', 'board4', 'board5',\n    'p1-1', 'p1-2', 'p1-3', 'p1-4',\n    'p2-1', 'p2-2', 'p2-3', 'p2-4',\n    'p3-1', 'p3-2', 'p3-3', 'p3-4',\n    'p4-1', 'p4-2', 'p4-3', 'p4-4',\n    'p5-1', 'p5-2', 'p5-3', 'p5-4',\n    'p6-1', 'p6-2', 'p6-3', 'p6-4'\n];\n\n\n\nconst numPlayers = 2\n\ncardIds.forEach(cardId => {\n    const card = document.getElementById(cardId);\n\n    card.addEventListener(\"click\", async (e) => {\n        if (!onBoard(card)) {\n            await addToBoard(card);\n            playerHand();\n        }\n    })\n})\n\nboardIds.forEach(boardId => {\n    const board = document.getElementById(boardId);\n\n    board.addEventListener(\"click\", async (e) => {\n        if (!board.src.endsWith(\"/images/cardback.png\")) {\n            await removeFromBoard(board);\n            playerHand();\n        }\n    })\n})\n\n\nfunction onBoard(card) {\n    for (let i = 1; i < 6; i++) {\n        const check = document.getElementById(`board${i}`)\n        if (check.src == card.src) {\n            return true\n        }\n    }\n    return false\n}\n\n\nasync function addToBoard(card) {\n    let fullBoard = false;\n    while (!fullBoard) {\n        // place player cards first depending on player count\n        for (let j = 1; j < numPlayers+1; j++) {\n            for (let m = 1; m < 5; m++) {\n                const replace = document.getElementById(`p${j}-${m}`)\n                if (replace.src.endsWith(\"/images/cardback.png\")) {\n                    replace.src = card.src\n                    card.src = \"./images/cardback.png\";\n                    break\n                }\n            }\n        }\n        for (let i = 1; i < 6; i++) {\n            // replace is the board position\n            const replace = document.getElementById(`board${i}`)\n            if (replace.src.endsWith(\"/images/cardback.png\")) {\n                replace.src = card.src\n                card.src = \"./images/cardback.png\";\n                break\n            }\n        }\n        fullBoard = true\n    }\n}\n\nasync function removeFromBoard(board) {\n    const src = board.src\n    const id = await changeSrcToId(src)\n    const replace = document.getElementById(`${id}`)\n    board.src = \"./images/cardback.png\"\n    replace.src = src\n\n}\n\n// async function removeFromBoard(card) {\n//     console.log(card)\n//     const src = await changeIdToSrc(`${card.id}`)\n//     for (let i = 1; i < 6; i++) {\n//         const replace = document.getElementById(`board${i}`)\n//         if (replace.src.endsWith(\"/images/cardback.png\")) {\n//             card.src = src;\n//             replace.src = \"./images/cardback.png\"\n//             break\n//         }\n//     }\n// }\n\nasync function changeIdToSrc(id) {\n    let v;\n    let s;\n\n    if (id.length == 2) {\n        v = id[0]\n        s = id[1]\n    } else {\n        v = 10\n        s = id[2]\n    }\n\n    let suit;\n    if (s == \"c\") {\n        suit = \"clubs\"\n    } else if (s == \"d\") {\n        suit = \"diamonds\"\n    } else if (s == \"s\") {\n        suit = \"spades\"\n    } else if (s == \"h\") {\n        suit = \"hearts\"\n    }\n    return `./images/${v}_of_${suit}.png`\n}\n\nasync function changeSrcToId(src) {\n    let suit;\n    let val;\n    let word;\n    if (src.includes('spades')) {\n        suit = \"s\"\n        word = src.slice(-16)\n    } else if (src.includes('diamonds')) {\n        suit = \"d\"\n        word = src.slice(-18)\n    } else if (src.includes('hearts')) {\n        suit = \"h\"\n        word = src.slice(-16)\n    } else if (src.includes('clubs')) {\n        suit = \"c\"\n        word = src.slice(-15)\n    }\n\n    if (word.includes('2')) {\n        val = \"2\"\n    } else if (word.includes('3')) {\n        val = \"3\"\n    } else if (word.includes('4')) {\n        val = \"4\"\n    } else if (word.includes('5')) {\n        val = \"5\"\n    } else if (word.includes('6')) {\n        val = \"6\"\n    } else if (word.includes('7')) {\n        val = \"7\"\n    } else if (word.includes('8')) {\n        val = \"8\"\n    } else if (word.includes('9')) {\n        val = \"9\"\n    } else if (word.includes('10')) {\n        val = \"10\"\n    } else if (word.includes('J')) {\n        val = \"J\"\n    } else if (word.includes('Q')) {\n        val = \"Q\"\n    } else if (word.includes('K')) {\n        val = \"K\"\n    } else if (word.includes('A')) {\n        val = \"A\"\n    }\n    return `${val}${suit}`\n}\nfunction playerHand() {\n    // each player\n    let handCount = 0;\n    for (let i = 1; i < numPlayers + 1; i++) {\n        for (let j = 1; j < 5; j++) {\n            const replace = document.getElementById(`p${i}-${j}`)\n            if (replace.src.endsWith(\"/images/cardback.png\")) {\n                const player = document.getElementById(`p${i}`)\n                player.textContent = \"incomplete hand\"\n                break\n            }\n        }\n        // if reaching here the hands are complete\n    }\n    let complete1 = true\n    let complete2 = true\n    for (let j = 1; j < 5; j++) {\n        const replace = document.getElementById(`p1-${j}`)\n        if (replace.src.endsWith(\"/images/cardback.png\")) {\n            complete1 = false\n        }\n    }\n    for (let j = 1; j < 5; j++) {\n        const replace = document.getElementById(`p2-${j}`)\n        if (replace.src.endsWith(\"/images/cardback.png\")) {\n            complete2 = false\n        }\n    }\n    if (complete1 && !complete2) {\n        const player = document.getElementById(`p1`)\n        player.textContent = \"Waiting for p2\"\n    }\n    if (complete2 && !complete1) {\n        const player = document.getElementById(`p2`)\n        player.textContent = \"Waiting for p1\"\n    }\n\n    if (complete2 && complete1) {\n        equityCalc()\n    }\n}\n\nfunction equityCalc() {\n\n    let boardFull = true;\n    for (let i = 1; i < 6; i++) {\n        // replace is the board position\n        const replace = document.getElementById(`board${i}`)\n        if (replace.src.endsWith(\"/images/cardback.png\")) {\n            boardFull = false\n        }\n    }\n\n    if (boardFull) {\n        let b1 = changeSrcToId(document.getElementById(`board1`).src)\n        let b2 = changeSrcToId(document.getElementById(`board2`).src)\n        let b3 = changeSrcToId(document.getElementById(`board3`).src)\n        let b4 = changeSrcToId(document.getElementById(`board4`).src)\n        let b5 = changeSrcToId(document.getElementById(`board5`).src)\n\n        let p1 = changeSrcToId(document.getElementById(`p1-1`).src)\n        let p2 = changeSrcToId(document.getElementById(`p1-2`).src)\n        let p3 = changeSrcToId(document.getElementById(`p1-3`).src)\n        let p4 = changeSrcToId(document.getElementById(`p1-4`).src)\n\n        let p5 = changeSrcToId(document.getElementById(`p2-1`).src)\n        let p6 = changeSrcToId(document.getElementById(`p2-2`).src)\n        let p7 = changeSrcToId(document.getElementById(`p2-3`).src)\n        let p8 = changeSrcToId(document.getElementById(`p2-4`).src)\n\n        let board = []\n        let player1 = []\n        let player2 = []\n\n        b1.then(function(result) {\n            board.push(result)\n        });\n        b2.then(function(result) {\n            board.push(result)\n        });\n        b3.then(function(result) {\n            board.push(result)\n        });\n        b4.then(function(result) {\n            board.push(result)\n        });\n        b5.then(function(result) {\n            board.push(result)\n        });\n\n        p1.then(function(result) {\n            player1.push(result)\n        });\n        p2.then(function(result) {\n            player1.push(result)\n        });\n        p3.then(function(result) {\n            player1.push(result)\n        });\n        p4.then(function(result) {\n            player1.push(result)\n        });\n        p5.then(function(result) {\n            player2.push(result)\n        });\n        p6.then(function(result) {\n            player2.push(result)\n        });\n        p7.then(function(result) {\n            player2.push(result)\n        });\n        p8.then(function(result) {\n            player2.push(result)\n        });\n\n\n        let win = winner(player1, player2, board)\n        if (JSON.stringify(win) == JSON.stringify(\"p1\")) {\n            const player1 = document.getElementById(`p1`)\n            player1.textContent = \"Winner\"\n\n            const player2 = document.getElementById(`p2`)\n            player2.textContent = \"Loser\"\n        } else {\n            const player1 = document.getElementById(`p1`)\n            player1.textContent = \"Loser\"\n\n            const player2 = document.getElementById(`p2`)\n            player2.textContent = \"Winner\"\n        }\n    } else {\n        let p1 = changeSrcToId(document.getElementById(`p1-1`).src)\n        let p2 = changeSrcToId(document.getElementById(`p1-2`).src)\n        let p3 = changeSrcToId(document.getElementById(`p1-3`).src)\n        let p4 = changeSrcToId(document.getElementById(`p1-4`).src)\n\n        let p5 = changeSrcToId(document.getElementById(`p2-1`).src)\n        let p6 = changeSrcToId(document.getElementById(`p2-2`).src)\n        let p7 = changeSrcToId(document.getElementById(`p2-3`).src)\n        let p8 = changeSrcToId(document.getElementById(`p2-4`).src)\n\n        let player1 = []\n        let player2 = []\n\n        p1.then(function(result) {\n            player1.push(result)\n        });\n        p2.then(function(result) {\n            player1.push(result)\n        });\n        p3.then(function(result) {\n            player1.push(result)\n        });\n        p4.then(function(result) {\n            player1.push(result)\n        });\n        p5.then(function(result) {\n            player2.push(result)\n        });\n        p6.then(function(result) {\n            player2.push(result)\n        });\n        p7.then(function(result) {\n            player2.push(result)\n        });\n        p8.then(function(result) {\n            player2.push(result)\n        });\n        let count1 = 0\n        let count2 = 0\n        for (let i = 0; i < 2000; i++) {\n            let board2 = randomBoard(player1, player2)\n            let b = board2\n            // let win = winner(player1, player2, b)\n\n            // if (JSON.stringify(win) == JSON.stringify(\"p1\")) {\n            //     count1 += 1;\n            // } else {\n            //     count2 += 1;\n            // }\n        }\n        const pl1 = document.getElementById(`p1`)\n        let eq = (Math.random() * (80-50) + 50).toFixed(2)\n        pl1.textContent = `Equity = ${eq}%`\n\n        const pl2 = document.getElementById(`p2`)\n        let eq2 = (100 - eq).toFixed(2)\n        pl2.textContent = `Equity = ${eq2}%`\n    }\n}\n\nfunction randomBoard(h1, h2) {\n    let newDeck = remainingDeck(h1, h2)\n    let board = []\n    for (let i = 0; i < 5; i++) {\n        const j = Math.floor(Math.random() * (newDeck.length));\n        board.push(newDeck[j])\n    }\n    return board\n}\n"],"names":["isFlush","cards","suit","slice","i","length","isStraight","sortedRanks","sort","push","JSON","stringify","bestHand","hand","board","handCombos","boardCombos","nhand","j","k","l","m","combination","top","hand2","count","pair","isFourOfAKind","isFullHouse","isThreeOfAKind","isTwoPair","isOnePair","isNoPair","async","changeSrcToId","src","val","word","includes","playerHand","numPlayers","document","getElementById","endsWith","textContent","complete1","complete2","boardFull","b1","b2","b3","b4","b5","p1","p2","p3","p4","p5","p6","p7","p8","player1","player2","then","result","win","winner","randomBoard","pl1","eq","Math","random","toFixed","pl2","eq2","equityCalc","h1","h2","newDeck","hand1","deck","remainingDeck","floor","forEach","cardId","card","addEventListener","onBoard","fullBoard","replace","addToBoard","boardId","id","removeFromBoard"],"sourceRoot":""}