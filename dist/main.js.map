{"version":3,"file":"main.js","mappings":"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","sources":["webpack://pokerprojectjs/./src/scripts/board/boardConsts.js","webpack://pokerprojectjs/./src/scripts/board/board.js","webpack://pokerprojectjs/./src/scripts/handTypes/handConsts.js","webpack://pokerprojectjs/./src/scripts/handTypes/handType.js","webpack://pokerprojectjs/./src/scripts/deck.js","webpack://pokerprojectjs/./src/scripts/player.js","webpack://pokerprojectjs/./src/scripts/game.js","webpack://pokerprojectjs/./src/scripts/handTypes/handVal.js","webpack://pokerprojectjs/./src/scripts/handTypes/evalHand.js","webpack://pokerprojectjs/./src/scripts/handTypes/handUtils.js","webpack://pokerprojectjs/./src/scripts/handTypes/equityCalcs.js","webpack://pokerprojectjs/./src/index.js"],"sourcesContent":["export const KEY = {\n    1: \"No Pair\",\n    2: \"One Pair\",\n    3: \"Two Pair\",\n    4: \"Three of a Kind\",\n    5: \"Straight\",\n    6: \"Flush\",\n    7: \"Full House!\",\n    8: \"Four of a Kind!!\",\n    9: \"Straight Flush!!!\",\n    10: \"ROYAL FLUSH!!!\"\n}\n","import { KEY } from \"./boardConsts.js\";\n\nfunction Board (deck) {\n    // Element ID\n    this.boardPos = {\n        'p1-1': 'open', 'p1-2': 'open', 'p1-3': 'open', 'p1-4': 'open',\n        'p2-1': 'open', 'p2-2': 'open', 'p2-3': 'open', 'p2-4': 'open',\n        'p3-1': '', 'p3-2': '', 'p3-3': '', 'p3-4': '',\n        'p4-1': '', 'p4-2': '', 'p4-3': '', 'p4-4': '',\n        'p5-1': '', 'p5-2': '', 'p5-3': '', 'p5-4': '',\n        'p6-1': '', 'p6-2': '', 'p6-3': '', 'p6-4': '',\n        'board1': 'open', 'board2': 'open', 'board3': 'open', 'board4': 'open', 'board5': 'open',\n        'highlight': 'p1-1'\n    }\n    this.deck = deck\n    this.onBoard = []\n    this.winner = false\n    this.addClickBoard()\n    this.createReset()\n    this._initialBorder()\n}\n\nBoard.prototype.addClickBoard = function () {\n    for (let pos in this.boardPos) {\n        if (pos !== 'highlight') {\n            const newPos = document.getElementById(pos);\n            newPos.addEventListener(\"click\", (e) => {\n                if (this.boardPos[e.target.id] === 'open') {\n                    this._removeBorder()\n                    this._addBorder(e.target)\n                } else if (!(this.boardPos[e.target.id] === '')) {\n                    if (this.winner) this._clearWinnerBorders()\n                    this.removeFromBoard(e.target.id)\n                    this._addBorder(e.target)\n                } else {\n                    console.log(\"add player first!\")\n                }\n            })\n        }\n    }\n}\n\nBoard.prototype.full = function () {\n    return this.onBoard.length === 5\n}\n\nBoard.prototype.playersReady = function () {\n    for (let i = 1; i < 7; i++) {\n        const player = this.deck[`p${i}`]\n        if (player.active && !player.handFull()) return false\n    }\n    return true\n}\n\nBoard.prototype._countPlayers = function () {\n    let count = 0\n    for (let i = 1; i < 7; i++) {\n        const player = this.deck[`p${i}`]\n        if (player.active) {\n            count++\n        }\n    }\n    return count\n}\n\n\nBoard.prototype.swapImg = function (pos1, pos2) {\n    const changePos = document.getElementById(pos1)\n    const tempSrc = changePos.src\n    const changeNextPos = document.getElementById(pos2)\n    changePos.src = changeNextPos.src\n    changeNextPos.src = tempSrc\n}\n\nBoard.prototype.pushOnBoard = function (cardKey) {\n    this.onBoard.push(cardKey)\n}\n\n// Board.prototype.pushPlayerHand = function () {\n\n// }\n\n// Board.prototype.removePlayerHand = function () {\n\n// }\n\nBoard.prototype.createReset = function () {\n    const res = document.getElementById('resetButton')\n    res.addEventListener(\"click\", () => {\n        for (let i = 1; i < 7; i++) {\n            if (this.deck[`p${i}`].active) this._removePlayers(`p${i}`)\n            if (i < 3) {\n                this._addPlayers(`p${i}`)\n            }\n        }\n        this.clearBoard()\n        this._createNextBorder()\n    })\n}\n\nBoard.prototype.addToBoard = async function (cardKey, playerNum = 0) {\n    // NEXT\n    // FIX THIS TO SEPARATE WINNER\n    if (this.boardPos['highlight'] === '') {\n        console.log('everything full')\n    } else {\n        this.boardPos[this.boardPos['highlight']] = 'taken'\n        this.deck.cardDeck[cardKey] = 'board'\n        this.swapImg(this.boardPos['highlight'], cardKey)\n        if (this.boardPos.highlight[0] === 'b') {\n            this.pushOnBoard(cardKey)\n        }\n\n            // FIX, update odds not just when board gets full but when a hand gets full and the board is full\n        if (this.full() && this.playersReady()) {\n            this.highlightWinner()\n        } else if (this.playersReady()) {\n            await this.displayEquities(this.onBoard)\n        } else {\n            this.createWaitingMessages()\n        }\n        this._createNextBorder(playerNum)\n    }\n}\n\nBoard.prototype.removeFromBoard = async function (boardKey) {\n    const itemToRemove = document.getElementById(boardKey)\n    const item = this.changeSrcToId(itemToRemove.src)\n    this.swapImg(boardKey, item)\n    this.boardPos[boardKey] = 'open'\n    this.deck.cardDeck[item] = 'deck'\n    const index = this.onBoard.indexOf(item)\n    if (index !== -1) {\n        this.onBoard.splice(index, 1);\n    }\n    for (let i = 1; i < 7; i++) {\n        let player = this.deck[`p${i}`].playerHand\n        let index = player.indexOf(item)\n        if (index !== -1) {\n            player.splice(index, 1);\n        }\n    }\n\n    if (this.full() && this.playersReady()) {\n        this.highlightWinner()\n    } else if (this.playersReady()) {\n        await this.displayEquities(this.onBoard)\n    } else {\n        this.createWaitingMessages()\n    }\n}\n\nBoard.prototype.clearBoard = function () {\n    for (let i = 1; i < 6; i++) {\n        if (this.boardPos[`board${i}`] === 'taken') this.removeFromBoard(`board${i}`)\n    }\n    this._clearWinnerBorders()\n}\n\nBoard.prototype._calculateBestHands = function () {\n    const bestHands = {}\n    for (let i = 1; i < 7; i++) {\n        if (this.deck[`p${i}`].handFull()) {\n            bestHands[`p${i}`] = (this.deck.handtype.bestHand(this.deck[`p${i}`].playerHand, this.onBoard))\n        }\n    }\n    return bestHands\n}\n\nBoard.prototype._addBorder = function (pos = -2) {\n\n    if (!pos || !pos.id) {\n        pos = document.getElementById(pos)\n    }\n\n    // highlight entire flop\n    if (['board1', 'board2', 'board3'].includes(pos.id)) {\n        this._removeBorder()\n        this.boardPos['highlight'] = pos.id\n        document.getElementById('board1').style.border = '2px solid red';\n        document.getElementById('board2').style.border = '2px solid red';\n        return document.getElementById('board3').style.border = '2px solid red';\n    } else {\n        this._removeBorder()\n        this.boardPos['highlight'] = pos.id\n        return pos.style.border = '2px solid red';\n    }\n}\n\n// removing the first border clears the highlight\nBoard.prototype._removeBorder = function() {\n    const prevBorder = document.getElementById(this.boardPos['highlight'])\n    if (prevBorder && ['board1', 'board2', 'board3'].includes(prevBorder.id)) {\n        document.getElementById('board1').removeAttribute('style')\n        document.getElementById('board2').removeAttribute('style')\n        document.getElementById('board3').removeAttribute('style')\n    }\n\n    // remove the previous border only if it was red\n    if (prevBorder && prevBorder.style.border !== '4px solid blue') {\n        prevBorder.removeAttribute('style')\n    }\n\n    // TODO ADDING CARD TO FIFTH SLOT DOES NOT REMOVE THE BORDER\n    this.boardPos.highlight = ''\n}\n\nBoard.prototype._clearWinnerBorders = function () {\n    for (let pos in this.boardPos) {\n        const nextBorder = document.getElementById(pos)\n        if (nextBorder) nextBorder.removeAttribute('style')\n    }\n}\n\nBoard.prototype._findNextBorder = function() {\n    for (let pos in this.boardPos) {\n        if (this.boardPos[pos] === 'open') {\n            const nextBorder = document.getElementById(pos)\n            return this._addBorder(nextBorder)\n        }\n    }\n    return this.highlightWinner()\n}\n\nBoard.prototype._createNextBorder = function(playerNum = 0) {\n    // playerNum should tell what player to make next border for\n    // 0 means add to next available space\n    // -1 means add to board\n    // num means add to that player\n\n    // first case if board full find next spot/highlight winner if hands full\n    // second case if player gets last slot filled, find next border\n    // third case if players full continue on board or where clicked\n    // fourth case is filling a players hand\n\n    if (playerNum === -1 && this.full()) {\n        return this._findNextBorder()\n    } else if((playerNum > 0 && this.deck['p' + playerNum].handLength() === 4)) {\n        return this._findNextBorder()\n    } else if (playerNum === -1) {\n        for (let pos in this.boardPos) {\n            if (pos[0] === 'b' && this.boardPos[pos] === 'open') {\n                const nextBorder = document.getElementById(pos)\n                return this._addBorder(nextBorder)\n            }\n        }\n    } else if (playerNum !== 0) {\n        for (let pos in this.boardPos) {\n            if (Number(pos[1]) === playerNum && this.boardPos[pos] === 'open') {\n                const nextBorder = document.getElementById(pos)\n                return this._addBorder(nextBorder)\n            }\n        }\n    } else {\n        return this._findNextBorder()\n    }\n}\n\n\nBoard.prototype._createNewPlayerBorder = function (playerNum) {\n    const nextBorder = document.getElementById(`${playerNum}-1`)\n    this._addBorder(nextBorder)\n}\n\nBoard.prototype._initialBorder = function () {\n    const initial = document.getElementById('p1-1');\n    this._addBorder(initial)\n}\n\nBoard.prototype._getHighlightedPos = function () {\n    const pos = this.boardPos.highlight\n    if (pos[0] === 'p') {\n        // returns player\n        return pos.slice(0, 2)\n    } else {\n        return -1\n    }\n}\n\nBoard.prototype._addPlayers = function (playerNum) {\n    //p1 boardPos[0-3], p2 [4-7]\n    for (let key in this.boardPos) {\n        if (key[1] === playerNum[1]) {\n            const pos = document.querySelector(`.${key}`)\n            pos.classList.remove('blur')\n            this.boardPos[key] = 'open'\n        }\n    }\n    const player = document.getElementById(playerNum)\n    const text = player.childNodes[2]\n    const img = player.querySelector('img');\n    img.src = \"./images/icons8-minus-50.png\"\n    text.nodeValue += ' equity: '\n}\n\nBoard.prototype._removePlayers = function (playerNum) {\n    for (let key in this.boardPos) {\n        if (key[1] === playerNum[1]) {\n            const pos = document.querySelector(`.${key}`)\n            pos.classList.add('blur')\n            if (this.boardPos[key] !== 'open') this.removeFromBoard(key)\n            this.boardPos[key] = ''\n            this._createNextBorder()\n        }\n    }\n    const player = document.getElementById(playerNum)\n    const text = player.childNodes[2]\n    const img = player.querySelector('img');\n    img.src = \"./images/icons8-plus-button-50.png\"\n    text.nodeValue = `P${playerNum[1]}`\n}\n\nBoard.prototype.changeSrcToId = function (src) {\n    let val;\n    let word;\n    let suit;\n    if (src.includes('spades')) {\n        suit = \"s\"\n        word = src.slice(-16)\n    } else if (src.includes('diamonds')) {\n        suit = \"d\"\n        word = src.slice(-18)\n    } else if (src.includes('hearts')) {\n        suit = \"h\"\n        word = src.slice(-16)\n    } else if (src.includes('clubs')) {\n        suit = \"c\"\n        word = src.slice(-15)\n    }\n    if (word) {\n        if (word.includes('2')) {\n            val = \"2\"\n        } else if (word.includes('3')) {\n            val = \"3\"\n        } else if (word.includes('4')) {\n            val = \"4\"\n        } else if (word.includes('5')) {\n            val = \"5\"\n        } else if (word.includes('6')) {\n            val = \"6\"\n        } else if (word.includes('7')) {\n            val = \"7\"\n        } else if (word.includes('8')) {\n            val = \"8\"\n        } else if (word.includes('9')) {\n            val = \"9\"\n        } else if (word.includes('10')) {\n            val = \"10\"\n        } else if (word.includes('J')) {\n            val = \"J\"\n        } else if (word.includes('Q')) {\n            val = \"Q\"\n        } else if (word.includes('K')) {\n            val = \"K\"\n        } else if (word.includes('A')) {\n            val = \"A\"\n        }\n    } else {\n        return false\n    }\n    return `${val}${suit}`\n}\n\nBoard.prototype.changeIdToSrc = function (id) {\n    let v;\n    let s;\n\n    if (id.length == 2) {\n        v = id[0]\n        s = id[1]\n    } else {\n        v = 10\n        s = id[2]\n    }\n\n    let suit;\n    if (s == \"c\") {\n        suit = \"clubs\"\n    } else if (s == \"d\") {\n        suit = \"diamonds\"\n    } else if (s == \"s\") {\n        suit = \"spades\"\n    } else if (s == \"h\") {\n        suit = \"hearts\"\n    }\n    return `./images/${v}_of_${suit}.png`\n}\n\nBoard.prototype.highlightWinner = function () {\n    if (!this.full() || !this.playersReady()) return -1\n\n    this._removeBorder()\n    this.boardPos.highlight = ''\n    this.winner = true\n    const bestHands = this._calculateBestHands()\n    const winner = this.deck.handtype.winner(bestHands)\n    const players = Object.keys(winner)\n    let hand = []\n    for (let i = 1; i < 7; i++) {\n        const player = `p${i}`\n        if (players.includes(player)) {\n            //TODO, show losing hand with hover\n            const handVal = winner[player][0]\n            const handString = KEY[handVal]\n            hand = hand.concat(winner[player][1].filter(card => !hand.includes(card)))\n\n            const p = document.getElementById(player)\n            const text = p.childNodes[2]\n            text.nodeValue = `WINNER: ${handString}`\n        } else if (this.deck[player].active) {\n            const p = document.getElementById(player)\n            const text = p.childNodes[2]\n            text.nodeValue = `${KEY[bestHands[player][0]]}`\n        }\n    }\n\n    const allImages = document.querySelectorAll('img');\n    allImages.forEach(img => {\n        const id = this.changeSrcToId(img.src)\n        if (hand.indexOf(id) !== -1) {\n            img.style.border = '4px solid blue';\n        }\n    });\n}\n\nBoard.prototype.createWaitingMessages = function () {\n    for (let i = 1; i < 7; i++) {\n        if (this.deck[`p${i}`].active) {\n            const player = document.getElementById(`p${i}`)\n            const text = player.childNodes[2]\n\n            text.nodeValue = \"Waiting on unfilled hands\"\n        }\n    }\n}\n\nBoard.prototype.displayEquities = async function (board) {\n    //[{p1: [wins, hand], p2: [wins, hand]}, totalOutcomes]\n    // hash of players and total outcomes\n    //if players not ready or no players break out\n\n\n    if (!this.playersReady() || this._countPlayers() === 0) return -1;\n\n    if (this.onBoard.length === 4 || this.onBoard.length === 3 || this.onBoard.length === 0) {\n        // Show loading screen\n        const loadingScreen = document.getElementById(\"loading-screen\");\n        if (loadingScreen) loadingScreen.style.display = \"flex\";\n\n        // Let browser repaint, then run calculation\n        setTimeout(async () => {\n            const players = await this.deck.handtype.equities(board);\n            for (const p in players[0]) {\n                const player = document.getElementById(p);\n                const text = player.childNodes[2];\n                text.nodeValue = `${p} equity: ${((players[0][p][0] / players[1]) * 100).toFixed(2)}%`;\n            }\n            if (loadingScreen) loadingScreen.style.display = \"none\";\n        }, 0);\n    }\n}\n\nexport { Board }\n","export const NUM_VAL = {\n    'A': 14,\n    'K': 13,\n    'Q': 12,\n    'J': 11,\n    '10': 10,\n    '1': 10,\n    '9': 9,\n    '8': 8,\n    '7': 7,\n    '6': 6,\n    '5': 5,\n    '4': 4,\n    '3': 3,\n    '2': 2\n}\n","import { isFlush, isStraight, isFourOfAKind, isFullHouse, isThreeOfAKind, isTwoPair, isOnePair, isNoPair, broadway } from \"./handVal.js\"\nimport { sortHand, getPokerHand, bestHand, comparingKickers } from \"./evalHand.js\"\nimport { activeHands } from \"./handUtils.js\"\nimport { equitiesPreFlop, equitiesTwoMoreCards, equitiesOneMoreCard } from \"./equityCalcs.js\"\n\nfunction Handtype(p1, p2, p3, p4, p5, p6, deck) {\n    this.p1 = p1\n    this.p2 = p2\n    this.p3 = p3\n    this.p4 = p4\n    this.p5 = p5\n    this.p6 = p6\n    this.deck = deck\n}\n\n\n// eval hands\nHandtype.prototype.isFlush = isFlush\nHandtype.prototype.isStraight = isStraight\nHandtype.prototype.isFourOfAKind = isFourOfAKind\nHandtype.prototype.isFullHouse = isFullHouse\nHandtype.prototype.isThreeOfAKind = isThreeOfAKind\nHandtype.prototype.isTwoPair = isTwoPair\nHandtype.prototype.isOnePair = isOnePair\nHandtype.prototype.isNoPair = isNoPair\nHandtype.prototype.broadway = broadway\n\n// hand vals\nHandtype.prototype.sortHand = sortHand\nHandtype.prototype.getPokerHand = getPokerHand\nHandtype.prototype.bestHand = bestHand\nHandtype.prototype.comparingKickers = comparingKickers\n\n// hand utils\nHandtype.prototype.activeHands = activeHands\n\n// equity calcs\nHandtype.prototype.equitiesPreFlop = equitiesPreFlop\nHandtype.prototype.equitiesTwoMoreCards = equitiesTwoMoreCards\nHandtype.prototype.equitiesOneMoreCard = equitiesOneMoreCard\n\n\nHandtype.prototype.winner = function (bestHandsHash) {\n    // assumes best hand on board is known\n    if (Object.keys(bestHandsHash).length === 0) return false\n    let winner = {'empty': [0, []]}\n\n    for (let player in bestHandsHash) {\n        const currWinner = winner[Object.keys(winner)[0]]\n        if (bestHandsHash[player][0] > currWinner[0]) {\n            winner = {}\n            winner[player] = bestHandsHash[player]\n        } else if (bestHandsHash[player][0] === currWinner[0]) {\n            const check = this.comparingKickers(bestHandsHash[player][1], currWinner[1])\n            if (check === 0) {\n                winner[player] = [bestHandsHash[player][0], bestHandsHash[player][1]]\n            } else {\n                if (check[0] === 1) {\n                    winner = {}\n                    winner[player] = bestHandsHash[player]\n                }\n            }\n        }\n    }\n\n    return winner\n}\n\n// function showLoading() {\n//   document.getElementById(\"loading-screen\").style.display = \"flex\";\n// }\n\n// function hideLoading() {\n//   document.getElementById(\"loading-screen\").style.display = \"none\";\n// }\n//not async\nHandtype.prototype.equities = async function (board) {\n    // Show the loading spinner\n    const loadingScreen = document.getElementById(\"loading-screen\");\n    if (loadingScreen) loadingScreen.style.display = \"flex\";\n\n    // Let the browser repaint so the spinner actually shows before heavy calc\n    await new Promise(resolve => setTimeout(resolve, 200));\n\n    const hands = this.activeHands();\n    const deck = this.deck.inDeck();\n    let totalOutcomes = 0;\n    let chops = 0;\n    let result = -1;\n    if (board.length === 0) {\n        console.log(\"no cards on board\");\n        result = this.equitiesPreFlop(hands, deck, totalOutcomes, chops);\n    } else if (board.length === 1) {\n        console.log(\"finish flop\");\n    } else if (board.length === 2) {\n        console.log(\"finish flop\");\n    } else if (board.length === 3) {\n        console.log(\"three cards on board\");\n        result = this.equitiesTwoMoreCards(board, hands, deck, totalOutcomes, chops, 0);\n    } else if (board.length === 4) {\n        console.log(\"four cards on board\");\n        result = this.equitiesOneMoreCard(board, hands, deck, totalOutcomes, chops, 0);\n    }\n\n    // Hide the spinner\n    if (loadingScreen) loadingScreen.style.display = \"none\";\n\n    return result;\n}\n\nexport { Handtype }\n","import { Board } from \"./board/board.js\"\nimport { Handtype } from \"./handTypes/handType.js\"\n\nfunction Deck (p1, p2, p3, p4, p5, p6) {\n    this.cardDeck = {\n        '2c': 'deck', '3c': 'deck', '4c': 'deck', '5c': 'deck', '6c': 'deck', '7c': 'deck', '8c': 'deck', '9c': 'deck', '10c': 'deck', 'Jc': 'deck', 'Qc': 'deck', 'Kc': 'deck', 'Ac': 'deck',\n        '2d': 'deck', '3d': 'deck', '4d': 'deck', '5d': 'deck', '6d': 'deck', '7d': 'deck', '8d': 'deck', '9d': 'deck', '10d': 'deck', 'Jd': 'deck', 'Qd': 'deck', 'Kd': 'deck', 'Ad': 'deck',\n        '2s': 'deck', '3s': 'deck', '4s': 'deck', '5s': 'deck', '6s': 'deck', '7s': 'deck', '8s': 'deck', '9s': 'deck', '10s': 'deck', 'Js': 'deck', 'Qs': 'deck', 'Ks': 'deck', 'As': 'deck',\n        '2h': 'deck', '3h': 'deck', '4h': 'deck', '5h': 'deck', '6h': 'deck', '7h': 'deck', '8h': 'deck', '9h': 'deck', '10h': 'deck', 'Jh': 'deck', 'Qh': 'deck', 'Kh': 'deck', 'Ah': 'deck'\n    }\n    this.board = new Board(this)\n    this.p1 = p1\n    this.p2 = p2\n    this.p3 = p3\n    this.p4 = p4\n    this.p5 = p5\n    this.p6 = p6\n\n    this.addClickCards()\n    this.handtype = new Handtype(this.p1, this.p2, this.p3, this.p4, this.p5, this.p6, this)\n}\n\nDeck.prototype.lastPlayerAdded = function (lastPlayer) {\n    this.lastPlayer = lastPlayer\n}\n\n\nDeck.prototype.addClickCards = function () {\n    for (let key in this.cardDeck) {\n        const card = document.getElementById(key);\n        card.addEventListener(\"click\", () => {\n            if (this.cardDeck[card.id] === \"deck\") {\n                const player = this.board._getHighlightedPos()\n                if (player !== -1) {\n                    this[player].addToHand(card.id)\n                    this.lastPlayer = player\n                    this.board.addToBoard(card.id, Number(player[1]))\n                } else {\n                    this.board.addToBoard(card.id, -1)\n                }\n            } else {\n                console.log(\"not in deck\")\n            }\n        })\n    }\n}\n\nDeck.prototype.inDeck = function () {\n    const deck = []\n    for (const key in this.cardDeck) {\n        if (this.cardDeck[key] === 'deck') deck.push(key)\n    }\n    return deck\n}\n\nDeck.prototype.dealCards = function (cardsInDeck, cardsNeeded) {\n\n    // Fisher-Yates shuffle algorithm\n    for (let i = cardsInDeck.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [cardsInDeck[i], cardsInDeck[j]] = [cardsInDeck[j], cardsInDeck[i]];\n    }\n\n    const chosen = cardsInDeck.slice(0, cardsNeeded);\n\n    return chosen;\n}\n\nexport { Deck }\n","function Player(active, playerNum) {\n    this.playerHand = []\n    this.playerNum = playerNum\n    this.active = active\n}\n\nPlayer.prototype.setDeck = function (deck) {\n    this.deck = deck\n    this.addAndRemovePlayerButton()\n}\n\nPlayer.prototype.activate = function () {\n    this.active = !this.active\n}\n\nPlayer.prototype.handLength = function () {\n    const length = this.playerHand.length\n    return length\n}\n\nPlayer.prototype.addAndRemovePlayerButton = function () {\n    const player = document.getElementById(this.playerNum)\n    player.addEventListener(\"click\", () => {\n        if (!this.active) {\n            // adding player\n            this.activate()\n            this.deck.board._addPlayers(this.playerNum)\n            this.deck.board._createNewPlayerBorder(this.playerNum)\n            this.deck.board._clearWinnerBorders()\n            this.deck.board._addBorder(`${this.playerNum}-1`)\n            this.deck.board.createWaitingMessages()\n        } else {\n            // removing player\n            this.activate()\n            this.deck.board._removePlayers(this.playerNum)\n            this.deck.board._createNextBorder()\n            this.deck.board._clearWinnerBorders()\n            this.deck.board.highlightWinner()\n            this.deck.board._createNextBorder()\n            // if removing the winner crown a new winner\n        }\n    })\n}\n\nPlayer.prototype.addToHand = function (card) {\n    this.playerHand.push(card)\n}\n\nPlayer.prototype.removeFromHand = function (card) {\n    this.playerHand.push(card)\n}\n\nPlayer.prototype.handFull = function () {\n    return this.playerHand.length === 4\n}\n\nexport { Player }\n","import { Deck } from \"./deck.js\"\nimport { Player } from \"./player.js\"\n\nfunction Game() {\n    this.p1 = new Player(true, 'p1')\n    this.p2 = new Player(true, 'p2')\n    this.p3 = new Player(false, 'p3')\n    this.p4 = new Player(false, 'p4')\n    this.p5 = new Player(false, 'p5')\n    this.p6 = new Player(false, 'p6')\n    this.deck = new Deck(this.p1, this.p2, this.p3, this.p4, this.p5, this.p6)\n    this.addDeckToPlayer(this.deck)\n}\n\nGame.prototype.addDeckToPlayer = function (deck) {\n    this.p1.setDeck(deck)\n    this.p2.setDeck(deck)\n    this.p3.setDeck(deck)\n    this.p4.setDeck(deck)\n    this.p5.setDeck(deck)\n    this.p6.setDeck(deck)\n}\n\nexport { Game }\n","// Finding type of value of hand\nexport function isFlush(fiveCards) {\n    const suit = fiveCards[0].slice(-1)\n    for (let i = 0; i < 5; i++) {\n        if (fiveCards[i].slice(-1) !== suit) {\n            return false\n        }\n    }\n    const sortedHand = this.sortHand(fiveCards)\n    return [true, sortedHand]\n}\n\nexport function isStraight(fiveCards) {\n    let sortedRanks = []\n    const sortedHand = this.sortHand(fiveCards)\n    for (let i = 0; i < 5; i++) {\n        sortedRanks.push(sortedHand[i][0])\n    }\n\n    if (JSON.stringify(sortedRanks) == JSON.stringify([\"A\", \"5\", \"4\", \"3\", \"2\"])) {\n        return [true, sortedHand]\n    }\n\n    if (\n    JSON.stringify(sortedRanks) == JSON.stringify([\"6\", \"5\", \"4\", \"3\", \"2\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"7\",\"6\",\"5\",\"4\",\"3\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"8\",\"7\",\"6\",\"5\",\"4\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"9\",\"8\",\"7\",\"6\",\"5\"]) ||\n    // 1 is equivalent to 10\n    JSON.stringify(sortedRanks) == JSON.stringify([\"1\",\"9\",\"8\",\"7\",\"6\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"J\",\"1\",\"9\",\"8\",\"7\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"Q\",\"J\",\"1\",\"9\",\"8\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"K\",\"Q\",\"J\",\"1\",\"9\"]) ||\n    JSON.stringify(sortedRanks) == JSON.stringify([\"A\",\"K\", \"Q\",\"J\",\"1\",])\n    ) {\n        return [true, sortedHand]\n    } else {\n        return false\n    }\n}\n\n\nexport function isFourOfAKind(fiveCards) {\n    let count = 0;\n    const sortedHand = this.sortHand(fiveCards)\n    let pair = sortedHand[0][0]\n\n    if (sortedHand[0][0] !== sortedHand[1][0]) {\n        pair = sortedHand[1][0]\n    }\n    for (let i = 0; i < sortedHand.length; i++) {\n        if (sortedHand[i][0] == pair) {\n            count += 1;\n        }\n    }\n    if (count === 4) {\n        return [true, sortedHand]\n    }\n    return false\n}\n\nexport function isFullHouse(fiveCards) {\n    const sortedHand = this.sortHand(fiveCards)\n    if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[1][0] === sortedHand[2][0] && sortedHand[3][0] === sortedHand[4][0]) {\n        return [true, sortedHand]\n    }\n    if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[2][0] === sortedHand[3][0] && sortedHand[3][0] === sortedHand[4][0]) {\n        return [true, sortedHand]\n    }\n    return false\n}\n\nexport function isThreeOfAKind(fiveCards) {\n    const sortedHand = this.sortHand(fiveCards)\n    if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[1][0] == sortedHand[2][0]) {\n        return [true, sortedHand]\n    } else if (sortedHand[1][0] === sortedHand[2][0] && sortedHand[2][0] == sortedHand[3][0]) {\n        return [true, sortedHand]\n    } else if (sortedHand[2][0] === sortedHand[3][0] && sortedHand[3][0] == sortedHand[4][0]) {\n        return [true, sortedHand]\n    } else {\n        return false\n    }\n}\n\nexport function isTwoPair(fiveCards) {\n    const sortedHand = this.sortHand(fiveCards)\n    if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[2][0] === sortedHand[3][0]) {\n        return [true, sortedHand]\n    } else if (sortedHand[0][0] === sortedHand[1][0] && sortedHand[3][0] === sortedHand[4][0]) {\n        return [true, sortedHand]\n    } else if (sortedHand[1][0] === sortedHand[2][0] && sortedHand[3][0] === sortedHand[4][0]) {\n        return [true, sortedHand]\n    } else {\n        return false\n    }\n}\n\nexport function isOnePair(fiveCards) {\n    const sortedHand = this.sortHand(fiveCards)\n    if (sortedHand[0][0] === sortedHand[1][0]) {\n        return [true, sortedHand]\n    } else if (sortedHand[1][0] === sortedHand[2][0]) {\n        return [true, sortedHand]\n    } else if (sortedHand[2][0] === sortedHand[3][0]) {\n        return [true, sortedHand]\n    } else if (sortedHand[3][0] === sortedHand[4][0]) {\n        return [true, sortedHand]\n    } else {\n        return false\n    }\n}\n\nexport function isNoPair(fiveCards) {\n    const sortedHand = this.sortHand(fiveCards)\n    if (sortedHand[0][0] === sortedHand[1][0]) {\n        return false\n    } else if (sortedHand[1][0] === sortedHand[2][0]) {\n        return false\n    } else if (sortedHand[2][0] === sortedHand[3][0]) {\n        return false\n    } else if (sortedHand[3][0] === sortedHand[4][0]) {\n        return false\n    } else {\n        return [true, sortedHand]\n    }\n}\n\nexport function broadway(fiveCards) {\n    fiveCards.sort()\n    if (fiveCards[0].slice(0, 2) !== '10') return false\n    if (fiveCards[1].slice(0, 1) !== 'A') return false\n    if (fiveCards[2].slice(0, 1) !== 'J') return false\n    if (fiveCards[3].slice(0, 1) !== 'K') return false\n    if (fiveCards[4].slice(0, 1) !== 'Q') return false\n    return true\n}\n","import { NUM_VAL } from \"./handConsts.js\"\n\nexport function sortHand(hand) {\n    hand.sort((cardA, cardB) => {\n         const valueA = NUM_VAL[cardA.slice(0, -1)];\n         const valueB = NUM_VAL[cardB.slice(0, -1)];\n\n         return valueB - valueA; // Sort in descending order based on card values\n     });\n    const cards = {}\n    const newHand = []\n    hand.forEach(item => {\n        cards[item[0]] = (cards[item[0]] || 0) + 1\n    })\n\n    hand.forEach(item => {\n        if (cards[item[0]] >= 3) {\n            newHand.push(item)\n        }\n    })\n    hand.forEach(item => {\n        if (cards[item[0]] === 2) {\n            newHand.push(item)\n        }\n    })\n    hand.forEach(item => {\n        if (!(newHand.includes(item))) newHand.push(item)\n    })\n\n    return newHand\n}\n\nexport function getPokerHand(fiveCards) {\n    const flush = this.isFlush(fiveCards)\n    const straight = this.isStraight(fiveCards)\n    if (flush[0] && straight[0]) {\n        if (this.broadway(fiveCards)) {\n            return [10, this.sortHand(fiveCards)];\n        } else {\n            return [9, this.sortHand(fiveCards)];\n        }\n    }\n    const isFourOfAKind = this.isFourOfAKind(fiveCards)\n    if (isFourOfAKind[0]) {\n        return [8, isFourOfAKind[1]]\n    }\n    const isFullHouse = this.isFullHouse(fiveCards)\n    if (isFullHouse[0]) {\n        return [7, isFullHouse[1]]\n    }\n    const isFlush = this.isFlush(fiveCards);\n    if (isFlush[0]) {\n        return [6, isFlush[1]];\n    }\n    const isStraight = this.isStraight(fiveCards);\n    if (isStraight[0]) {\n        return [5, isStraight[1]];\n    }\n    const isThreeOfAKind = this.isThreeOfAKind(fiveCards);\n    if (isThreeOfAKind[0]) {\n        return [4, isThreeOfAKind[1]];\n    }\n    const isTwoPair = this.isTwoPair(fiveCards);\n    if (isTwoPair[0]) {\n        return [3, isTwoPair[1]];\n    }\n    const isOnePair = this.isOnePair(fiveCards);\n    if (isOnePair[0]) {\n        return [2, isOnePair[1]];\n    }\n\n    const isNoPair = this.isNoPair(fiveCards);\n    if (isNoPair[0]) {\n        return [1, isNoPair[1]];\n    }\n}\n\n\nexport function bestHand(hand, board) {\n    const twoCardCombos = []\n    const threeCardCombos = []\n\n    for (let i = 0; i < hand.length - 1; i++) {\n        for (let j = i+1; j < hand.length; j++) {\n            twoCardCombos.push([hand[i], hand[j]])\n        }\n    }\n    for (let i = 0; i < board.length - 2; i++) {\n        for (let j = i + 1; j < board.length - 1; j++) {\n          for (let k = j + 1; k < board.length; k++) {\n            const combination = [board[i], board[j], board[k]];\n            threeCardCombos.push(combination);\n          }\n        }\n    }\n    let top = [0];\n    for (let i = 0; i < threeCardCombos.length; i++) {\n        for (let j = 0; j < twoCardCombos.length; j++) {\n            const newRank = this.getPokerHand([\n                twoCardCombos[j][0],\n                twoCardCombos[j][1],\n                threeCardCombos[i][0],\n                threeCardCombos[i][1],\n                threeCardCombos[i][2]\n            ])\n            if (newRank[0] > top[0]) {\n                top = newRank\n            } else if (newRank[0] === top[0]) {\n                const bestHand = this.comparingKickers(newRank[1], top[1])\n                if (bestHand !== 0) {\n                    top = [newRank[0], bestHand[1]]\n                }\n            }\n        }\n    }\n    return top\n}\n\nexport function comparingKickers(hand1, hand2) {\n    // separate case for straight A-5\n    // when comparing 5 high vs 6 high kicker, 5 high starts with A and 6 high starts with 6\n    if (hand1[0][0] === 'A' || hand2[0][0] === 'A') {\n        if (hand1[0][0] === 'A' && hand2[0][0] === 'A') {\n            return 0\n        } else if (hand1[0][0] === 'A') {\n            // hand1 is 5 high straight so hand2 must be higher\n            return [2, hand2]\n        } else {\n            return [1, hand1]\n        }\n    }\n\n    for (let i = 0; i < 5; i++) {\n        if (NUM_VAL[hand1[i][0]] > NUM_VAL[hand2[i][0]]) {\n            return [1, hand1]\n        } else if (NUM_VAL[hand1[i][0]] < NUM_VAL[hand2[i][0]]) {\n            return [2, hand2]\n        }\n    }\n    return 0\n}\n","export function activeHands() {\n    const active = {}\n    for (let i = 1; i < 6; i++) {\n        if (this[`p${i}`].active) {\n            active[`p${i}`] = [0, [this[`p${i}`].playerHand]]\n        }\n    }\n    return active\n}\n","export function equitiesPreFlop(hands, deck, totalOutcomes, chops) {\n    const trials = 2500\n\n    for (let t = 0; t < trials; t++) {\n        const boardCards = this.deck.dealCards(deck, 5);\n        const bestHands = {};\n\n        for (let i = 1; i < 7; i++) {\n            if (this.deck[`p${i}`].handFull()) {\n                bestHands[`p${i}`] = this.bestHand(this.deck[`p${i}`].playerHand, boardCards);\n            }\n        }\n\n        const winner = this.winner(bestHands);\n        const players = Object.keys(winner);\n\n        if (players.length > 1) {\n            chops++;\n        } else {\n            hands[players[0]][0] += 1;\n        }\n\n        totalOutcomes++;\n    }\n\n    return [hands, totalOutcomes]\n}\n\nexport function equitiesTwoMoreCards(board, hands, deck, totalOutcomes, chops, initial) {\n    // evaluate every combo of two hands\n    for (let m = initial; m < deck.length; m++) {\n        for (let n = m + 1; n < deck.length; n++) {\n\n            const bestHands = {}\n\n            // evaluate each player’s best hand with the board + 2 new cards\n            for (let i = 1; i < 7; i++) {\n                if (this.deck[`p${i}`].handFull()) {\n                    bestHands[`p${i}`] = this.bestHand(\n                        this.deck[`p${i}`].playerHand,\n                        board.concat([deck[m], deck[n]])\n                    )\n                }\n            }\n\n            // figure out winner(s)\n            const winner = this.winner(bestHands)\n            const players = Object.keys(winner)\n\n            if (players.length > 1) {\n                chops++\n            } else {\n                hands[players[0]][0] += 1\n            }\n            totalOutcomes += 1\n        }\n    }\n\n    return [hands, totalOutcomes]\n}\n\nexport function equitiesOneMoreCard(board, hands, deck, totalOutcomes, chops, initial) {\n    // totalOutcomes++\n    // h++\n    //FIX: maybe add a player 7 for chops\n    //Fix chops, make it not add up to 100%\n    for (let m = initial; m < deck.length; m++) {\n        // count += 1\n        const bestHands = {}\n        //FIX: Can probably check for active players and pass in as argument\n        for (let i = 1; i < 7; i++) {\n            if (this.deck[`p${i}`].handFull()) {\n                bestHands[`p${i}`] = (this.bestHand(this.deck[`p${i}`].playerHand, board.concat(deck[m])))\n            }\n        }\n        const winner = this.winner(bestHands)\n        const players = Object.keys(winner)\n        if (players.length > 1) {\n            chops++\n        } else {\n            hands[players[0]][0] += 1\n        }\n        // if (winner) this.highlightWinner(winner)\n        totalOutcomes += 1\n    }\n    return [hands, totalOutcomes]\n}\n","// Info button opens modal with info text\ndocument.addEventListener('DOMContentLoaded', () => {\n\tconst infoBtn = document.getElementById('infoButton');\n\tconst infoModal = document.getElementById('infoModal');\n\tconst closeModal = document.getElementById('closeModal');\n\tif (infoBtn && infoModal && closeModal) {\n\t\tinfoBtn.addEventListener('click', () => {\n\t\t\tinfoModal.style.display = 'block';\n\t\t});\n\t\tcloseModal.addEventListener('click', () => {\n\t\t\tinfoModal.style.display = 'none';\n\t\t});\n\t\twindow.addEventListener('click', (event) => {\n\t\t\tif (event.target === infoModal) {\n\t\t\t\tinfoModal.style.display = 'none';\n\t\t\t}\n\t\t});\n\t}\n});\nwindow.addEventListener('DOMContentLoaded', () => {\n\tconst loadingScreen = document.getElementById('loading-screen');\n\tif (loadingScreen) loadingScreen.style.display = 'none';\n});\n// // Hide loading screen when page is fully loaded\n// window.addEventListener('load', () => {\n// \tconst loadingScreen = document.getElementById('loading-screen');\n// \tif (loadingScreen) loadingScreen.style.display = 'none';\n// });\nimport { Game } from \"./scripts/game.js\";\n\nconst game = new Game()\n\n// function equityCalc() {\n\n//     let boardFull = true;\n//     for (let i = 1; i < 6; i++) {\n//         // replace is the board position\n//         const replace = document.getElementById(`board${i}`)\n//         if (replace.src.endsWith(\"/images/cardback.png\")) {\n//             boardFull = false\n//         }\n//     }\n\n//     if (boardFull) {\n//         let b1 = changeSrcToId(document.getElementById(`board1`).src)\n//         let b2 = changeSrcToId(document.getElementById(`board2`).src)\n//         let b3 = changeSrcToId(document.getElementById(`board3`).src)\n//         let b4 = changeSrcToId(document.getElementById(`board4`).src)\n//         let b5 = changeSrcToId(document.getElementById(`board5`).src)\n\n//         let p1 = changeSrcToId(document.getElementById(`p1-1`).src)\n//         let p2 = changeSrcToId(document.getElementById(`p1-2`).src)\n//         let p3 = changeSrcToId(document.getElementById(`p1-3`).src)\n//         let p4 = changeSrcToId(document.getElementById(`p1-4`).src)\n\n//         let p5 = changeSrcToId(document.getElementById(`p2-1`).src)\n//         let p6 = changeSrcToId(document.getElementById(`p2-2`).src)\n//         let p7 = changeSrcToId(document.getElementById(`p2-3`).src)\n//         let p8 = changeSrcToId(document.getElementById(`p2-4`).src)\n\n//         let board = []\n//         let player1 = []\n//         let player2 = []\n\n//         b1.then(function(result) {\n//             board.push(result)\n//         });\n//         b2.then(function(result) {\n//             board.push(result)\n//         });\n//         b3.then(function(result) {\n//             board.push(result)\n//         });\n//         b4.then(function(result) {\n//             board.push(result)\n//         });\n//         b5.then(function(result) {\n//             board.push(result)\n//         });\n\n//         p1.then(function(result) {\n//             player1.push(result)\n//         });\n//         p2.then(function(result) {\n//             player1.push(result)\n//         });\n//         p3.then(function(result) {\n//             player1.push(result)\n//         });\n//         p4.then(function(result) {\n//             player1.push(result)\n//         });\n//         p5.then(function(result) {\n//             player2.push(result)\n//         });\n//         p6.then(function(result) {\n//             player2.push(result)\n//         });\n//         p7.then(function(result) {\n//             player2.push(result)\n//         });\n//         p8.then(function(result) {\n//             player2.push(result)\n//         });\n\n\n//         let win = winner(player1, player2, board)\n//         if (JSON.stringify(win) == JSON.stringify(\"p1\")) {\n//             const player1 = document.getElementById(`p1`)\n//             player1.textContent = \"Winner\"\n\n//             const player2 = document.getElementById(`p2`)\n//             player2.textContent = \"Loser\"\n//         } else {\n//             const player1 = document.getElementById(`p1`)\n//             player1.textContent = \"Loser\"\n\n//             const player2 = document.getElementById(`p2`)\n//             player2.textContent = \"Winner\"\n//         }\n//     } else {\n//         let p1 = changeSrcToId(document.getElementById(`p1-1`).src)\n//         let p2 = changeSrcToId(document.getElementById(`p1-2`).src)\n//         let p3 = changeSrcToId(document.getElementById(`p1-3`).src)\n//         let p4 = changeSrcToId(document.getElementById(`p1-4`).src)\n\n//         let p5 = changeSrcToId(document.getElementById(`p2-1`).src)\n//         let p6 = changeSrcToId(document.getElementById(`p2-2`).src)\n//         let p7 = changeSrcToId(document.getElementById(`p2-3`).src)\n//         let p8 = changeSrcToId(document.getElementById(`p2-4`).src)\n\n//         let player1 = []\n//         let player2 = []\n\n//         p1.then(function(result) {\n//             player1.push(result)\n//         });\n//         p2.then(function(result) {\n//             player1.push(result)\n//         });\n//         p3.then(function(result) {\n//             player1.push(result)\n//         });\n//         p4.then(function(result) {\n//             player1.push(result)\n//         });\n//         p5.then(function(result) {\n//             player2.push(result)\n//         });\n//         p6.then(function(result) {\n//             player2.push(result)\n//         });\n//         p7.then(function(result) {\n//             player2.push(result)\n//         });\n//         p8.then(function(result) {\n//             player2.push(result)\n//         });\n//         let count1 = 0\n//         let count2 = 0\n//         for (let i = 0; i < 2000; i++) {\n//             let board2 = randomBoard(player1, player2)\n//             let b = board2\n//             // let win = winner(player1, player2, b)\n\n//             // if (JSON.stringify(win) == JSON.stringify(\"p1\")) {\n//             //     count1 += 1;\n//             // } else {\n//             //     count2 += 1;\n//             // }\n//         }\n//         const pl1 = document.getElementById(`p1`)\n//         let eq = (Math.random() * (80-50) + 50).toFixed(2)\n//         pl1.textContent = `Equity = ${eq}%`\n\n//         const pl2 = document.getElementById(`p2`)\n//         let eq2 = (100 - eq).toFixed(2)\n//         pl2.textContent = `Equity = ${eq2}%`\n//     }\n// }\n\n// function randomBoard(h1, h2) {\n//     let newDeck = remainingDeck(h1, h2)\n//     let board = []\n//     for (let i = 0; i < 5; i++) {\n//         const j = Math.floor(Math.random() * (newDeck.length));\n//         board.push(newDeck[j])\n//     }\n//     return board\n// }\n"],"names":["KEY","Board","deck","this","boardPos","onBoard","winner","addClickBoard","createReset","_initialBorder","prototype","pos","document","getElementById","addEventListener","e","target","id","_removeBorder","_addBorder","_clearWinnerBorders","removeFromBoard","console","log","full","length","playersReady","i","player","active","handFull","_countPlayers","count","swapImg","pos1","pos2","changePos","tempSrc","src","changeNextPos","pushOnBoard","cardKey","push","_removePlayers","_addPlayers","clearBoard","_createNextBorder","addToBoard","async","playerNum","arguments","undefined","cardDeck","highlight","highlightWinner","displayEquities","createWaitingMessages","boardKey","itemToRemove","item","changeSrcToId","index","indexOf","splice","playerHand","_calculateBestHands","bestHands","handtype","bestHand","includes","style","border","prevBorder","removeAttribute","nextBorder","_findNextBorder","handLength","Number","_createNewPlayerBorder","initial","_getHighlightedPos","slice","key","querySelector","classList","remove","text","childNodes","nodeValue","add","val","word","suit","changeIdToSrc","v","s","players","Object","keys","hand","handVal","handString","concat","filter","card","querySelectorAll","forEach","img","board","loadingScreen","display","setTimeout","equities","p","toFixed","NUM_VAL","Handtype","p1","p2","p3","p4","p5","p6","Deck","addClickCards","Player","Game","addDeckToPlayer","isFlush","fiveCards","sortHand","isStraight","sortedRanks","sortedHand","JSON","stringify","isFourOfAKind","pair","isFullHouse","isThreeOfAKind","isTwoPair","isOnePair","isNoPair","broadway","sort","cardA","cardB","valueA","cards","newHand","getPokerHand","flush","straight","twoCardCombos","threeCardCombos","j","k","combination","top","newRank","comparingKickers","hand1","hand2","activeHands","equitiesPreFlop","hands","totalOutcomes","chops","t","boardCards","dealCards","equitiesTwoMoreCards","m","n","equitiesOneMoreCard","bestHandsHash","currWinner","check","Promise","resolve","inDeck","result","lastPlayerAdded","lastPlayer","addToHand","cardsInDeck","cardsNeeded","Math","floor","random","setDeck","addAndRemovePlayerButton","activate","removeFromHand","infoBtn","infoModal","closeModal","window","event"],"sourceRoot":""}